<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASEvaAPIAvalonia</name>
    </assembly>
    <members>
        <member name="T:ASEva.UIAvalonia.APIInfo">
            <summary>
            version=1.0.6
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.APIInfo.GetAPIVersion">
            \~English
            <summary>
            (api:avalonia=1.0.0) Get API version
            </summary>
            <returns>The API version</returns>
            \~Chinese
            <summary>
            (api:avalonia=1.0.0) 获取API版本
            </summary>
            <returns>API版本</returns>
        </member>
        <member name="M:ASEva.UIAvalonia.APIInfo.GetAvaloniaLibVersion">
            \~English
            <summary>
            (api:avalonia=1.0.0) Get Avalonia library's version
            </summary>
            <returns>The Avalonia library's version</returns>
            \~Chinese
            <summary>
            (api:avalonia=1.0.0) 获取Avalonia库版本
            </summary>
            <returns>Avalonia库版本</returns>
        </member>
        <member name="M:ASEva.UIAvalonia.APIInfo.GetThirdPartyNotices">
            \~English
            <summary>
            (api:avalonia=1.0.0) Get 3rd party software license notices
            </summary>
            <returns>The 3rd party software license notices</returns>
            \~Chinese
            <summary>
            (api:avalonia=1.0.0) 获取使用的第三方软件版权声明
            </summary>
            <returns>键为标题，值为版权声明</returns>
        </member>
        <member name="T:ASEva.UIAvalonia.App">
            \~English
            <summary>
            (api:avalonia=1.0.0) Utility functions for Avalonia application
            </summary>
            \~Chinese
            <summary>
            (api:avalonia=1.0.0) Avalonia应用程序相关的实用函数
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.App.Init">
            \~English
            <summary>
            Initialize application
            </summary>
            <returns>Whether initialization is successfull</returns>
            \~Chinese
            <summary>
            应用程序初始化
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:ASEva.UIAvalonia.App.Run(Avalonia.Controls.Window)">
            \~English
            <summary>
            Run application
            </summary>
            <param name="mainWindow">The main window</param>
            \~Chinese
            <summary>
            运行应用程序
            </summary>
            <param name="mainWindow">主窗口</param>
        </member>
        <member name="M:ASEva.UIAvalonia.App.ShowMessageBox(System.String,System.String,CustomMessageBox.Avalonia.MessageBoxIcon,CustomMessageBox.Avalonia.MessageBoxButtons)">
            \~English
            <summary>
            (api:avalonia=1.0.2) Show message box (mainly for calling outside App.Run)
            </summary>
            \~Chinese
            <summary>
            (api:avalonia=1.0.2) 显示消息框（主要针对App.Run之外时使用）
            </summary>
        </member>
        <member name="P:ASEva.UIAvalonia.App.WorkPath">
            \~English
            <summary>
            Get application's work path
            </summary>
            <value>Work path</value>
            \~Chinese
            <summary>
            获取应用程序的工作路径
            </summary>
            <value>工作路径</value>
        </member>
        <member name="T:ASEva.UIAvalonia.AvaloniaApplication">
            \~English
            <summary>
            (api:avalonia=1.0.0) Default application object
            </summary>
            \~Chinese
            <summary>
            (api:avalonia=1.0.0) 默认的应用程序对象
            </summary>
        </member>
        <member name="T:ASEva.UIAvalonia.ConfigPanel">
            \~English
            <summary>
            (api:avalonia=1.0.0) UI panel for configuration
            </summary>
            \~Chinese
            <summary>
            (api:avalonia=1.0.0) 配置界面控件，用于实现可视化配置
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.ConfigPanel.OnInitSize(System.String)">
            \~English
            <summary>
            [Optional] Called while initializing panel's size
            </summary>
            <param name="config">Configuration string</param>
            \~Chinese
            <summary>
            [可选实现] 在初始化控件尺寸时被调用
            </summary>
            <param name="config">配置字符串</param>
        </member>
        <member name="M:ASEva.UIAvalonia.ConfigPanel.OnInit(System.String)">
            \~English
            <summary>
            [Optional] Called while initializing the panel
            </summary>
            <param name="config">Configuration string</param>
            \~Chinese
            <summary>
            [可选实现] 在配置界面控件初始化时被调用
            </summary>
            <param name="config">配置字符串</param>
        </member>
        <member name="M:ASEva.UIAvalonia.ConfigPanel.OnRelease">
            \~English
            <summary>
            [Optional] Called before destroying the panel
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在配置界面控件销毁前被调用
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.ConfigPanel.OnUpdateUI">
            \~English
            <summary>
            [Optional] Called while updating the panel's UI
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在需要更新界面时被调用
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.ConfigPanel.OnHandleModal">
            \~English
            <summary>
            [Optional] Called in the main loop, for running modal dialog
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在主循环中被调用，可进行模态对话
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.ConfigPanel.Close">
            \~English
            <summary>
            Close the container holding the panel
            </summary>
            \~Chinese
            <summary>
            关闭配置界面
            </summary>
        </member>
        <member name="E:ASEva.UIAvalonia.ConfigPanel.CloseRequested">
            \~English
            <summary>
            Implement closing the panel container in this event
            </summary>
            \~Chinese
            <summary>
            在此事件中实现配置界面的关闭
            </summary>
        </member>
        <member name="T:ASEva.UIAvalonia.EtoEmbedder">
            \~English
            <summary>
            (api:avalonia=1.0.0) For embedding Eto control in Avalonia GUI
            </summary>
            \~Chinese
            <summary>
            (api:avalonia=1.0.0) 用于在Avalonia界面中嵌入Eto控件
            </summary>
        </member>
        <member name="P:ASEva.UIAvalonia.EtoEmbedder.EtoControl">
            \~English
            <summary>
            The Eto control to be embedded. Should be set just after calling constructor's InitializeComponent
            </summary>
            \~Chinese
            <summary>
            待嵌入的Eto控件，需要在构造函数调用InitializeComponent后立即设置
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.EtoEmbedder.RunIteration">
            \~English
            <summary>
            Not for user
            </summary>
            \~Chinese
            <summary>
            无需直接调用
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.EtoEmbedDialog.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:ASEva.UIAvalonia.TextResourceExtensions">
            \~English
            <summary>
            (api:avalonia=1.0.3) Extensions for adding text resource
            </summary>
            \~Chinese
            <summary>
            (api:avalonia=1.0.3) 方便添加文本资源的扩展
            </summary>
        </member>
        <member name="T:ASEva.UIAvalonia.WindowPanel">
            \~English
            <summary>
            (api:avalonia=1.0.0) UI panel for child window
            </summary>
            \~Chinese
            <summary>
            (api:avalonia=1.0.0) 窗口控件，用于实现窗口组件的实际功能
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.WindowPanel.OnInitSize(System.String)">
            \~English
            <summary>
            [Optional] Called while initializing panel's size
            </summary>
            <param name="config">Configuration string</param>
            \~Chinese
            <summary>
            [可选实现] 在初始化控件尺寸时被调用
            </summary>
            <param name="config">配置字符串</param>
        </member>
        <member name="M:ASEva.UIAvalonia.WindowPanel.OnInit(System.String)">
            \~English
            <summary>
            [Optional] Called while initializing the panel
            </summary>
            <param name="config">Configuration string</param>
            \~Chinese
            <summary>
            [可选实现] 在配置界面控件初始化时被调用
            </summary>
            <param name="config">配置字符串</param>
        </member>
        <member name="M:ASEva.UIAvalonia.WindowPanel.OnGetConfig">
            \~English
            <summary>
            [Optional] Called while getting the configuration string
            </summary>
            <returns>Configuration string</returns>
            \~Chinese
            <summary>
            [可选实现] 获取配置字符串时被调用
            </summary>
            <returns>配置字符串</returns>
        </member>
        <member name="M:ASEva.UIAvalonia.WindowPanel.OnInputData(System.Object)">
            \~English
            <summary>
            [Optional] Called while new data arrived. If there's a sample buffer, use ASEva.Sample.ClipWithBufferBegin to remove data outside the buffer range after adding new sample. In addition, since ASEva.WindowPanel.OnUpdateUI won't be called while the child window is hidden, you can use ASEva.Samples.ManualTriggerSample to perform background processing (ManualTriggerSample's frequency is 50Hz)
            </summary>
            <param name="data">New data, can be ASEva.GeneralSample , ASEva.Samples.ManualTriggerSample , ASEva.Samples.AudioFrameSample , ASEva.Samples.PointCloudSample , ASEva.Samples.BusDataPack , ASEva.Samples.SignalsData , ASEva.EventData , ASEva.SceneData , etc.</param>
            \~Chinese
            <summary>
            [可选实现] 在获得新数据时被调用。如果存在样本缓存，则需要在添加至缓存后使用 ASEva.Sample.ClipWithBufferBegin 将缓存范围外数据移除。另外，由于窗口隐藏时将不会调用 ASEva.WindowPanel.OnUpdateUI ，所以可以在此函数中的data为 ASEva.Samples.ManualTriggerSample 时进行后台处理（ManualTriggerSample频率为50Hz）
            </summary>
            <param name="data">新数据，包括通用样本 ASEva.GeneralSample , 手动触发器样本 ASEva.Samples.ManualTriggerSample , 音频帧样本 ASEva.Samples.AudioFrameSample , 点云帧样本 ASEva.Samples.PointCloudSample , 总线数据 ASEva.Samples.BusDataPack , 信号数据 ASEva.Samples.SignalsData , 事件数据 ASEva.EventData , 场景片段描述 ASEva.SceneData 等类型</param>
        </member>
        <member name="M:ASEva.UIAvalonia.WindowPanel.OnResetData">
            \~English
            <summary>
            [Optional] Called while needed to reset data buffer
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在需要重置数据缓存时被调用
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.WindowPanel.OnStartSession">
            \~English
            <summary>
            [Optional] Called while starting a session
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在每轮开始时被调用
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.WindowPanel.OnStopSession">
            \~English
            <summary>
            [Optional] Called while stopping a session
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在每轮结束时被调用
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.WindowPanel.OnUpdateUI">
            \~English
            <summary>
            [Optional] Called while updating the panel's UI. All UI related updating should be put here. Note that this function won't be called when the child window is hidden
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在需要更新界面时被调用。所有与界面相关的更新应全部放在此函数内实现。需要注意，窗口隐藏时将不会调用此函数
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.WindowPanel.OnHandleModal">
            \~English
            <summary>
            [Optional] Called in the main loop, for running modal dialog
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在主循环中被调用，可进行模态对话
            </summary>
        </member>
        <member name="M:ASEva.UIAvalonia.WindowPanel.OnRelease">
            \~English
            <summary>
            [Optional] Called before destroying the panel
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在窗口控件销毁前被调用
            </summary>
        </member>
    </members>
</doc>
