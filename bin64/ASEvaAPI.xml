<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASEvaAPI</name>
    </assembly>
    <members>
        <member name="T:ASEva.Agency">
            <summary>
            (api:app=2.0.0) 集合了ASEva所有主要API
            </summary>
        </member>
        <member name="M:ASEva.Agency.GetAppStatus">
            <summary>
            获取ASEva当前的运行状态
            </summary>
            <returns>ASEva运行状态</returns>
        </member>
        <member name="M:ASEva.Agency.GetAppMode">
            <summary>
            获取ASEva当前的运行模式
            </summary>
            <returns>ASEva运行模式</returns>
        </member>
        <member name="M:ASEva.Agency.IsFileOutputEnabled">
            <summary>
            检查是否为在线采集或离线处理生成模式
            </summary>
            <returns>是否为在线采集或离线处理生成模式</returns>
        </member>
        <member name="M:ASEva.Agency.GetAppLanguage">
            <summary>
            获取ASEva当前的显示语言
            </summary>
            <returns>语言ID，如en表示英文，ch表示中文等</returns>
        </member>
        <member name="M:ASEva.Agency.GetInterestTime">
            <summary>
            获取ASEva当前的兴趣时间点
            </summary>
            <returns>在时间线上的兴趣点，单位秒</returns>
        </member>
        <member name="M:ASEva.Agency.GetInterestTimestamp">
            <summary>
            获取ASEva当前的兴趣时间戳
            </summary>
            <returns>兴趣点的时间戳(包括年月日时分秒，毫秒)，若无数据则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetInterestTarget">
            <summary>
            (api:app=2.3.0) 获取兴趣时间点目标
            </summary>
            <returns>兴趣时间点目标，可能超出数据缓存范围</returns>
        </member>
        <member name="M:ASEva.Agency.GetBufferRange">
            <summary>
            获取ASEva数据缓存范围
            </summary>
            <returns>数据缓存范围</returns>
        </member>
        <member name="M:ASEva.Agency.GetSessionList">
            <summary>
            获取当前数据层级下的所有session
            </summary>
            <returns>Session ID列表，ID为数据起始的系统时间</returns>
        </member>
        <member name="M:ASEva.Agency.GetFilteredSessionList">
            <summary>
            获取当前数据层级下筛选后的所有session
            </summary>
            <returns>Session ID列表，ID为数据起始的系统时间</returns>
        </member>
        <member name="M:ASEva.Agency.GetGenerationList">
            <summary>
            获取当前数据目录下的所有generation
            </summary>
            <returns>Generation ID列表</returns>
        </member>
        <member name="M:ASEva.Agency.GetSessionPath(System.DateTime)">
            <summary>
            获取某个session数据在硬盘的根路径
            </summary>
            <param name="session">希望获取的session ID</param>
            <returns>Session数据的根路径，若不存在或不属于当前层级则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetSessionPublicDataPath(System.DateTime)">
            <summary>
            获取某个session的公共数据在硬盘的根路径
            </summary>
            <param name="session">希望获取的session ID</param>
            <returns>Session公共数据的根路径，若不存在或不属于当前层级则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetSessionLayer(System.DateTime)">
            <summary>
            (api:app=2.4.0) 获取某个session所属数据层级
            </summary>
            <param name="session">Session ID</param>
            <returns>数据层级，其中‘.’表示根路径下的session，'..'表示根路径即session</returns>
        </member>
        <member name="M:ASEva.Agency.GetSessionFolderName(System.DateTime)">
            <summary>
            (api:app=2.4.0) 获取某个session的文件夹名
            </summary>
            <param name="session">Session ID</param>
            <returns>文件夹名</returns>
        </member>
        <member name="M:ASEva.Agency.GetGenerationPath(System.DateTime,System.String)">
            <summary>
            获取某个session中的某个generation在硬盘的根路径
            </summary>
            <param name="session">希望获取generation所属的session ID</param>
            <param name="generation">希望获取的generation ID</param>
            <returns>Generation数据的根路径，若不存在或不属于当前层级则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetFinishedSessions(System.String)">
            <summary>
            获取当前层级下某个generation下所有处理完毕的session
            </summary>
            <param name="generation">目标generation</param>
            <returns>处理完毕的session ID列表</returns>
        </member>
        <member name="M:ASEva.Agency.RefreshGenerations">
            <summary>
            刷新当前层级下所有session的generation
            </summary>
        </member>
        <member name="M:ASEva.Agency.GetCurrentDataGeneration">
            <summary>
            获取当前输入数据的generation ID
            </summary>
            <returns>当前输入数据的generation ID，空表示输入数据为原始数据</returns>
        </member>
        <member name="M:ASEva.Agency.GetCurrentSessionGUID">
            <summary>
            获取当前session的GUID
            </summary>
            <returns>当前session的GUID，若未运行则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetStartTimeLocal(System.DateTime)">
            <summary>
            获取某个session的本地开始时间（相对时间戳=0）
            </summary>
            <param name="session">希望获取本地开始时间的session ID</param>
            <returns>本地开始时间，若空表示无此信息或session不在当前层级</returns>
        </member>
        <member name="M:ASEva.Agency.GetStartTimeUTC(System.DateTime)">
            <summary>
            获取某个session的UTC开始时间（相对时间戳=0）
            </summary>
            <param name="session">希望获取UTC开始时间的session ID</param>
            <returns>UTC开始时间，若空表示无此信息或session不在当前层级</returns>
        </member>
        <member name="M:ASEva.Agency.GetTimestampLocal(System.DateTime,System.Double)">
            <summary>
            获取某个session上指定相对时间对应的本地时间
            </summary>
            <param name="session">Session ID</param>
            <param name="timeOffset">相对时间 (时间偏置)</param>
            <returns>本地时间戳</returns>
        </member>
        <member name="M:ASEva.Agency.GetTimestampUTC(System.DateTime,System.Double)">
            <summary>
            获取某个session上指定相对时间对应的UTC时间
            </summary>
            <param name="session">Session ID</param>
            <param name="timeOffset">相对时间 (时间偏置)</param>
            <returns>UTC时间戳</returns>
        </member>
        <member name="M:ASEva.Agency.GetTimeRatioToLocal(System.DateTime)">
            <summary>
            获取某个session上相对时间转为本地时间的时间比例
            </summary>
            <param name="session">Session ID</param>
            <returns>相对时间转为本地时间的时间比例</returns>
        </member>
        <member name="M:ASEva.Agency.GetTimeRatioToUTC(System.DateTime)">
            <summary>
            获取某个session上相对时间转为UTC时间的时间比例
            </summary>
            <param name="session">Session ID</param>
            <returns>相对时间转为UTC时间的时间比例</returns>
        </member>
        <member name="M:ASEva.Agency.GetDataPath">
            <summary>
            获取当前数据目录的路径
            </summary>
            <returns>当前数据目录的路径，若未设置返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetSubDataPathes">
            <summary>
            (api:app=2.4.0) 获取所有子数据目录的路径
            </summary>
            <returns>所有子数据目录的路径，目录不存在则为null</returns>
        </member>
        <member name="M:ASEva.Agency.SetSubDataPath(System.Int32,System.String)">
            <summary>
            (api:app=2.4.0) 设置子数据目录的路径
            </summary>
            <param name="subIndex">子数据目录序号，0~3</param>
            <param name="path">子数据目录的路径</param>
        </member>
        <member name="M:ASEva.Agency.GetDataLayers">
            <summary>
            (api:app=2.4.0) 获取所有有效的数据层级
            </summary>
            <returns>数据层级列表，其中‘.’表示根路径下的session，'..'表示根路径即session</returns>
        </member>
        <member name="M:ASEva.Agency.AddDataLayer(System.String)">
            <summary>
            (api:app=2.4.0) 添加新的数据层级
            </summary>
            <param name="layer">数据层级</param>
        </member>
        <member name="M:ASEva.Agency.DeleteDataLayer(System.String)">
            <summary>
            (api:app=2.4.0) 移除数据层级，并删除所有文件至回收站
            </summary>
            <param name="layer">数据层级</param>
        </member>
        <member name="M:ASEva.Agency.GetCurrentDataLayer">
            <summary>
            (api:app=2.4.0) 获取当前的数据层级
            </summary>
            <returns>数据层级，其中null表示所有层级，‘.’表示根路径下的session，'..'表示根路径即session</returns>
        </member>
        <member name="M:ASEva.Agency.SetCurrentDataLayer(System.String)">
            <summary>
            (api:app=2.4.0) 设置当前的数据层级
            </summary>
            <param name="layer">数据层级，其中null表示所有层级，‘.’表示根路径下的session，'..'表示根路径即session</param>
        </member>
        <member name="M:ASEva.Agency.GetGlobalPublicDataPath">
            <summary>
            获取当前全局公共数据目录的路径
            </summary>
            <returns>当前全局公共数据目录的路径，若未设置返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetConfigFilesRoot">
            <summary>
            获取配置文件根目录路径
            </summary>
            <returns>配置文件根目录路径</returns>
        </member>
        <member name="M:ASEva.Agency.GetAppFilesRoot">
            <summary>
            获取应用数据和文档文件根目录路径
            </summary>
            <returns>应用数据和文档文件根目录路径</returns>
        </member>
        <member name="M:ASEva.Agency.GetTempFilesRoot">
            <summary>
            获取临时文件根目录路径
            </summary>
            <returns>临时文件根目录路径</returns>
        </member>
        <member name="M:ASEva.Agency.SendBusMessage(ASEva.BusMessage)">
            <summary>
            设定想要发送的总线报文，可周期性发送，也可单次发送（仅在线模式可用）
            </summary>
            <param name="message"> 想要发送的报文信息</param>
        </member>
        <member name="M:ASEva.Agency.SendBusMessage(System.String,System.Nullable{System.UInt32})">
            <summary>
            设定想要发送的总线报文（该报文需设置绑定），可周期性发送，也可单次发送（仅在线模式可用）
            </summary>
            <param name="messageID">绑定的报文ID</param>
            <param name="interval">报文发送周期，单位毫秒（至少为10），若设为null则只发送一次</param>
        </member>
        <member name="M:ASEva.Agency.SendRawData(System.String,System.Double[],System.Byte[])">
            <summary>
            添加想要采集的原始数据信息（仅在线模式可用）
            </summary>
            <param name="protocol">原始数据协议名称，对应input/raw/raw.csv首列文字</param>
            <param name="values">数值数据</param>
            <param name="binary">二进制数据</param>
        </member>
        <member name="M:ASEva.Agency.SendManualTrigger(System.Int32)">
            <summary>
            发送手动触发器信号
            </summary>
            <param name="channel">手动触发器通道，0~15</param>
        </member>
        <member name="M:ASEva.Agency.GetGraphData(System.DateTime,System.Int32)">
            <summary>
            获取图表对象
            </summary>
            <param name="session">想要获取图表的session ID</param>
            <param name="id">图表的ID，通过 ASEva.GraphDefinition.GetHashCode 获取</param>
            <returns>图表对象，若不存在或不属于当前层级则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.AddSceneData(ASEva.SceneData)">
            <summary>
            添加一个场景片段
            </summary>
            <param name="scene">想要添加的场景片段描述</param>
        </member>
        <member name="M:ASEva.Agency.GetDeviceStatus(System.String)">
            <summary>
            获取设备状态
            </summary>
            <param name="type">设备的类型ID，在插件的info.txt中以type字段描述</param>
            <returns>返回设备状态</returns>
        </member>
        <member name="M:ASEva.Agency.GetAllDeviceStatus">
            <summary>
            (api:app=2.3.0) 获取所有设备状态
            </summary>
            <returns>设备状态表，键为设备的类型ID，在插件的info.txt中以type字段描述</returns>
        </member>
        <member name="M:ASEva.Agency.GetChildDeviceStatus(System.String)">
            <summary>
            获取各子设备的设备状态
            </summary>
            <param name="type">设备的类型ID，在插件的info.txt中以type字段描述</param>
            <returns>各子设备的设备状态</returns>
        </member>
        <member name="M:ASEva.Agency.Print(System.String)">
            <summary>
            打印信息至Debugger
            </summary>
            <param name="text">想要打印的文本</param>
        </member>
        <member name="M:ASEva.Agency.Log(System.String,ASEva.LogLevel)">
            <summary>
            添加清单信息，在Log窗口和状态栏显示信息
            </summary>
            <param name="text">想要显示的信息</param>
            <param name="level">清单信息级别</param>
        </member>
        <member name="M:ASEva.Agency.IsMessageValid(System.String,System.Boolean)">
            <summary>
            查看报文配置是否有效，如dbc文件加载不正确则可能导致无效
            </summary>
            <param name="messageID">报文的全局唯一ID</param>
            <param name="optional">是否为可选配置</param>
            <returns>是否有效</returns>
        </member>
        <member name="M:ASEva.Agency.IsSignalValid(System.String,System.Boolean)">
            <summary>
            查看信号配置是否有效，如dbc文件加载不正确，插件文件未加载都可能导致无效
            </summary>
            <param name="signalID">信号的全局唯一ID</param>
            <param name="optional">是否为可选配置</param>
            <returns>是否有效</returns>
        </member>
        <member name="M:ASEva.Agency.GetSignalNamesOfBusMessage(System.String)">
            <summary>
            获取指定报文ID下的所有信号名称
            </summary>
            <param name="messageID">报文的全局唯一ID</param>
            <returns>信号列表，若该报文不存在则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.IsInternetConnected">
            <summary>
            当前互联网是否已连接
            </summary>
            <returns>是否已连接互联网</returns>
        </member>
        <member name="M:ASEva.Agency.GetMemoryCapacity">
            <summary>
            获取内存容量
            </summary>
            <returns>内存容量，单位为字节，获取失败时返回0</returns>
        </member>
        <member name="M:ASEva.Agency.CallWebApi(System.String,ASEva.WebApiContext)">
            <summary>
            非阻塞调用Web API (GET)
            </summary>
            <param name="request">调用请求</param>
            <param name="context">调用上下文。由于本函数为非阻塞，在结束后需要通过该对象在未来时刻获取调用状态和响应字符串</param>
        </member>
        <member name="M:ASEva.Agency.CallWebApiPost(System.String,System.Byte[],ASEva.WebApiContext)">
            <summary>
            非阻塞调用Web API (POST)，内容类型默认为 ASEva.WebPostContentType.WWWFormUrlEncoded
            </summary>
            <param name="request">调用请求</param>
            <param name="body">提交的二进制数据body</param>
            <param name="context">调用上下文。由于本函数为非阻塞，在结束后需要通过该对象在未来时刻获取调用状态和响应字符串</param>
        </member>
        <member name="M:ASEva.Agency.CallWebApiPost(System.String,System.Byte[],ASEva.WebPostContentType,ASEva.WebApiContext)">
            <summary>
            (api:app=2.0.4) 非阻塞调用Web API (POST)，指定内容类型
            </summary>
            <param name="request">调用请求</param>
            <param name="body">提交的二进制数据body</param>
            <param name="contentType">内容类型</param>
            <param name="context">调用上下文。由于本函数为非阻塞，在结束后需要通过该对象在未来时刻获取调用状态和响应字符串</param>
        </member>
        <member name="M:ASEva.Agency.GetChannelAliasName(System.String)">
            <summary>
            获取数据通道别名
            </summary>
            <param name="key">数据通道关键字，格式为"协议名@通道序号"，通道序号从0开始，协议名中带"v"字版本号的可向下兼容。视频协议名为video</param>
            <returns>数据通道别名，若未找到返回null</returns>
        </member>
        <member name="M:ASEva.Agency.IsSampleChannelConflict(System.String)">
            <summary>
            (api:app=2.3.0) 检查样本数据通道是否冲突（有多个模块输出相同协议和通道的样本数据）
            </summary>
            <param name="protocol">样本通道协议，格式为"协议名@通道序号"，通道序号从0开始，协议名中带"v"字版本号的可向下兼容</param>
            <returns>是否冲突</returns>
        </member>
        <member name="M:ASEva.Agency.IsInputChannelAvailable(System.String)">
            <summary>
            检查指定的输入样本通道是否可用
            </summary>
            <param name="protocol">样本通道关键字，格式为"协议名@通道序号"，通道序号从0开始，协议名中带"v"字版本号的可向下兼容</param>
            <returns>该通道是否可用</returns>
        </member>
        <member name="M:ASEva.Agency.GetSampleTitle(System.String)">
            <summary>
            获取指定样本通道对应的标题
            </summary>
            <param name="protocol">样本通道关键字，格式为"协议名@通道序号"，通道序号从0开始</param>
            <returns>样本标题，null表示通道不存在或该样本通道无标题</returns>
        </member>
        <member name="M:ASEva.Agency.GetManualTriggerNames">
            <summary>
            获得手动触发器所有通道的名称
            </summary>
            <returns>名称列表</returns>
        </member>
        <member name="M:ASEva.Agency.GetManualTriggerName(System.Int32)">
            <summary>
            获得手动触发器通道的名称
            </summary>
            <param name="index">通道序号，0~15</param>
            <returns>手动触发器通道的名称，若序号超出范围则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.SetManualTriggerName(System.Int32,System.String)">
            <summary>
            设定手动触发器通道的名称
            </summary>
            <param name="index">通道序号，0~15</param>
            <param name="name">手动触发器通道的名称，若值为空则忽略</param>
        </member>
        <member name="M:ASEva.Agency.AddSignalReference(System.String)">
            <summary>
            添加信号引用，在 ASEva.WindowPanel.OnInputData 中可获得该信号的数据
            </summary>
            <param name="signalID">信号ID</param>
        </member>
        <member name="M:ASEva.Agency.RemoveSignalReference(System.String)">
            <summary>
            移除信号引用
            </summary>
            <param name="signalID">信号ID</param>
        </member>
        <member name="M:ASEva.Agency.RunStandaloneTask(System.Object,System.String,System.String,System.String@)">
            <summary>
            运行一个独立处理任务，运行过程中将弹出进度条并禁用其他操作
            </summary>
            <param name="caller">调用此API的对象，可为以下类型： ASEva.MainWorkflow , ASEva.WindowClass , ASEva.DialogClass , WindowPanel, ConfigPanel等</param>
            <param name="taskClassID">任务组件的类别ID</param>
            <param name="config">配置的字符串描述</param>
            <param name="returnValue">任务的返回值信息</param>
            <returns>任务运行结果</returns>
        </member>
        <member name="M:ASEva.Agency.SetInterestTimestamp(System.DateTime)">
            <summary>
            设置兴趣时间戳
            </summary>
            <param name="targetTimestamp">目标时间戳</param>
        </member>
        <member name="M:ASEva.Agency.SetInterestTime(System.Double)">
            <summary>
            设置兴趣时间点
            </summary>
            <param name="targetTimeline">目标时间点</param>
        </member>
        <member name="M:ASEva.Agency.DeleteToRecycleBin(System.String)">
            <summary>
            删除指定文件或文件夹至回收站
            </summary>
            <param name="path">文件或文件夹路径</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:ASEva.Agency.SetGlobalVariable(System.String,System.String)">
            <summary>
            设置全局变量
            </summary>
            <param name="key">全局变量key，若为null或""则忽略</param>
            <param name="value">全局变量value，若为null则忽略</param>
        </member>
        <member name="M:ASEva.Agency.GetGlobalVariable(System.String,System.String)">
            <summary>
            获取全局变量
            </summary>
            <param name="key">全局变量key</param>
            <param name="defaultValue">默认值，即当key为null、""、或不存在时返回的值</param>
            <returns>全局变量value</returns>
        </member>
        <member name="M:ASEva.Agency.SetGlobalParameter(System.String,System.String)">
            <summary>
            设置全局参数
            </summary>
            <param name="key">全局参数key，若为null或""则忽略</param>
            <param name="value">全局参数value，若为null则忽略</param>
        </member>
        <member name="M:ASEva.Agency.GetGlobalParameter(System.String,System.String)">
            <summary>
            获取全局参数
            </summary>
            <param name="key">全局参数key</param>
            <param name="defaultValue">默认值，即当key为null、""、或不存在时返回的值</param>
            <returns>全局参数value</returns>
        </member>
        <member name="M:ASEva.Agency.GetGlobalPath(System.String)">
            <summary>
            获取全局路径
            </summary>
            <param name="key">全局路径key</param>
            <returns>以分号分割的全局路径value（仅返回存在的部分），若key为null、""则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.SetGlobalPath(System.String,System.String)">
            <summary>
            设置全局路径
            </summary>
            <param name="key">全局路径key，若为null或""则忽略</param>
            <param name="path">以分号分割的全局路径value，不存在的部分将被忽略</param>
        </member>
        <member name="M:ASEva.Agency.GetBusProtocolFilesInfo">
            <summary>
            获取所有总线通道上的协议文件信息
            </summary>
            <returns>总线协议文件信息列表</returns>
        </member>
        <member name="M:ASEva.Agency.GetBusProtocolFileChannel(System.String)">
            <summary>
            获取总线协议文件当前配置于哪个通道
            </summary>
            <param name="fileID">文件ID</param>
            <returns>总线通道（1~16），若未配置则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetBusFloat32Signals">
            <summary>
            获取所有作为32位浮点解析的信号列表
            </summary>
            <returns>信号ID列表</returns>
        </member>
        <member name="M:ASEva.Agency.GetBusMessageFPS(System.Int32,System.UInt32)">
            <summary>
            获取指定通道收到的指定ID报文的帧率
            </summary>
            <param name="channel">总线通道，1~16</param>
            <param name="localID">通道内的报文ID</param>
            <returns>每秒帧率，0表示无效</returns>
        </member>
        <member name="M:ASEva.Agency.GetBusMessageInfo(System.Int32,System.UInt32)">
            <summary>
            获取指定通道上指定ID报文信息
            </summary>
            <param name="channel">总线通道，1~16</param>
            <param name="localID">通道内的报文ID</param>
            <returns>总线报文信息，无信息则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetBusMessageInfo(System.String)">
            <summary>
            获取指定ID的总线报文的信息
            </summary>
            <param name="busMessageID">总线报文ID</param>
            <returns>总线报文的信息，报文不存在则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.IsBusMessageBinded(System.String)">
            <summary>
            已弃用，应使用 ASEva.Agency.IsBusMessageBound
            </summary>
        </member>
        <member name="M:ASEva.Agency.IsBusMessageBound(System.String)">
            <summary>
            (api:app=2.3.0) 获取总线报文是否已绑定发送
            </summary>
            <param name="busMessageID">总线报文ID</param>
            <returns>是否已绑定</returns>
        </member>
        <member name="M:ASEva.Agency.GetEventHandles">
            <summary>
            返回事件对象列表
            </summary>
            <returns>事件对象列表</returns>
        </member>
        <member name="M:ASEva.Agency.GetEventInfo(System.Object)">
            <summary>
            返回指定事件对象的完整信息
            </summary>
            <param name="eventHandle">事件对象</param>
            <returns>事件完整信息，null表示事件对象无效或信息不完整</returns>
        </member>
        <member name="M:ASEva.Agency.RemoveEvent(System.Object)">
            <summary>
            移除指定事件对象
            </summary>
            <param name="eventHandle">事件对象</param>
        </member>
        <member name="M:ASEva.Agency.SetEventComment(System.Object,System.String)">
            <summary>
            设置指定事件的注释
            </summary>
            <param name="eventHandle">事件对象</param>
            <param name="comment">事件注释</param>
        </member>
        <member name="M:ASEva.Agency.StartReplay(System.Double,System.Nullable{System.Double})">
            <summary>
            切换至回放模式并开始回放
            </summary>
            <param name="startTimeline">回放开始时间，单位秒</param>
            <param name="interestTarget">目标兴趣点，单位秒（空表示不设置兴趣点）</param>
        </member>
        <member name="M:ASEva.Agency.StartReplay(System.Boolean,System.Double,System.Nullable{System.Double})">
            <summary>
            (api:app=2.3.0) 切换至回放模式并开始回放
            </summary>
            <param name="force">是否强制开始，强制切换模式可能等候相当长时间</param>
            <param name="startTimeline">回放开始时间，单位秒</param>
            <param name="interestTarget">目标兴趣点，单位秒（空表示不设置兴趣点）</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:ASEva.Agency.StartOnline(System.String,System.Boolean)">
            <summary>
            切换至在线模式并开始预览或采集
            </summary>
            <param name="controllerName">控制者名称，用于独占控制模式</param>
            <param name="previewOnly">是否为预览</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:ASEva.Agency.StartOnline(System.Boolean,System.Boolean)">
            <summary>
            切换至在线模式并开始预览或采集
            </summary>
            <param name="force">是否强制开始，强制切换模式可能等候相当长时间</param>
            <param name="previewOnly">是否为预览</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:ASEva.Agency.StartOnline(System.Boolean,System.Boolean,System.String)">
            <summary>
            (api:app=2.4.0) 切换至在线模式并开始预览或采集
            </summary>
            <param name="force">是否强制开始，强制切换模式可能等候相当长时间</param>
            <param name="previewOnly">是否为预览</param>
            <param name="sessionDirName">采集时，写入session数据的文件夹名（若已存在且强制开始时，则使用默认的日期格式）</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:ASEva.Agency.StartOffline(System.Boolean,System.Boolean)">
            <summary>
            切换至离线模式并开始预览或后处理
            </summary>
            <param name="force">是否强制开始，强制切换模式可能等候相当长时间</param>
            <param name="previewOnly">是否为预览</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:ASEva.Agency.StopRunning">
            <summary>
            停止采集、处理、回放
            </summary>
        </member>
        <member name="M:ASEva.Agency.StopRunning(System.String)">
            <summary>
            停止采集、处理、回放
            </summary>
            <param name="controllerName">控制者名称，用于独占控制模式</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:ASEva.Agency.StopRunning(System.Boolean,System.Boolean)">
            <summary>
            停止采集、处理、回放
            </summary>
            <param name="force">是否强制结束</param>
            <param name="editRecordedSession">成功停止后是否立即编辑session信息</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:ASEva.Agency.GetSessionTimeline(System.DateTime)">
            <summary>
            获取指定session开始时间对应的时间点
            </summary>
            <param name="session">Session ID</param>
            <returns>时间点，session不存在或不属于当前层级则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetSessionLength(System.DateTime)">
            <summary>
            获取指定session的长度
            </summary>
            <param name="session">Session ID</param>
            <returns>Session长度，单位秒，session不存在或不属于当前层级则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetGraphIDList">
            <summary>
            获取图表报告ID列表
            </summary>
            <returns>图表报告ID列表</returns>
        </member>
        <member name="M:ASEva.Agency.GetGraphIDWithTitle(System.String)">
            <summary>
            获取指定图表报告标题的报告ID
            </summary>
            <param name="title">图表报告标题</param>
            <returns>图表报告ID</returns>
        </member>
        <member name="M:ASEva.Agency.GetGraphTitle(System.Int32)">
            <summary>
            获取指定ID图表的标题
            </summary>
            <param name="id">图表报告ID</param>
            <returns>图表报告标题，若不存在则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetSignalName(System.String,System.Boolean)">
            <summary>
            获取指定ID信号的名称
            </summary>
            <param name="signalID">信号ID</param>
            <param name="fullName">是否返回完整名称</param>
            <returns>信号名称，若无该ID信号则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetBusSignalInfo(System.String)">
            <summary>
            获取指定ID的总线信号的信息
            </summary>
            <param name="busSignalID">总线信号ID</param>
            <returns>总线信号的信息，信号不存在或信号非总线信号则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.IsVideoDataAvailable(System.Int32,System.Nullable{System.UInt32})">
            <summary>
            查看指定视频通道是否有数据可供显示
            </summary>
            <param name="channel">视频通道，0~23</param>
            <param name="tolerance">可容忍最近多少毫秒（现实时间）无数据</param>
            <returns>是否有数据可供显示</returns>
        </member>
        <member name="M:ASEva.Agency.GetVideoSpecialType(System.Int32)">
            <summary>
            获取视频通道的特殊摄像头类型
            </summary>
            <param name="channel">视频通道，0~23</param>
            <returns>特殊摄像头类型</returns>
        </member>
        <member name="M:ASEva.Agency.ConvertTimeIntoSession(System.Double)">
            <summary>
            将时间线上的时间转换为在session中的时间
            </summary>
            <param name="timeline">时间点</param>
            <returns>在session中的时间，若超出范围则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetFilteredSessionListTotalLength">
            <summary>
            获取当前层级下筛选后的所有session的时长总长
            </summary>
            <returns>筛选后的所有session的时长总长</returns>
        </member>
        <member name="M:ASEva.Agency.GetSceneIDList">
            <summary>
            获取所有场景ID列表
            </summary>
            <returns>场景ID列表</returns>
        </member>
        <member name="M:ASEva.Agency.GetSceneTitleTable">
            <summary>
            获取场景标题表
            </summary>
            <returns>场景标题表</returns>
        </member>
        <member name="M:ASEva.Agency.GetChannelStatusTable(System.Nullable{System.UInt32})">
            <summary>
            获取所有通道的数据状态
            </summary>
            <param name="tolerance">可容忍最近多少毫秒（现实时间）无数据</param>
            <returns>返回各通道的数据状态，key为通道ID</returns>
        </member>
        <member name="M:ASEva.Agency.SetControlFlag(System.String,System.Boolean)">
            <summary>
            设置独占控制模式（在独占控制模式下，其他控制者的操作将被禁用）
            </summary>
            <param name="controllerName">控制者名称，即ID</param>
            <param name="enabled">是否开启独占控制模式</param>
            <returns>开启或关闭是否成功</returns>
        </member>
        <member name="M:ASEva.Agency.GetModuleConfig(System.Object,System.String)">
            <summary>
            获取数据处理或C++模块组件配置的字符串描述
            </summary>
            <param name="caller">调用此API的对象，可为以下类型： ASEva.MainWorkflow , ASEva.WindowClass , ASEva.DialogClass , WindowPanel, ConfigPanel等</param>
            <param name="moduleClassID">模块类别ID</param>
            <returns>配置的字符串描述，null表示找不到类别ID对应的模块</returns>
        </member>
        <member name="M:ASEva.Agency.SetModuleConfig(System.Object,System.String,System.String)">
            <summary>
            设置数据处理或C++模块组件配置的字符串描述
            </summary>
            <param name="caller">调用此API的对象，可为以下类型： ASEva.MainWorkflow , ASEva.WindowClass , ASEva.DialogClass , WindowPanel, ConfigPanel等</param>
            <param name="moduleClassID">模块类别ID</param>
            <param name="config">配置的字符串描述</param>
        </member>
        <member name="M:ASEva.Agency.GetModuleConfigStatus(System.Object,System.String)">
            <summary>
            获取数据处理或C++模块组件配置的状态
            </summary>
            <param name="caller">调用此API的对象，可为以下类型： ASEva.MainWorkflow , ASEva.WindowClass , ASEva.DialogClass , WindowPanel, ConfigPanel等</param>
            <param name="moduleClassID">模块类别ID</param>
            <returns>组件配置的状态，若找不到类别ID对应的模块则返回 ASEva.ConfigStatus.Disabled </returns>
        </member>
        <member name="M:ASEva.Agency.GetModuleChildConfigStatus(System.Object,System.String)">
            <summary>
            获取数据处理或C++模块组件各子功能配置的状态
            </summary>
            <param name="caller">调用此API的对象，可为以下类型： ASEva.MainWorkflow , ASEva.WindowClass , ASEva.DialogClass , WindowPanel, ConfigPanel等</param>
            <param name="moduleClassID">模块类别ID</param>
            <returns>各子功能配置的状态，若找不到类别ID对应的模块或无子功能配置则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetBusDevices">
            <summary>
            获取总线设备列表
            </summary>
            <returns>总线设备列表，键为设备ID，值为对应的设备信息</returns>
        </member>
        <member name="M:ASEva.Agency.GetVideoDevices">
            <summary>
            获取视频设备列表
            </summary>
            <returns>视频设备列表，键为设备ID，值为对应的设备信息</returns>
        </member>
        <member name="M:ASEva.Agency.GetBusProtocolFileIDList">
            <summary>
            (api:app=2.3.0) 获取总线协议文件ID列表
            </summary>
            <returns>总线协议文件ID列表</returns>
        </member>
        <member name="M:ASEva.Agency.GetBusProtocolFilePath(ASEva.BusProtocolFileID)">
            <summary>
            (api:app=2.3.0) 获取总线协议文件路径
            </summary>
            <param name="fileID">总线协议文件ID</param>
            <returns>总线协议文件路径，若未找到返回null</returns>
        </member>
        <member name="M:ASEva.Agency.UpdateBusProtocolFilePath(ASEva.BusProtocolFileID,System.String)">
            <summary>
            (api:app=2.3.0) 更新总线协议文件路径
            </summary>
            <param name="fileID">总线协议文件ID</param>
            <param name="filePath">新路径</param>
            <returns>是否成功更新，false表示未找到文件或MD5不匹配</returns>
        </member>
        <member name="M:ASEva.Agency.GetBusProtocolFileState(ASEva.BusProtocolFileID)">
            <summary>
            获取总线协议文件的状态
            </summary>
            <param name="fileID">总线协议文件ID</param>
            <returns>文件状态</returns>
        </member>
        <member name="M:ASEva.Agency.AddBusProtocolFile(System.String,ASEva.BusProtocolFileID@)">
            <summary>
            (api:app=2.3.0) 添加新的总线协议文件
            </summary>
            <param name="filePath">总线协议文件路径</param>
            <param name="fileID">总线协议文件ID，若文件存在则输出该ID，否则输出null</param>
            <returns>是否为新添加的总线协议文件ID</returns>
        </member>
        <member name="M:ASEva.Agency.RemoveBusProtocolFile(ASEva.BusProtocolFileID)">
            <summary>
            (api:app=2.3.0) 移除总线协议文件
            </summary>
            <param name="fileID">总线协议文件ID</param>
        </member>
        <member name="M:ASEva.Agency.GetNativePluginVersions(System.String)">
            <summary>
            获取C++插件模块版本列表
            </summary>
            <param name="prefix">组件前缀，如bus、video、proc、dev等</param>
            <returns>版本列表，键为C++模块的类型ID，值为版本字符串</returns>
        </member>
        <member name="M:ASEva.Agency.GetNativePluginVersions(ASEva.NativeLibraryType)">
            <summary>
            (api:app=2.3.0) 获取C++插件模块版本列表
            </summary>
            <param name="type">C++库类别</param>
            <returns>版本列表，键为C++模块的类型ID</returns>
        </member>
        <member name="M:ASEva.Agency.ConfigOfflineMapPath">
            <summary>
            弹出对话框配置离线地图路径
            </summary>
        </member>
        <member name="M:ASEva.Agency.GetOfflineMapImage(ASEva.IntSize,ASEva.Utility.LocPoint,System.Int32)">
            <summary>
            获取离线地图图像
            </summary>
            <param name="imageSize">指定图像大小</param>
            <param name="centerLocation">图像中心的经纬度</param>
            <param name="zoom">图像的尺度，0~24</param>
            <returns>离线地图图像（平台特化），空表示获取失败</returns>
        </member>
        <member name="M:ASEva.Agency.GetOfflineMapCommonImage(ASEva.IntSize,ASEva.Utility.LocPoint,System.Int32)">
            <summary>
            (api:app=2.3.0) 获取离线地图图像
            </summary>
            <param name="imageSize">指定图像大小</param>
            <param name="centerLocation">图像中心的经纬度</param>
            <param name="zoom">图像的尺度，0~24</param>
            <returns>离线地图图像（通用图像数据），空表示获取失败</returns>
        </member>
        <member name="M:ASEva.Agency.ConvertOfflineMapLocToPix(ASEva.Utility.LocPoint,System.Int32,ASEva.Utility.LocPoint)">
            <summary>
            离线地图中经纬度坐标转为像素坐标
            </summary>
            <param name="origin">原点的经纬度坐标</param>
            <param name="zoom">图像的尺度，0~24</param>
            <param name="point">输入经纬度坐标</param>
            <returns>该经纬度对应的像素坐标</returns>
        </member>
        <member name="M:ASEva.Agency.ConvertOfflineMapPixToLoc(ASEva.Utility.LocPoint,System.Int32,ASEva.FloatPoint)">
            <summary>
            离线地图中像素坐标转为经纬度坐标
            </summary>
            <param name="origin">原点的经纬度坐标</param>
            <param name="zoom">图像的尺度，0~24</param>
            <param name="pixel">输入像素坐标</param>
            <returns>该像素坐标对应的经纬度坐标</returns>
        </member>
        <member name="M:ASEva.Agency.SelectSignal(ASEva.SignalConfig,System.Boolean,System.Boolean,System.String)">
            <summary>
            打开对话框选择信号
            </summary>
            <param name="origin">初始信号配置</param>
            <param name="withScale">是否包含乘数的配置</param>
            <param name="withSignBit">是否包含符号位信号的配置</param>
            <param name="unit">该信号的单位显示，仅当包含乘数配置时有效</param>
            <returns>返回信号配置，若删除则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.SelectBusMessage(System.String)">
            <summary>
            打开对话框选择总线报文
            </summary>
            <param name="originMessageID">初始总线报文配置</param>
            <returns>返回总线报文配置，若删除则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.CreateVideoFrameGetter">
            <summary>
            创建视频帧获取器，可指定更多参数，以及获取高清视频帧等
            </summary>
            <returns>视频帧获取器</returns>
        </member>
        <member name="M:ASEva.Agency.SelectSignals(ASEva.SelectSignalHandler,System.Collections.Generic.List{System.String})">
            <summary>
            打开对话框选择多个信号
            </summary>
            <param name="handler">选中信号时调用的回调接口</param>
            <param name="existSignalIDList">既存的选中信号ID列表</param>
        </member>
        <member name="M:ASEva.Agency.SelectBusFloat32Signal(System.Collections.Generic.List{System.String})">
            <summary>
            打开对话框选择作为32位浮点解析的总线信号
            </summary>
            <param name="existSignalIDList">既存的信号列表</param>
            <returns>新选择的总线信号ID</returns>
        </member>
        <member name="M:ASEva.Agency.OpenDialog(System.Object,System.String,System.String)">
            <summary>
            打开对话框
            </summary>
            <param name="caller">调用此API的对象，可为以下类型： ASEva.MainWorkflow , ASEva.WindowClass , ASEva.DialogClass , WindowPanel, ConfigPanel等</param>
            <param name="dialogClassID">对话框组件ID</param>
            <param name="config">初始化配置</param>
        </member>
        <member name="M:ASEva.Agency.AddWindow(System.Object,System.String,System.String,System.Boolean)">
            <summary>
            添加窗口至工作空间
            </summary>
            <param name="caller">调用此API的对象，可为以下类型： ASEva.MainWorkflow , ASEva.WindowClass , ASEva.DialogClass , WindowPanel, ConfigPanel等</param>
            <param name="windowClassID">窗口组件ID</param>
            <param name="config">初始化配置</param>
            <param name="newWorkspaceIfNeeded">如果当前工作空间位置不足，是否添加至新工作空间</param>
        </member>
        <member name="M:ASEva.Agency.SetWindowTitle(System.Object,System.String,System.Object)">
            <summary>
            设置窗口标题与图标
            </summary>
            <param name="window">窗口对象</param>
            <param name="title">标题，若null则不更改</param>
            <param name="icon">图标，若null则不更改</param>
        </member>
        <member name="M:ASEva.Agency.SetCurrentDialogTitle(System.String,System.Object)">
            <summary>
            设置当前对话框的标题与图标
            </summary>
            <param name="title">标题，若null则不更改</param>
            <param name="icon">图标，若null则不更改</param>
        </member>
        <member name="M:ASEva.Agency.SelectBusProtocolFiles(ASEva.BusProtocolFileID[])">
            <summary>
            打开对话框选择总线协议文件（可多个）
            </summary>
            <param name="selected">已选择的总线协议文件</param>
            <returns>新选择的总线协议文件</returns>
        </member>
        <member name="M:ASEva.Agency.ConfigDataEncryption">
            <summary>
            打开对话框配置文件加密选项
            </summary>
        </member>
        <member name="M:ASEva.Agency.RegisterAudioDriver(ASEva.AudioDriverInfo,ASEva.AudioRecorder,ASEva.AudioReplayer)">
            <summary>
            注册音频驱动关联的采集和回放接口
            </summary>
            <param name="driver">驱动信息</param>
            <param name="recorder">采集接口，若无则设置null</param>
            <param name="replayer">回放接口，若无则设置额null</param>
        </member>
        <member name="M:ASEva.Agency.GetAudioDrivers">
            <summary>
            获取所有已注册的音频驱动信息
            </summary>
            <returns>已注册的音频驱动信息列表，若未注册任何有效驱动则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetAudioRecordDevices(System.String)">
            <summary>
            获取指定驱动下的音频采集设备信息列表
            </summary>
            <param name="driverID">音频驱动ID</param>
            <returns>音频采集设备信息列表，若无该驱动或驱动下无采集设备则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetAudioReplayDevices(System.String)">
            <summary>
            获取指定驱动下的音频回放设备信息列表
            </summary>
            <param name="driverID">音频驱动ID</param>
            <returns>音频回放设备信息列表，若无该驱动或驱动下无回放设备则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetCPUTime">
            <summary>
            (api:app=2.0.6) 获取CPU时间
            </summary>
            <returns>CPU时间，单位秒，返回0表示无效</returns>
        </member>
        <member name="M:ASEva.Agency.GetEventTypeNames">
            <summary>
            (api:app=2.2.3) 获取事件类型名称列表（包括未启用的） 
            </summary>
            <returns>事件类型名称列表</returns>
        </member>
        <member name="M:ASEva.Agency.ParseBusMessage(ASEva.Samples.BusMessageSample)">
            <summary>
            (api:app=2.2.3) 解析总线报文，获取信号值等信息
            </summary>
            <param name="busMessage">总线报文</param>
            <returns>所有信号值及相关信息</returns>
        </member>
        <member name="M:ASEva.Agency.GetRecentProjectPathes">
            <summary>
            (api:app=2.3.0) 获取最近项目文件路径列表
            </summary>
            <returns>最近项目文件路径列表</returns>
        </member>
        <member name="M:ASEva.Agency.TerminateApp(System.Boolean,System.Boolean)">
            <summary>
            (api:app=2.3.0) 尝试终止应用程序
            </summary>
            <param name="force">是否强制终止</param>
            <param name="autosave">是否保存当前工程至autosave</param>
            <returns>是否成功终止</returns>
        </member>
        <member name="M:ASEva.Agency.PopupError(System.String)">
            <summary>
            (api:app=2.3.0) 弹出模态框显示错误信息
            </summary>
            <param name="msg">错误信息</param>
        </member>
        <member name="M:ASEva.Agency.PopupNotice(System.String)">
            <summary>
            (api:app=2.3.0) 弹出模态框显示提示信息
            </summary>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:ASEva.Agency.PopupConfirm(System.String)">
            <summary>
            (api:app=2.3.0) 弹出模态框显示确认信息
            </summary>
            <param name="msg">确认信息</param>
            <returns>是否得到确认</returns>
        </member>
        <member name="M:ASEva.Agency.AddMainThreadCheckpoint(System.String)">
            <summary>
            (api:app=2.3.0) 添加主线程检查点
            </summary>
            <param name="location">主线程检查点位置</param>
        </member>
        <member name="M:ASEva.Agency.NewProject(System.Boolean)">
            <summary>
            (api:app=2.3.0) 新建项目
            </summary>
            <param name="force">是否强制新建项目</param>
            <returns>是否成功新建项目</returns>
        </member>
        <member name="M:ASEva.Agency.OpenProject(System.String)">
            <summary>
            (api:app=2.3.0) 打开新项目
            </summary>
            <param name="projectFile">项目文件路径，若设为null则从autosave读取</param>
            <returns>是否成功打开项目</returns>
        </member>
        <member name="M:ASEva.Agency.SaveCurrentProject(System.String)">
            <summary>
            (api:app=2.3.0) 保存当前项目
            </summary>
            <param name="projectFile">项目文件路径，null表示保存至当前项目文件</param>
            <returns>是否成功保存项目</returns>
        </member>
        <member name="M:ASEva.Agency.GetCurrentProject">
            <summary>
            (api:app=2.3.0) 获取当前项目文件
            </summary>
            <returns>当前项目文件，新项目或从autosave读取的项目都为null</returns>
        </member>
        <member name="M:ASEva.Agency.PlayMp3(System.Byte[])">
            <summary>
            (api:app=2.3.0) 播放MP3音频
            </summary>
            <param name="mp3FileData">MP3音频文件数据</param>
        </member>
        <member name="M:ASEva.Agency.StartProcess(System.String)">
            <summary>
            (api:app=2.3.0) 启动进程以默认方式打开文件、文件夹或网址
            </summary>
            <param name="target">目标文件、文件夹或网址</param>
            <returns>是否成功打开</returns>
        </member>
        <member name="M:ASEva.Agency.GetVersionTable">
            <summary>
            (api:app=2.3.0) 获取软件版本信息总表
            </summary>
            <returns>软件版本信息总表</returns>
        </member>
        <member name="M:ASEva.Agency.GetSystemStatus(ASEva.SystemStatus)">
            <summary>
            (api:app=2.3.0) 获取系统状态信息
            </summary>
            <param name="status">系统状态类别</param>
            <returns>系统状态信息，若无有效信息则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetSystemStatusDetails(ASEva.SystemStatus)">
            <summary>
            (api:app=2.3.0) 获取系统状态详情
            </summary>
            <param name="status">系统状态类别</param>
            <returns>系统状态详情，若无有效信息则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetLicensedFunctionIndices">
            <summary>
            (api:app=2.3.0) 获取被许可的功能序号列表
            </summary>
            <returns>被许可的功能序号列表</returns>
        </member>
        <member name="M:ASEva.Agency.SwitchAppMode(System.String,ASEva.ApplicationMode,System.Int32)">
            <summary>
            (api:app=2.3.0) 切换应用程序当前的运行模式
            </summary>
            <param name="controllerName">控制者名称，用于独占控制模式</param>
            <param name="mode">目标运行模式</param>
            <param name="waitSecond">超时，大于0有效，单位秒</param>
            <returns>是否成功切换</returns>
        </member>
        <member name="M:ASEva.Agency.SetDataPath(System.String)">
            <summary>
            (api:app=2.3.0) 设置数据目录的路径
            </summary>
            <param name="path">数据目录的路径</param>
        </member>
        <member name="M:ASEva.Agency.GetWindowClassTable">
            <summary>
            (api:app=2.3.0) 获取窗口组件信息表
            </summary>
            <returns>窗口组件信息表，键为组件ID</returns>
        </member>
        <member name="M:ASEva.Agency.GetDialogClassTable">
            <summary>
            (api:app=2.3.0) 获取对话框组件信息表
            </summary>
            <returns>对话框组件信息表，键为组件ID</returns>
        </member>
        <member name="M:ASEva.Agency.GetProcessorClassTable">
            <summary>
            (api:app=2.3.0) 获取数据处理组件信息表
            </summary>
            <returns>数据处理组件信息表，键为组件ID</returns>
        </member>
        <member name="M:ASEva.Agency.GetNativeClassTable">
            <summary>
            (api:app=2.3.0) 获取C++组件信息表
            </summary>
            <returns>C++组件信息表，键为组件ID</returns>
        </member>
        <member name="M:ASEva.Agency.GetTaskClassTable">
            <summary>
            (api:app=2.3.0) 获取独立任务组件信息表
            </summary>
            <returns>独立任务组件信息表，键为组件ID</returns>
        </member>
        <member name="M:ASEva.Agency.RegisterTransformWindowClass(System.String,System.String)">
            <summary>
            (api:app=2.3.0) 注册分化窗口组件
            </summary>
            <param name="windowClassID">原窗口组件ID</param>
            <param name="config">用于分化的配置字符串</param>
            <returns>分化后的窗口组件信息</returns>
        </member>
        <member name="M:ASEva.Agency.RegisterTransformDialogClass(System.String,System.String)">
            <summary>
            (api:app=2.3.0) 注册分化对话框组件
            </summary>
            <param name="dialogClassID">原对话框组件ID</param>
            <param name="config">用于分化的配置字符串</param>
            <returns>分化后的对话框组件信息</returns>
        </member>
        <member name="M:ASEva.Agency.GetDialogRelatedModulesConfigStatus(System.String,System.String,ASEva.ConfigStatus[]@)">
            <summary>
            (api:app=2.3.0) 获取对话框相关模块配置状态
            </summary>
            <param name="dialogClassID">对话框组件ID</param>
            <param name="transformID">分化ID</param>
            <param name="childrenStatus">子配置状态</param>
            <returns>配置状态</returns>
        </member>
        <member name="M:ASEva.Agency.DisableAllConfigs">
            <summary>
            (api:app=2.3.0) 禁用所有模块配置
            </summary>
        </member>
        <member name="M:ASEva.Agency.GetGenerationSessions(System.String)">
            <summary>
            (api:app=2.3.0) 获取当前层级下含有指定generation ID的所有session
            </summary>
            <param name="generationID">Generation ID</param>
            <returns>Session ID列表</returns>
        </member>
        <member name="M:ASEva.Agency.SetTargetReplaySpeed(System.Double)">
            <summary>
            (api:app=2.3.0) 设置目标回放速度
            </summary>
            <param name="speed">目标回放速度</param>
        </member>
        <member name="M:ASEva.Agency.SetSessionSearchKeyword(System.String)">
            <summary>
            (api:app=2.3.0) 设置session搜索关键字
            </summary>
            <param name="keyword">session搜索关键字</param>
        </member>
        <member name="M:ASEva.Agency.GetSessionFilterTable">
            <summary>
            (api:app=2.3.0) 获取所有session的筛选标志位
            </summary>
            <returns>session的筛选标志位表</returns>
        </member>
        <member name="M:ASEva.Agency.GetCurrentOnlineSession">
            <summary>
            (api:app=2.3.0) 获取在线模式下正在预览或采集的session
            </summary>
            <returns>在线模式下正在预览或采集的session，若非在线模式则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetSessionListTotalLength">
            <summary>
            (api:app=2.3.0) 获取当前层级下所有session的总时长
            </summary>
            <returns>所有session的总时长</returns>
        </member>
        <member name="M:ASEva.Agency.GetSessionSearchKey">
            <summary>
            (api:app=2.3.0) 获取当前的session搜索关键字
            </summary>
            <returns></returns>
        </member>
        <member name="M:ASEva.Agency.RemoveSession(System.DateTime,System.Boolean)">
            <summary>
            (api:app=2.3.0) 移除session及相关文件至回收站
            </summary>
            <param name="session">Session ID</param>
            <param name="force">是否强制移除</param>
            <returns>是否成功移除</returns>
        </member>
        <member name="M:ASEva.Agency.SetSessionChecker(System.DateTime,System.Boolean)">
            <summary>
            (api:app=2.3.0) 设置session是否框选
            </summary>
            <param name="session">session ID</param>
            <param name="check">是否框选</param>
        </member>
        <member name="M:ASEva.Agency.RemoveGeneration(System.DateTime,System.String)">
            <summary>
            (api:app=2.3.0) 移除generation及相关文件至回收站
            </summary>
            <param name="session">Session ID</param>
            <param name="genID">Generation ID</param>
        </member>
        <member name="M:ASEva.Agency.GetSessionComment(System.DateTime)">
            <summary>
            (api:app=2.3.0) 获取session的注释说明
            </summary>
            <param name="session">Session ID</param>
            <returns>Session的注释说明</returns>
        </member>
        <member name="M:ASEva.Agency.SetSessionComment(System.DateTime,System.String)">
            <summary>
            (api:app=2.3.0) 设置session的注释说明
            </summary>
            <param name="session">Session ID</param>
            <param name="comment">Session的注释说明</param>
        </member>
        <member name="M:ASEva.Agency.GetSessionProperties(System.DateTime)">
            <summary>
            (api:app=2.3.0) 获取session的属性表
            </summary>
            <param name="session">Session ID</param>
            <returns>Session的属性表</returns>
        </member>
        <member name="M:ASEva.Agency.SetSessionProperties(System.DateTime,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            (api:app=2.3.0) 设置session的属性表
            </summary>
            <param name="session">Session ID</param>
            <param name="properties">Session的属性表</param>
        </member>
        <member name="M:ASEva.Agency.SetAudioVolume(System.Double)">
            <summary>
            (api:app=2.3.0) 设置音量
            </summary>
            <param name="volume">音量（倍数）</param>
        </member>
        <member name="M:ASEva.Agency.SetCPURateScale(System.Int32)">
            <summary>
            (api:app=2.3.0) 设置CPU使用率的乘数
            </summary>
            <param name="scale">CPU使用率的乘数</param>
        </member>
        <member name="M:ASEva.Agency.GetLicenseInfo">
            <summary>
            (api:app=2.3.0) 获取许可证的详细信息
            </summary>
            <returns>许可证的详细信息</returns>
        </member>
        <member name="M:ASEva.Agency.GetRawChannelDelayConfig(System.String)">
            <summary>
            (api:app=2.3.0) 获取原始数据通道延迟配置
            </summary>
            <param name="id">原始数据通道ID</param>
            <returns>延迟配置，单位毫秒</returns>
        </member>
        <member name="M:ASEva.Agency.GetBusChannelDelayConfig(System.Int32)">
            <summary>
            (api:app=2.3.0) 获取总线数据通道延迟配置
            </summary>
            <param name="channel">总线通道，1~16</param>
            <returns>延迟配置，单位毫秒</returns>
        </member>
        <member name="M:ASEva.Agency.GetVideoChannelDelayConfig(System.Int32)">
            <summary>
            (api:app=2.3.0) 获取视频数据通道延迟配置
            </summary>
            <param name="channel">视频通道，0~23</param>
            <returns>延迟配置，单位毫秒</returns>
        </member>
        <member name="M:ASEva.Agency.GetAudioChannelDelayConfig">
            <summary>
            (api:app=2.3.0) 获取音频数据通道延迟配置
            </summary>
            <returns>延迟配置，单位毫秒</returns>
        </member>
        <member name="M:ASEva.Agency.GetAllRawChannelDelayConfigs">
            <summary>
            (api:app=2.3.0) 获取所有原始数据通道延迟配置
            </summary>
            <returns>所有原始数据通道的延迟配置，单位毫秒</returns>
        </member>
        <member name="M:ASEva.Agency.SetRawChannelDelayConfig(System.String,System.Double)">
            <summary>
            (api:app=2.3.0) 设置原始数据通道延迟配置
            </summary>
            <param name="id">原始数据通道ID</param>
            <param name="delay">延迟配置，单位毫秒</param>
        </member>
        <member name="M:ASEva.Agency.SetBusChannelDelayConfig(System.Int32,System.Double)">
            <summary>
            (api:app=2.3.0) 设置总线数据通道延迟配置
            </summary>
            <param name="channel">总线通道，1~16</param>
            <param name="delay">延迟配置，单位毫秒</param>
        </member>
        <member name="M:ASEva.Agency.SetVideoChannelDelayConfig(System.Int32,System.Double)">
            <summary>
            (api:app=2.3.0) 设置视频数据通道延迟配置
            </summary>
            <param name="channel">视频通道，0~23</param>
            <param name="delay">延迟配置，单位毫秒</param>
        </member>
        <member name="M:ASEva.Agency.SetAudioChannelDelayConfig(System.Double)">
            <summary>
            (api:app=2.3.0) 设置音频数据通道延迟配置
            </summary>
            <param name="delay">延迟配置，单位毫秒</param>
        </member>
        <member name="M:ASEva.Agency.GetChannelMonitoringFlag(System.String)">
            <summary>
            (api:app=2.3.0) 获取指定通道的监控配置
            </summary>
            <param name="id">通道ID</param>
            <returns>是否监控</returns>
        </member>
        <member name="M:ASEva.Agency.SetChannelMonitoringFlag(System.String,System.Boolean)">
            <summary>
            (api:app=2.3.0) 设置指定通道的监控配置
            </summary>
            <param name="id">通道ID</param>
            <param name="monitoring">是否监控，通道监控的具体实现应由插件给出，如发出报警音、指示灯闪烁等</param>
        </member>
        <member name="M:ASEva.Agency.GetAllChannelMonitoringKeys">
            <summary>
            (api:app=2.3.0) 获取所有正在监控的通道ID
            </summary>
            <returns>正在监控的通道ID列表</returns>
        </member>
        <member name="M:ASEva.Agency.GetBusChannelStatus(System.Int32,System.Nullable{System.UInt32})">
            <summary>
            (api:app=2.3.0) 获取总线数据通道状态
            </summary>
            <param name="channel">总线通道，1~16</param>
            <param name="toleranceMillisecond">无数据的容忍时长</param>
            <returns>是否有数据</returns>
        </member>
        <member name="M:ASEva.Agency.GetVideoChannelStatus(System.Int32,System.Nullable{System.UInt32},System.Collections.Generic.List{System.Double}@,System.Collections.Generic.List{System.Double}@)">
            <summary>
            (api:app=2.3.0) 获取视频数据通道状态
            </summary>
            <param name="channel">视频通道，0~23</param>
            <param name="toleranceMillisecond">无数据的容忍时长</param>
            <param name="interval">输出每帧数据之间的时间间隔曲线，单位秒</param>
            <param name="delay">输出每帧数据的延迟曲线，单位秒</param>
            <returns>是否有数据</returns>
        </member>
        <member name="M:ASEva.Agency.GetAudioChannelStatus(System.Nullable{System.UInt32},System.Collections.Generic.List{System.Double}@,System.Collections.Generic.List{System.Double}@)">
            <summary>
            (api:app=2.3.0) 获取音频数据通道状态
            </summary>
            <param name="toleranceMillisecond">无数据的容忍时长</param>
            <param name="interval">输出每帧数据之间的时间间隔曲线，单位秒</param>
            <param name="delay">输出每帧数据的延迟曲线，单位秒</param>
            <returns>是否有数据</returns>
        </member>
        <member name="M:ASEva.Agency.GetRawChannelStatus(System.String,System.Nullable{System.UInt32})">
            <summary>
            (api:app=2.3.0) 获取原始数据通道状态
            </summary>
            <param name="protocol">原始数据通道ID</param>
            <param name="toleranceMillisecond">无数据的容忍时长</param>
            <returns>是否有数据</returns>
        </member>
        <member name="M:ASEva.Agency.GetSampleChannelStatus(System.String,System.Nullable{System.UInt32},System.Collections.Generic.List{System.Double}@,System.Collections.Generic.List{System.Double}@)">
            <summary>
            (api:app=2.3.0) 获取样本数据通道状态
            </summary>
            <param name="protocol">样本数据通道ID</param>
            <param name="toleranceMillisecond">无数据的容忍时长</param>
            <param name="interval">输出每帧数据之间的时间间隔曲线，单位秒</param>
            <param name="delay">输出每帧数据的延迟曲线，单位秒</param>
            <returns>是否有数据</returns>
        </member>
        <member name="M:ASEva.Agency.GetAvailableBusChannels">
            <summary>
            (api:app=2.3.0) 获取所有有效的总线通道
            </summary>
            <returns>有效的总线通道列表，值为1~16</returns>
        </member>
        <member name="M:ASEva.Agency.GetAvailableVideoChannels">
            <summary>
            (api:app=2.3.0) 获取所有有效的视频通道
            </summary>
            <returns>有效的视频通道列表，值为0~23</returns>
        </member>
        <member name="M:ASEva.Agency.GetAvailableRawChannels">
            <summary>
            (api:app=2.3.0) 获取所有有效的原始数据通道
            </summary>
            <returns>有效的原始数据通道列表，值为通道ID</returns>
        </member>
        <member name="M:ASEva.Agency.GetAvailableSampleChannels">
            <summary>
            (api:app=2.3.0) 获取所有有效的样本数据通道
            </summary>
            <returns>有效的样本数据通道列表，值为通道ID</returns>
        </member>
        <member name="M:ASEva.Agency.GetBusPayloadPercentage(System.Int32)">
            <summary>
            (api:app=2.3.0) 获取指定总线通道的负载百分比
            </summary>
            <param name="channel">总线通道，1~16</param>
            <returns>总线通道的负载百分比，若无效则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.CreateWindowPanel(System.Object,System.String,System.String,System.Object@,ASEva.WindowClassInfo@)">
            <summary>
            (api:app=2.3.0) 创建窗口对象
            </summary>
            <param name="caller">调用此API的对象，可为以下类型： ASEva.MainWorkflow , ASEva.WindowClass , ASEva.DialogClass , WindowPanel, ConfigPanel等</param>
            <param name="windowClassID">窗口组件ID</param>
            <param name="transformID">分化ID，null表示不分化</param>
            <param name="panel">新建的窗口对象，创建失败则为null</param>
            <param name="info">新建窗口的组件信息，创建失败则为null</param>
            <returns>创建结果，若成功则在释放窗口时需要调用 ASEva.Agency.UnregisterPanel </returns>
        </member>
        <member name="M:ASEva.Agency.CreateConfigPanel(System.Object,System.String,System.String,System.Object@,ASEva.DialogClassInfo@)">
            <summary>
            (api:app=2.3.0) 创建对话框对象
            </summary>
            <param name="caller">调用此API的对象，可为以下类型： ASEva.MainWorkflow , ASEva.WindowClass , ASEva.DialogClass , WindowPanel, ConfigPanel等</param>
            <param name="dialogClassID">对话框组件ID</param>
            <param name="transformID">分化ID，null表示不分化</param>
            <param name="panel">新建的对话框对象，创建失败则为null</param>
            <param name="info">新建对话框的组件信息，创建失败则为null</param>
            <returns>创建结果，若成功则在释放窗口时需要调用 ASEva.Agency.UnregisterPanel </returns>
        </member>
        <member name="M:ASEva.Agency.UnregisterPanel(System.Object)">
            <summary>
            (api:app=2.3.0) 注销窗口或对话框对象
            </summary>
            <param name="panel">窗口或对话框对象</param>
        </member>
        <member name="M:ASEva.Agency.ConvertImageToCommon(System.Object)">
            <summary>
            (api:app=2.3.0) 转换平台特化图像对象至通用图像数据
            </summary>
            <param name="image">平台特化图像</param>
            <returns>通用图像数据，转换失败则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.ConvertImageToPlatform(ASEva.Samples.CommonImage,System.Boolean)">
            <summary>
            (api:app=2.3.0) 转换通用图像数据至平台特化图像
            </summary>
            <param name="image">通用图像数据</param>
            <param name="eto">是否转换至Eto图像，否则转换为当前UI框架对应的图像对象</param>
            <returns>平台特化图像，转换失败则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetWindowClassInfo(System.String)">
            <summary>
            (api:app=2.3.0) 获取窗口组件信息
            </summary>
            <param name="windowClassID">窗口组件ID</param>
            <returns>窗口组件信息，若未找到返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetDialogClassInfo(System.String)">
            <summary>
            (api:app=2.3.0) 获取对话框组件信息
            </summary>
            <param name="dialogClassID">对话框组件ID</param>
            <returns>对话框组件信息，若未找到返回null</returns>
        </member>
        <member name="M:ASEva.Agency.DecodeImage(System.Byte[])">
            <summary>
            (api:app=2.3.0) 解码图像数据
            </summary>
            <param name="imageData">JPG或PNG二进制数据</param>
            <returns>解码后的通用图像数据，若失败则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.EncodeImage(ASEva.Samples.CommonImage,System.String)">
            <summary>
            (api:app=2.3.0) 编码图像数据
            </summary>
            <param name="image">通用图像数据</param>
            <param name="format">编码格式，目前支持"jpg", "png"</param>
            <returns>编码后的二进制数据，若失败则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.GetSignalTree">
            <summary>
            (api:app=2.3.0) 获取信号树
            </summary>
            <returns>信号树根节点下的所有子节点</returns>
        </member>
        <member name="M:ASEva.Agency.GetPluginPackIDList">
            <summary>
            (api:app=2.3.0) 获取插件包ID列表
            </summary>
            <returns>插件包ID列表</returns>
        </member>
        <member name="M:ASEva.Agency.GetPluginPackInfo(System.String)">
            <summary>
            (api:app=2.3.0) 获取插件包信息
            </summary>
            <param name="packID">插件包ID</param>
            <returns>插件包信息，若无对应插件包则返回null</returns>
        </member>
        <member name="M:ASEva.Agency.InstallPlugin(System.String)">
            <summary>
            (api:app=2.3.0) 安装插件（安装完毕后也需要重启才生效）
            </summary>
            <param name="dirPath">插件包文件夹，或包含若干插件包的文件夹</param>
            <returns>是否安装了插件</returns>
        </member>
        <member name="M:ASEva.Agency.UninstallPlugin(System.String)">
            <summary>
            (api:app=2.3.0) 卸载插件
            </summary>
            <param name="packID">插件包ID</param>
            <returns>是否卸载了插件</returns>
        </member>
        <member name="M:ASEva.Agency.GetLogMessages">
            <summary>
            (api:app=2.3.0) 获取所有清单信息
            </summary>
            <returns>清单信息列表</returns>
        </member>
        <member name="M:ASEva.Agency.IsReady">
            <summary>
            (api:app=2.3.1) 返回是否允许进行保存工程项目和开始session等操作
            </summary>
            <returns>是否允许进行保存工程项目和开始session等操作</returns>
        </member>
        <member name="M:ASEva.Agency.DisablePlugin(System.String)">
            <summary>
            (api:app=2.3.4) 禁用插件
            </summary>
            <param name="packID">插件包ID</param>
        </member>
        <member name="M:ASEva.Agency.EnablePlugin(System.String)">
            <summary>
            (api:app=2.3.4) 启用插件（需要重启应用程序后生效）
            </summary>
            <param name="packID">插件包ID</param>
        </member>
        <member name="T:ASEva.APIInfo">
            <summary>
            version=2.4.0
            </summary>
        </member>
        <member name="M:ASEva.APIInfo.GetAPIVersion">
            <summary>
            (api:app=2.0.0) 获取API版本
            </summary>
            <returns>API版本</returns>
        </member>
        <member name="M:ASEva.APIInfo.GetRunningOS">
            <summary>
            (api:app=2.0.0) 返回当前运行的OS代号
            </summary>
            <returns>OS代号，若无法识别返回null</returns>
        </member>
        <member name="T:ASEva.WaveReceiver">
            <summary>
            (api:app=2.0.0) 在音频采集到数据后调用此接口
            </summary>
        </member>
        <member name="M:ASEva.WaveReceiver.OnData(System.Int16[],System.Double)">
            <summary>
            数据回调函数
            </summary>
            <param name="samples">音频样本数据</param>
            <param name="cpuSyncTime">样本数据的CPU时间，单位秒，可通过 ASEva.Agency.GetCPUTime 获得</param>
        </member>
        <member name="T:ASEva.WaveProvider">
            <summary>
            (api:app=2.0.0) 在音频回放需要数据时调用此接口
            </summary>
        </member>
        <member name="M:ASEva.WaveProvider.GetData(System.Int32)">
            <summary>
            数据回调函数
            </summary>
            <param name="sampleCount">需要的样本数</param>
            <returns>返回音频数据样本</returns>
        </member>
        <member name="T:ASEva.AudioDeviceInfo">
            <summary>
            (api:app=2.0.0) 音频设备信息
            </summary>
        </member>
        <member name="P:ASEva.AudioDeviceInfo.DeviceID">
            <summary>
            设备ID
            </summary>
        </member>
        <member name="P:ASEva.AudioDeviceInfo.DeviceName">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="T:ASEva.AudioRecorder">
            <summary>
            (api:app=2.0.0) 音频采集设备接口
            </summary>
        </member>
        <member name="M:ASEva.AudioRecorder.GetRecordDevices">
            <summary>
            获取设备列表
            </summary>
            <returns>设备列表</returns>
        </member>
        <member name="M:ASEva.AudioRecorder.StartRecordDevice(System.String,ASEva.WaveReceiver)">
            <summary>
            启动音频采集设备
            </summary>
            <param name="deviceID">设备ID</param>
            <param name="receiver">回调接口</param>
            <returns>设备对象，若启动失败返回null</returns>
        </member>
        <member name="M:ASEva.AudioRecorder.StopRecordDevice(System.Object)">
            <summary>
            停止音频采集设备
            </summary>
            <param name="device">设备对象</param>
        </member>
        <member name="T:ASEva.AudioReplayer">
            <summary>
            (api:app=2.0.0) 音频回放设备接口
            </summary>
        </member>
        <member name="M:ASEva.AudioReplayer.GetReplayDevices">
            <summary>
            获取设备列表
            </summary>
            <returns>设备列表</returns>
        </member>
        <member name="M:ASEva.AudioReplayer.StartReplayDevice(System.String,ASEva.WaveProvider)">
            <summary>
            启动音频回放设备
            </summary>
            <param name="deviceID">设备ID</param>
            <param name="provider">回调接口</param>
            <returns>设备对象，若启动失败返回null</returns>
        </member>
        <member name="M:ASEva.AudioReplayer.StopReplayDevice(System.Object)">
            <summary>
            停止音频回放设备
            </summary>
            <param name="device">设备对象</param>
        </member>
        <member name="T:ASEva.AudioDriverInfo">
            <summary>
            (api:app=2.0.0) 音频驱动信息
            </summary>
        </member>
        <member name="P:ASEva.AudioDriverInfo.DriverID">
            <summary>
            设备ID
            </summary>
        </member>
        <member name="P:ASEva.AudioDriverInfo.DriverName">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="T:ASEva.ColorRGBA">
            <summary>
            (api:app=2.0.0) 以RGBA四通道描述的颜色（整型）
            </summary>
        </member>
        <member name="T:ASEva.ConfigStatus">
            <summary>
            (api:app=2.0.0) 组件配置的状态
            </summary>
        </member>
        <member name="F:ASEva.ConfigStatus.Enabled">
            <summary>
            启用且正常
            </summary>
        </member>
        <member name="F:ASEva.ConfigStatus.EnabledWithError">
            <summary>
            启用但存在错误
            </summary>
        </member>
        <member name="F:ASEva.ConfigStatus.EnabledWithWarning">
            <summary>
            启用但部分存在错误
            </summary>
        </member>
        <member name="F:ASEva.ConfigStatus.Disabled">
            <summary>
            禁用
            </summary>
        </member>
        <member name="T:ASEva.GeneralSampleTitle">
            <summary>
            (api:app=2.0.0) 通用样本的标题部分
            </summary>
        </member>
        <member name="P:ASEva.GeneralSampleTitle.Titles">
            <summary>
            标题文字列表
            </summary>
        </member>
        <member name="M:ASEva.GeneralSampleTitle.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:ASEva.SceneTitle">
            <summary>
            (api:app=2.0.0) 场景属性标题
            </summary>
        </member>
        <member name="P:ASEva.SceneTitle.Titles">
            <summary>
            标题文字列表
            </summary>
        </member>
        <member name="M:ASEva.SceneTitle.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:ASEva.ChannelAlias">
            <summary>
            (api:app=2.0.0) 样本通道别名
            </summary>
        </member>
        <member name="P:ASEva.ChannelAlias.ChannelID">
            <summary>
            样本通道ID
            </summary>
        </member>
        <member name="P:ASEva.ChannelAlias.AliasName">
            <summary>
            别名
            </summary>
        </member>
        <member name="T:ASEva.UsingVideoChannel">
            <summary>
            (api:app=2.0.0) 使用的视频通道
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelA">
            <summary>
            通道A
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelB">
            <summary>
            通道B
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelC">
            <summary>
            通道C
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelD">
            <summary>
            通道D
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelE">
            <summary>
            通道E
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelF">
            <summary>
            通道F
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelG">
            <summary>
            通道G
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelH">
            <summary>
            通道H
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelI">
            <summary>
            通道I
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelJ">
            <summary>
            通道J
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelK">
            <summary>
            通道K
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelL">
            <summary>
            通道L
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelM">
            <summary>
            (api:app=2.1.3) 通道M
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelN">
            <summary>
            (api:app=2.1.3) 通道N
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelO">
            <summary>
            (api:app=2.1.3) 通道O
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelP">
            <summary>
            (api:app=2.1.3) 通道P
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelQ">
            <summary>
            (api:app=2.1.3) 通道Q
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelR">
            <summary>
            (api:app=2.1.3) 通道R
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelS">
            <summary>
            (api:app=2.1.3) 通道S
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelT">
            <summary>
            (api:app=2.1.3) 通道T
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelU">
            <summary>
            (api:app=2.1.3) 通道U
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelV">
            <summary>
            (api:app=2.1.3) 通道V
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelW">
            <summary>
            (api:app=2.1.3) 通道W
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.ChannelX">
            <summary>
            (api:app=2.1.3) 通道X
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.SpecialFront">
            <summary>
            特殊摄像头：前向（标准模型）
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.SpecialLeftLine">
            <summary>
            特殊摄像头：左侧车道线
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.SpecialRightLine">
            <summary>
            特殊摄像头：右侧车道线
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.SpecialLeftBS">
            <summary>
            特殊摄像头：左侧盲区
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.SpecialRightBS">
            <summary>
            特殊摄像头：右侧盲区
            </summary>
        </member>
        <member name="F:ASEva.UsingVideoChannel.SpecialFisheyeFront">
            <summary>
            (api:app=2.1.2) 特殊摄像头：前向（鱼眼模型）
            </summary>
        </member>
        <member name="T:ASEva.SignalPackConfigElem">
            <summary>
            (api:app=2.0.0) 信号打包中单个信号的配置
            </summary>
        </member>
        <member name="T:ASEva.SignalPackConfig">
            <summary>
            (api:app=2.0.0) 信号打包配置
            </summary>
        </member>
        <member name="T:ASEva.ModuleConfig">
            <summary>
            (api:app=2.0.0) 模块配置的基类
            </summary>
        </member>
        <member name="M:ASEva.ModuleConfig.GetConfig">
            <summary>
            [必须实现] 获取配置的字符串描述时被调用
            </summary>
            <returns>字符串描述，建议使用XML或JSON</returns>
        </member>
        <member name="M:ASEva.ModuleConfig.SetConfig(System.String)">
            <summary>
            [必须实现] 通过字符串描述更新配置时被调用
            </summary>
            <param name="config">字符串描述，需与 ASEva.ModuleConfig.GetConfig 获取的字符串格式一致</param>
        </member>
        <member name="M:ASEva.ModuleConfig.GetConfigStatus">
            <summary>
            [必须实现] 查询配置状态时被调用
            </summary>
            <returns>配置状态</returns>
        </member>
        <member name="M:ASEva.ModuleConfig.GetChildConfigStatus">
            <summary>
            [可选实现] 查询各子功能配置状态时被调用
            </summary>
            <returns>各子功能的配置状态</returns>
        </member>
        <member name="M:ASEva.ModuleConfig.GetProcessorOutputSampleTitles">
            <summary>
            [可选实现] 获取输出的样本标题集合时被调用
            </summary>
            <returns>样本标题集合，key为样本ID，value为标题描述</returns>
        </member>
        <member name="M:ASEva.ModuleConfig.GetProcessorOutputSceneTitles">
            <summary>
            [可选实现] 获取输出的场景标题集合时被调用
            </summary>
            <returns>场景标题集合，key为场景ID，value为标题描述</returns>
        </member>
        <member name="M:ASEva.ModuleConfig.GetProcessorOutputSignalNames">
            <summary>
            [可选实现] 获得该组件默认类别下的所有输出信号的名称时被调用
            </summary>
            <returns>信号名称列表</returns>
        </member>
        <member name="M:ASEva.ModuleConfig.GetProcessorOutputSignalNameTable">
            <summary>
            [可选实现] 获得该组件非默认类别下的所有输出信号的名称时被调用
            </summary>
            <returns>信号名称列表，key为类别名称</returns>
        </member>
        <member name="M:ASEva.ModuleConfig.GetProcessorOutputGraphDefinitions">
            <summary>
            [可选实现] 获得该组件所有输出图表的定义时被调用
            </summary>
            <returns>图表定义列表</returns>
        </member>
        <member name="M:ASEva.ModuleConfig.GetProcessorRelatedSignalPackings">
            <summary>
            [可选实现] 获取数据处理需要用到的所有信号打包配置时被调用
            </summary>
            <returns>信号打包配置列表</returns>
        </member>
        <member name="M:ASEva.ModuleConfig.GetChannelAliasList">
            <summary>
            [可选实现] 获取所有输出样本通道的别名列表时被调用
            </summary>
            <returns>通道别名列表</returns>
        </member>
        <member name="M:ASEva.ModuleConfig.GetUsingVideoChannels">
            <summary>
            [可选实现] 获取所有使用的视频通道时被调用
            </summary>
            <returns>所有使用的视频通道</returns>
        </member>
        <member name="M:ASEva.ModuleConfig.GetRecordDataTypes">
            <summary>
            (api:app=2.2.1) [可选实现] 获取文件写入需要的所有数据类型
            </summary>
            <returns>文件写入需要的所有数据类型</returns>
        </member>
        <member name="M:ASEva.ModuleConfig.MayCauseLowSpeed">
            <summary>
            (api:app=2.3.2) [可选实现] 获取是否会合法的导致极低（甚至停滞）的回放速度
            </summary>
            <returns>是否会合法的导致极低（甚至停滞）的回放速度</returns>
        </member>
        <member name="M:ASEva.ModuleConfig.DisableAll">
            <summary>
            [可选实现] 用户一键禁用功能时被调用
            </summary>
        </member>
        <member name="M:ASEva.ModuleConfig.DisableErrorPart">
            <summary>
            [可选实现] 禁用存在错误的部分功能时被调用。若 ASEva.ProcessorConfig.GetConfigStatus 不会返回 ASEva.ProcessorConfigStatus.EnabledWithWarning 则不需要实现
            </summary>
        </member>
        <member name="T:ASEva.DialogClass">
            <summary>
            (api:app=2.0.0) 对话框组件定义的基类
            </summary>
        </member>
        <member name="M:ASEva.DialogClass.GetDialogName">
            <summary>
            [必须实现] 获取对话框组件的名称时被调用
            </summary>
            <returns>对话框组件名称表，键'en'表示英文，'ch'表示中文</returns>
        </member>
        <member name="M:ASEva.DialogClass.GetDialogClassID">
            <summary>
            [必须实现] 获取对话框组件的类别ID时被调用
            </summary>
            <returns>对话框组件类别ID</returns>
        </member>
        <member name="M:ASEva.DialogClass.GetDialogImage">
            <summary>
            [可选实现] 获取对话框组件的图标图像时被调用
            </summary>
            <returns>图标图像（大小一般为16x16）</returns>
        </member>
        <member name="M:ASEva.DialogClass.GetRelatedModules">
            <summary>
            [必须实现]  获取对话框组件相关的组件ID
            </summary>
            <returns>组件ID列表</returns>
        </member>
        <member name="M:ASEva.DialogClass.GetRelatedConfigStatus">
            <summary>
            [必须实现]  获取对话框组件相关的配置状态时被调用
            </summary>
            <returns>配置状态</returns>
        </member>
        <member name="M:ASEva.DialogClass.GetRelatedChildConfigStatus">
            <summary>
            [可选实现] 查询对话框组件相关的各子功能配置状态时被调用
            </summary>
            <returns>各子功能的配置状态</returns>
        </member>
        <member name="M:ASEva.DialogClass.CreateDialogPanel">
            <summary>
            [必须实现] 创建对话框控件时被调用
            </summary>
            <returns>配置界面控件，该控件将填满对话框</returns>
        </member>
        <member name="M:ASEva.DialogClass.Transform(System.String)">
            <summary>
            [可选实现] 根据对话框配置返回分化的对话框组件定义
            </summary>
            <param name="config">对话框配置</param>
            <returns>分化的对话框组件定义</returns>
        </member>
        <member name="M:ASEva.DialogClass.GetTransformID">
            <summary>
            [分化的对话框组件必须实现] 获取分化标识ID时被调用
            </summary>
            <returns>分化标识ID</returns>
        </member>
        <member name="T:ASEva.EventData">
            <summary>
            (api:app=2.0.0) 事件基础信息
            </summary>
        </member>
        <member name="P:ASEva.EventData.Name">
            <summary>
            事件名称
            </summary>
        </member>
        <member name="P:ASEva.EventData.Base">
            <summary>
            所属session ID
            </summary>
        </member>
        <member name="P:ASEva.EventData.Offset">
            <summary>
            (api:app=2.0.5) 在所属session中的相对时间戳
            </summary>
        </member>
        <member name="P:ASEva.EventData.TimeStampLocal">
            <summary>
            事件发生时刻（本地时间，精确至毫秒）
            </summary>
        </member>
        <member name="P:ASEva.EventData.ConfigID">
            <summary>
            事件触发条件ID
            </summary>
        </member>
        <member name="P:ASEva.EventData.Description">
            <summary>
            事件触发条件描述
            </summary>
        </member>
        <member name="P:ASEva.EventData.EventHandle">
            <summary>
            事件对象
            </summary>
        </member>
        <member name="T:ASEva.EventSessionRecordStatus">
            <summary>
            (api:app=2.0.0) 事件session记录状态
            </summary>
        </member>
        <member name="F:ASEva.EventSessionRecordStatus.Disabled">
            <summary>
            未启用事件session记录
            </summary>
        </member>
        <member name="F:ASEva.EventSessionRecordStatus.Recording">
            <summary>
            记录中
            </summary>
        </member>
        <member name="F:ASEva.EventSessionRecordStatus.Recorded">
            <summary>
            已记录至本地存储
            </summary>
        </member>
        <member name="T:ASEva.EventInfo">
            <summary>
            (api:app=2.0.0) 事件完整信息
            </summary>
        </member>
        <member name="P:ASEva.EventInfo.Data">
            <summary>
            基础信息
            </summary>
        </member>
        <member name="P:ASEva.EventInfo.Comment">
            <summary>
            注释
            </summary>
        </member>
        <member name="P:ASEva.EventInfo.RootPath">
            <summary>
            根路径
            </summary>
        </member>
        <member name="P:ASEva.EventInfo.InfoXmlDataPath">
            <summary>
            info.xml路径
            </summary>
        </member>
        <member name="P:ASEva.EventInfo.SnapshotTableDataPath">
            <summary>
            快照信号表路径
            </summary>
        </member>
        <member name="P:ASEva.EventInfo.SnapshotLocationCityImagePath">
            <summary>
            快照城市尺度地图图像路径
            </summary>
        </member>
        <member name="P:ASEva.EventInfo.SnapshotLocationRoadImagePath">
            <summary>
            快照街道尺度地图图像路径
            </summary>
        </member>
        <member name="P:ASEva.EventInfo.SnapshotVideoImagePath">
            <summary>
            快照视频图像路径
            </summary>
        </member>
        <member name="P:ASEva.EventInfo.SnapshotBirdViewImagePath">
            <summary>
            快照俯瞰图图像路径
            </summary>
        </member>
        <member name="P:ASEva.EventInfo.SessionRecordPath">
            <summary>
            事件session记录路径
            </summary>
        </member>
        <member name="P:ASEva.EventInfo.SessionRecordStatus">
            <summary>
            事件session记录状态
            </summary>
        </member>
        <member name="T:ASEva.GraphType">
            <summary>
            (api:app=2.0.0) 图表类型
            </summary>
        </member>
        <member name="F:ASEva.GraphType.Invalid">
            <summary>
            无效图表
            </summary>
        </member>
        <member name="F:ASEva.GraphType.SingleValue">
            <summary>
            单值
            </summary>
        </member>
        <member name="F:ASEva.GraphType.ScatterPoints">
            <summary>
            散点图
            </summary>
        </member>
        <member name="F:ASEva.GraphType.HistAndLine">
            <summary>
            直方折线图
            </summary>
        </member>
        <member name="F:ASEva.GraphType.MatrixTable">
            <summary>
            矩阵表
            </summary>
        </member>
        <member name="F:ASEva.GraphType.LabelTable">
            <summary>
            标签表
            </summary>
        </member>
        <member name="T:ASEva.GraphValidationType">
            <summary>
            (api:app=2.0.0) 图表数据验证类型
            </summary>
        </member>
        <member name="F:ASEva.GraphValidationType.Invalid">
            <summary>
            不验证
            </summary>
        </member>
        <member name="F:ASEva.GraphValidationType.ValueBelow">
            <summary>
            阈值下方有效
            </summary>
        </member>
        <member name="F:ASEva.GraphValidationType.ValueAbove">
            <summary>
            阈值上方有效
            </summary>
        </member>
        <member name="F:ASEva.GraphValidationType.ValueInRange">
            <summary>
            范围区间内有效
            </summary>
        </member>
        <member name="F:ASEva.GraphValidationType.PolyBelow">
            <summary>
            折线下方有效
            </summary>
        </member>
        <member name="F:ASEva.GraphValidationType.PolyAbove">
            <summary>
            折线上方有效
            </summary>
        </member>
        <member name="F:ASEva.GraphValidationType.OutlineInside">
            <summary>
            轮廓范围内有效
            </summary>
        </member>
        <member name="F:ASEva.GraphValidationType.OutlineOutside">
            <summary>
            轮廓范围外有效
            </summary>
        </member>
        <member name="T:ASEva.GraphValidation">
            <summary>
            (api:app=2.0.0) 图表数据验证接口
            </summary>
        </member>
        <member name="T:ASEva.GraphDefinition">
            <summary>
            (api:app=2.0.0) 图表定义
            </summary>
        </member>
        <member name="P:ASEva.GraphDefinition.Type">
            <summary>
            图表类型
            </summary>
        </member>
        <member name="P:ASEva.GraphDefinition.Config">
            <summary>
            图表定义相关参数
            </summary>
        </member>
        <member name="P:ASEva.GraphDefinition.MainTitle">
            <summary>
            图表标题
            </summary>
        </member>
        <member name="P:ASEva.GraphDefinition.ColumnTitles">
            <summary>
            各列数据标题
            </summary>
        </member>
        <member name="P:ASEva.GraphDefinition.Validation">
            <summary>
            图表数据验证方式
            </summary>
        </member>
        <member name="M:ASEva.GraphDefinition.GetID">
            <summary>
            获取图表ID
            </summary>
            <returns>图表ID</returns>
        </member>
        <member name="T:ASEva.GraphData">
            <summary>
            (api:app=2.0.0) 图表数据
            </summary>
        </member>
        <member name="P:ASEva.GraphData.ID">
            <summary>
            图表ID
            </summary>
        </member>
        <member name="P:ASEva.GraphData.Definition">
            <summary>
            图表定义
            </summary>
        </member>
        <member name="P:ASEva.GraphData.Params">
            <summary>
            图表数据相关参数
            </summary>
        </member>
        <member name="P:ASEva.GraphData.Data">
            <summary>
            图表数据
            </summary>
        </member>
        <member name="M:ASEva.GraphData.InitParamsAndData">
            <summary>
            图表数据初始化，需要派生类实现
            </summary>
        </member>
        <member name="M:ASEva.GraphData.MergeWith(ASEva.GraphData)">
            <summary>
            与其他图表数据合并，需要派生类实现
            </summary>
            <param name="data">其他图表数据，需要ID一致</param>
        </member>
        <member name="M:ASEva.GraphData.HasData">
            <summary>
            是否已添加或赋值数据 ，需要派生类实现
            </summary>
            <returns>是否已添加或赋值数据 </returns>
        </member>
        <member name="M:ASEva.GraphData.Validate(System.Nullable{System.Double}@)">
            <summary>
            验证图表数据
            </summary>
            <param name="percentage">输出数据OK的百分比</param>
            <returns>数据验证是否通过</returns>
        </member>
        <member name="M:ASEva.GraphData.Save(System.String)">
            <summary>
            保存至文件
            </summary>
            <param name="file">文件名</param>
            <returns>保存是否成功</returns>
        </member>
        <member name="M:ASEva.GraphData.Create(ASEva.GraphDefinition)">
            <summary>
            根据图表定义创建初始化完成后的数据
            </summary>
            <param name="definition">图表定义</param>
            <returns>图表数据对象</returns>
        </member>
        <member name="M:ASEva.GraphData.Load(System.String)">
            <summary>
            从文件读取图表数据
            </summary>
            <param name="file">文件路径</param>
            <returns>图表数据对象</returns>
        </member>
        <member name="T:ASEva.Graph.HistLineMode">
            <summary>
            (api:app=2.0.0) 直方折线图模式
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.Sum">
            <summary>
            求和直方图，图表数据验证支持ValueBelow, ValueAbove, PolyBelow, PolyAbove
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.Aver">
            <summary>
            平均值直方图，图表数据验证支持PolyBelow, PolyAbove
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.Min">
            <summary>
            最小值直方图，图表数据验证支持PolyBelow, PolyAbove
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.Max">
            <summary>
            最大值直方图，图表数据验证支持PolyBelow, PolyAbove
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.Percentage">
            <summary>
            百分比直方图，图表数据验证支持ValueBelow, ValueAbove, PolyBelow, PolyAbove
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.SumAndSum">
            <summary>
            求和直方图，求和折线图，图表数据验证无效
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.MinAndMin">
            <summary>
            最小值直方图，最小值折线图，图表数据验证无效
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.MinAndMax">
            <summary>
            最小值直方图，最大值折线图，图表数据验证无效
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.MaxAndMax">
            <summary>
            最大值直方图，最大值折线图，图表数据验证无效
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.AverAndMin">
            <summary>
            平均值直方图，最小值折线图，图表数据验证无效
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.AverAndMax">
            <summary>
            平均值直方图，最大值折线图，图表数据验证无效
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.AverAndAver">
            <summary>
            平均值直方图，平均值折线图，图表数据验证无效
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.AverAndDev">
            <summary>
            平均值直方图，标准差折线图，图表数据验证无效
            </summary>
        </member>
        <member name="F:ASEva.Graph.HistLineMode.HitRatio">
            <summary>
            命中率直方图，图表数据验证支持PolyBelow, PolyAbove
            </summary>
        </member>
        <member name="T:ASEva.Graph.HistLineXValues">
            <summary>
            (api:app=2.0.0) 直方折线图中X轴数值描述
            </summary>
        </member>
        <member name="T:ASEva.Graph.HistLineXLabels">
            <summary>
            (api:app=2.0.0) 直方折线图中X轴文字描述
            </summary>
        </member>
        <member name="T:ASEva.Graph.HistLineSample">
            <summary>
            (api:app=2.0.0) 直方折线图中的样本
            </summary>
        </member>
        <member name="T:ASEva.Graph.HistAndLineData">
            <summary>
            (api:app=2.0.0) 直方折线图数据
            </summary>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.CreateDefinition(System.String,System.String,System.Object,ASEva.Graph.HistLineMode,System.String,System.Double,System.String,System.Double)">
            <summary>
            创建图表定义（不带数据验证）
            </summary>
            <param name="title">图表标题</param>
            <param name="xTitle">x轴标题</param>
            <param name="xValuesOrLabels">x轴的值或文字描述</param>
            <param name="mode">图表模式</param>
            <param name="histTitle">柱状图标题</param>
            <param name="defaultHistValue">柱状图初始值</param>
            <param name="lineTitle">折线图标题</param>
            <param name="defaultLineValue">折线图初始值</param>
            <returns>图表定义对象</returns>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.CreateDefinitionWithValidation(System.String,System.String,System.Object,ASEva.Graph.HistLineMode,ASEva.GraphValidation,System.String,System.Double,System.String,System.Double)">
            <summary>
            创建带数据验证的图表定义
            </summary>
            <param name="title">图表标题</param>
            <param name="xTitle">x轴标题</param>
            <param name="xValuesOrLabels">x轴的值或文字描述</param>
            <param name="mode">图表模式</param>
            <param name="validation">数据验证方式，null表示不验证。不同模式下的支持类型请参考 ASEva.Graph.HistLineMode </param>
            <param name="histTitle">柱状图标题</param>
            <param name="defaultHistValue">柱状图初始值</param>
            <param name="lineTitle">折线图标题</param>
            <param name="defaultLineValue">折线图初始值</param>
            <returns>图表定义对象</returns>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.GetXTitle">
            <summary>
            获取x轴标题
            </summary>
            <returns>x轴标题</returns>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.GetHistTitle">
            <summary>
            获取柱状图标题
            </summary>
            <returns>柱状图标题</returns>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.GetLineTitle">
            <summary>
            获取折线图标题
            </summary>
            <returns>折线图标题</returns>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.IsLineEnabled">
            <summary>
            获取折线图是否启用
            </summary>
            <returns>折线图是否启用</returns>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.GetXValuesOrLabels">
            <summary>
            获取x轴的值或文字描述
            </summary>
            <returns>x轴的值或文字描述</returns>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.AddTime(System.Double)">
            <summary>
            在输入x的所在区间添加1
            </summary>
            <param name="xValue">输入的x值，若超出x轴范围则不添加</param>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.AddTime(System.Int32)">
            <summary>
            在输入文本序号对应的区间添加1
            </summary>
            <param name="xLabelIndex">输入的x轴文本序号，若超出x轴范围则不添加</param>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.AddHits(System.Double,System.Boolean,System.UInt32)">
            <summary>
            在输入x的所在区间添加若干次命中或不命中
            </summary>
            <param name="xValue">输入的x值，若超出x轴范围则不添加</param>
            <param name="hit">是否命中</param>
            <param name="times">添加次数</param>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.AddHits(System.Int32,System.Boolean,System.UInt32)">
            <summary>
            在输入文本序号对应的区间添加若干次命中或不命中
            </summary>
            <param name="xLabelIndex">输入的x轴文本序号，若超出x轴范围则不添加</param>
            <param name="hit">是否命中</param>
            <param name="times">添加次数</param>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.AddSample(System.Double,System.Double)">
            <summary>
            在输入x的所在区间添加柱状图数值样本
            </summary>
            <param name="xValue">输入的x值，若超出x轴范围则不添加</param>
            <param name="yValue">柱状图数值样本</param>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.AddSample(System.Double,System.Double,System.Double)">
            <summary>
            在输入x的所在区间添加柱状图和折线图数值样本
            </summary>
            <param name="xValue">输入的x值，若超出x轴范围则不添加</param>
            <param name="histValue">柱状图数值样本</param>
            <param name="lineValue">折线图数值样本</param>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.AddSample(System.Int32,System.Double)">
            <summary>
            在输入文本序号对应的区间添加柱状图数值样本
            </summary>
            <param name="xLabelIndex">输入的x轴文本序号，若超出x轴范围则不添加</param>
            <param name="yValue">柱状图数值样本</param>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.AddSample(System.Int32,System.Double,System.Double)">
            <summary>
            在输入文本序号对应的区间添加柱状图和折线图数值样本
            </summary>
            <param name="xLabelIndex">输入的x轴文本序号，若超出x轴范围则不添加</param>
            <param name="histValue">柱状图数值样本</param>
            <param name="lineValue">折线图数值样本</param>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.GetSamples">
            <summary>
            获取所有样本
            </summary>
            <returns>样本数组</returns>
        </member>
        <member name="M:ASEva.Graph.HistAndLineData.IsHistogramOnlyMode(ASEva.Graph.HistLineMode)">
            <summary>
            检查一种模式是否为仅柱状图模式
            </summary>
            <param name="mode">图表模式</param>
            <returns>是否为仅柱状图模式</returns>
        </member>
        <member name="T:ASEva.Graph.LabelTableMode">
            <summary>
            (api:app=2.0.0) 标签表模式
            </summary>
        </member>
        <member name="F:ASEva.Graph.LabelTableMode.Sum">
            <summary>
            求和标签表
            </summary>
        </member>
        <member name="F:ASEva.Graph.LabelTableMode.Aver">
            <summary>
            平均值标签表
            </summary>
        </member>
        <member name="F:ASEva.Graph.LabelTableMode.Min">
            <summary>
            最小值标签表
            </summary>
        </member>
        <member name="F:ASEva.Graph.LabelTableMode.Max">
            <summary>
            最大值标签表
            </summary>
        </member>
        <member name="F:ASEva.Graph.LabelTableMode.Percentage">
            <summary>
            百分比标签表
            </summary>
        </member>
        <member name="T:ASEva.Graph.LabelTableValueDirection">
            <summary>
            (api:app=2.0.0) 标签表数值方向
            </summary>
        </member>
        <member name="F:ASEva.Graph.LabelTableValueDirection.Positive">
            <summary>
            正向，数值可视化范围为默认值至最大值
            </summary>
        </member>
        <member name="F:ASEva.Graph.LabelTableValueDirection.Negative">
            <summary>
            负向，数值可视化范围为默认值至最小值
            </summary>
        </member>
        <member name="F:ASEva.Graph.LabelTableValueDirection.Bidirectional">
            <summary>
            双向，数值可视化范围为默认值为中心的双向对称区间
            </summary>
        </member>
        <member name="T:ASEva.Graph.LabelTableData">
            <summary>
            (api:app=2.0.0) 标签表数据
            </summary>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.CreateDefinition(System.String,System.String,System.String,ASEva.Graph.LabelTableMode,System.String[],System.String[],ASEva.Graph.LabelTableValueDirection,System.Double)">
            <summary>
            创建图表定义
            </summary>
            <param name="title">图表标题</param>
            <param name="xTitle">x轴标题</param>
            <param name="yTitle">y轴标题</param>
            <param name="mode">图表模式</param>
            <param name="xLabels">x轴标签列表</param>
            <param name="yLabels">y轴标签列表</param>
            <param name="valueDirection">以默认值为基准值的数值方向，仅影响可视化效果</param>
            <param name="defaultValue">标签表数据初始值</param>
            <returns>图表定义对象</returns>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.GetMode">
            <summary>
            获取标签表模式
            </summary>
            <returns>标签表模式</returns>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.GetXTitle">
            <summary>
            获取x轴标题
            </summary>
            <returns>x轴标题</returns>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.GetYTitle">
            <summary>
            获取y轴标题
            </summary>
            <returns>y轴标题</returns>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.GetXLabelCount">
            <summary>
            获取x轴标签个数
            </summary>
            <returns>x轴标签个数</returns>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.GetYLabelCount">
            <summary>
            获取y轴标签个数
            </summary>
            <returns>y轴标签个数</returns>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.GetXLabels">
            <summary>
            获取x轴标签列表
            </summary>
            <returns>x轴标签列表</returns>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.GetYLabels">
            <summary>
            获取y轴标签列表
            </summary>
            <returns>y轴标签列表</returns>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.GetValueDirection">
            <summary>
            获取标签表数据方向
            </summary>
            <returns>标签表数据方向</returns>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.GetDefaultValue">
            <summary>
            获取标签表默认值
            </summary>
            <returns>默认值</returns>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.GetXHistValues">
            <summary>
            获取x轴各标签统计值
            </summary>
            <returns></returns>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.GetYHistValues">
            <summary>
            获取y轴各标签统计值
            </summary>
            <returns></returns>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.AddTime(System.Int32,System.Int32)">
            <summary>
            在x轴，y轴标签序号的位置添加1
            </summary>
            <param name="x">x轴标签序号，若超出范围则不添加</param>
            <param name="y">y轴标签序号，若超出范围则不添加</param>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.AddSample(System.Int32,System.Int32,System.Double)">
            <summary>
            在x轴，y轴标签序号的位置添加数值样本
            </summary>
            <param name="x">x轴标签序号，若超出范围则不添加</param>
            <param name="y">y轴标签序号，若超出范围则不添加</param>
            <param name="value">数值样本</param>
        </member>
        <member name="M:ASEva.Graph.LabelTableData.GetValues">
            <summary>
            获取标签表数据
            </summary>
            <returns>标签表数据</returns>
        </member>
        <member name="T:ASEva.Graph.MatrixTableMode">
            <summary>
            (api:app=2.0.0) 矩阵表模式
            </summary>
        </member>
        <member name="F:ASEva.Graph.MatrixTableMode.Sum">
            <summary>
            求和矩阵表，图表数据验证支持ValueBelow, ValueAbove, OutlineInside, OutlineOutside
            </summary>
        </member>
        <member name="F:ASEva.Graph.MatrixTableMode.Aver">
            <summary>
            平均值矩阵表，图表数据验证支持ValueBelow, ValueAbove
            </summary>
        </member>
        <member name="F:ASEva.Graph.MatrixTableMode.Min">
            <summary>
            最小值矩阵表，图表数据验证支持ValueBelow, ValueAbove
            </summary>
        </member>
        <member name="F:ASEva.Graph.MatrixTableMode.Max">
            <summary>
            最大值矩阵表，图表数据验证支持ValueBelow, ValueAbove
            </summary>
        </member>
        <member name="F:ASEva.Graph.MatrixTableMode.Percentage">
            <summary>
            百分比矩阵表，图表数据验证支持ValueBelow, ValueAbove, OutlineInside, OutlineOutside
            </summary>
        </member>
        <member name="T:ASEva.Graph.MatrixTableRange">
            <summary>
            (api:app=2.0.0) 矩阵表单轴范围
            </summary>
        </member>
        <member name="T:ASEva.Graph.MatrixTableValueRefRange">
            <summary>
            (api:app=2.0.0) 矩阵表中数值的范围
            </summary>
        </member>
        <member name="T:ASEva.Graph.MatrixTableData">
            <summary>
            (api:app=2.0.0) 矩阵表数据
            </summary>
        </member>
        <member name="M:ASEva.Graph.MatrixTableData.CreateDefinition(System.String,System.String,System.String,ASEva.Graph.MatrixTableMode,ASEva.Graph.MatrixTableRange,ASEva.Graph.MatrixTableRange,ASEva.Graph.MatrixTableValueRefRange,System.Double)">
            <summary>
            创建图表定义（不带数据验证）
            </summary>
            <param name="title">图表标题</param>
            <param name="xTitle">x轴标题</param>
            <param name="yTitle">y轴标题</param>
            <param name="mode">图表模式</param>
            <param name="xRange">x轴范围</param>
            <param name="yRange">y轴范围</param>
            <param name="valueRefRange">矩阵表数据参考范围</param>
            <param name="defaultValue">矩阵表数据初始值</param>
            <returns>图表定义对象</returns>
        </member>
        <member name="M:ASEva.Graph.MatrixTableData.CreateDefinitionWithValidation(System.String,System.String,System.String,ASEva.Graph.MatrixTableMode,ASEva.GraphValidation,ASEva.Graph.MatrixTableRange,ASEva.Graph.MatrixTableRange,ASEva.Graph.MatrixTableValueRefRange,System.Double)">
            <summary>
            创建带数据验证的图表定义
            </summary>
            <param name="title">图表标题</param>
            <param name="xTitle">x轴标题</param>
            <param name="yTitle">y轴标题</param>
            <param name="mode">图表模式</param>
            <param name="validation">数据验证方式，null表示不验证。不同模式下的支持类型请参考 ASEva.Graph.MatrixTableMode </param>
            <param name="xRange">x轴范围</param>
            <param name="yRange">y轴范围</param>
            <param name="valueRefRange">矩阵表数据参考范围</param>
            <param name="defaultValue">矩阵表数据初始值</param>
            <returns>图表定义对象</returns>
        </member>
        <member name="M:ASEva.Graph.MatrixTableData.GetMode">
            <summary>
            获取矩阵表模式
            </summary>
            <returns>矩阵表模式</returns>
        </member>
        <member name="M:ASEva.Graph.MatrixTableData.GetXTitle">
            <summary>
            获取x轴标题
            </summary>
            <returns>x轴标题</returns>
        </member>
        <member name="M:ASEva.Graph.MatrixTableData.GetYTitle">
            <summary>
            获取y轴标题
            </summary>
            <returns>y轴标题</returns>
        </member>
        <member name="M:ASEva.Graph.MatrixTableData.GetXRange">
            <summary>
            获取x轴范围
            </summary>
            <returns>x轴范围</returns>
        </member>
        <member name="M:ASEva.Graph.MatrixTableData.GetYRange">
            <summary>
            获取y轴范围
            </summary>
            <returns>y轴范围</returns>
        </member>
        <member name="M:ASEva.Graph.MatrixTableData.GetValueRefRange">
            <summary>
            获取矩阵表数据参考范围
            </summary>
            <returns>矩阵表数据参考范围</returns>
        </member>
        <member name="M:ASEva.Graph.MatrixTableData.GetXHistValues">
            <summary>
            获取矩阵表中x轴各区间统计值
            </summary>
            <returns>x轴各区间统计值</returns>
        </member>
        <member name="M:ASEva.Graph.MatrixTableData.GetYHistValues">
            <summary>
            获取矩阵表中y轴各区间统计值
            </summary>
            <returns>y轴各区间统计值</returns>
        </member>
        <member name="M:ASEva.Graph.MatrixTableData.AddTime(System.Double,System.Double)">
            <summary>
            在输入x，y坐标所在区间添加1
            </summary>
            <param name="x">输入的x值，若超出x轴范围则不添加</param>
            <param name="y">输入的y值，若超出y轴范围则不添加</param>
        </member>
        <member name="M:ASEva.Graph.MatrixTableData.AddSample(System.Double,System.Double,System.Double)">
            <summary>
            在输入x，y坐标所在区间添加数值样本
            </summary>
            <param name="x">输入的x值，若超出x轴范围则不添加</param>
            <param name="y">输入的y值，若超出y轴范围则不添加</param>
            <param name="value">数值样本</param>
        </member>
        <member name="M:ASEva.Graph.MatrixTableData.GetValues">
            <summary>
            获取矩阵表数据
            </summary>
            <returns>矩阵表数据</returns>
        </member>
        <member name="T:ASEva.Graph.OutlineInsideValidation">
            <summary>
            (api:app=2.0.0) 图表数据的轮廓内验证方式
            </summary>
        </member>
        <member name="T:ASEva.Graph.OutlineOutsideValidation">
            <summary>
            (api:app=2.0.0) 图表数据的轮廓外验证方式
            </summary>
        </member>
        <member name="T:ASEva.Graph.PolyAboveValidation">
            <summary>
            (api:app=2.0.0) 图表数据的折线上方验证方式
            </summary>
        </member>
        <member name="T:ASEva.Graph.PolyBelowValidation">
            <summary>
            (api:app=2.0.0) 图表数据的折线下方验证方式
            </summary>
        </member>
        <member name="T:ASEva.Graph.ScatterRange">
            <summary>
            (api:app=2.0.0) 散点图单轴范围
            </summary>
        </member>
        <member name="T:ASEva.Graph.ScatterOptions">
            <summary>
            (api:app=2.0.0) 散点图定义的附加选项
            </summary>
        </member>
        <member name="P:ASEva.Graph.ScatterOptions.XHistCount">
            <summary>
            x轴柱状图区间个数，null表示自动计算
            </summary>
        </member>
        <member name="P:ASEva.Graph.ScatterOptions.YHistCount">
            <summary>
            y轴柱状图区间个数，null表示自动计算
            </summary>
        </member>
        <member name="T:ASEva.Graph.ScatterPointsData">
            <summary>
            (api:app=2.0.0) 散点图数据
            </summary>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.CreateDefinition(System.String,System.String,System.String,ASEva.Graph.ScatterRange,ASEva.Graph.ScatterRange)">
            <summary>
            创建图表定义（不带数据验证，柱状图区间个数自动计算）
            </summary>
            <param name="title">图表标题</param>
            <param name="xTitle">x轴标题</param>
            <param name="yTitle">y轴标题</param>
            <param name="xRange">x轴范围</param>
            <param name="yRange">y轴范围</param>
            <returns>图表定义对象</returns>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.CreateDefinitionWithValidation(System.String,System.String,System.String,ASEva.Graph.ScatterRange,ASEva.Graph.ScatterRange,ASEva.GraphValidation)">
            <summary>
            创建带数据验证的图表定义（柱状图区间个数自动计算）
            </summary>
            <param name="title">图表标题</param>
            <param name="xTitle">x轴标题</param>
            <param name="yTitle">y轴标题</param>
            <param name="xRange">x轴范围</param>
            <param name="yRange">y轴范围</param>
            <param name="validation">数据验证方式，null表示不验证。支持OutlineInside, OutlineOutside</param>
            <returns>图表定义对象</returns>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.CreateDefinitionWithValidationAndOptions(System.String,System.String,System.String,ASEva.Graph.ScatterRange,ASEva.Graph.ScatterRange,ASEva.GraphValidation,ASEva.Graph.ScatterOptions)">
            <summary>
            创建带数据验证和附加选项的图表定义
            </summary>
            <param name="title">图表标题</param>
            <param name="xTitle">x轴标题</param>
            <param name="yTitle">y轴标题</param>
            <param name="xRange">x轴范围</param>
            <param name="yRange">y轴范围</param>
            <param name="validation">数据验证方式，null表示不验证。支持OutlineInside, OutlineOutside</param>
            <param name="options">附加选项</param>
            <returns>图表定义对象</returns>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.GetXTitle">
            <summary>
            获取x轴标题
            </summary>
            <returns>x轴标题</returns>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.GetYTitle">
            <summary>
            获取y轴标题
            </summary>
            <returns>y轴标题</returns>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.GetXRange">
            <summary>
            获取x轴范围
            </summary>
            <returns>x轴范围</returns>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.GetYRange">
            <summary>
            获取y轴范围
            </summary>
            <returns>y轴范围</returns>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.GetXHistCount">
            <summary>
            获取x轴柱状图区间个数
            </summary>
            <returns>x轴柱状图区间个数</returns>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.GetYHistCount">
            <summary>
            获取y轴柱状图区间个数
            </summary>
            <returns>y轴柱状图区间个数</returns>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.GetXHistValues">
            <summary>
            获取x轴柱状图各区间统计数
            </summary>
            <returns>x轴柱状图各区间统计数</returns>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.GetYHistValues">
            <summary>
            获取y轴柱状图各区间统计数
            </summary>
            <returns>y轴柱状图各区间统计数</returns>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.AddPoint(ASEva.FloatPoint)">
            <summary>
            添加样本点
            </summary>
            <param name="point">样本点，若超出范围则不添加</param>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.AddPointWithTimeInfo(ASEva.FloatPoint,System.DateTime,System.Double)">
            <summary>
            添加含时间信息的样本点
            </summary>
            <param name="point">样本点，若超出范围则不添加</param>
            <param name="session">样本点所在session</param>
            <param name="offset">样本点在该session中的时间戳</param>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.GetPoints">
            <summary>
            获取所有散点样本
            </summary>
            <returns>散点样本数组</returns>
        </member>
        <member name="M:ASEva.Graph.ScatterPointsData.GetPointTimeInfo(System.Int32,System.DateTime@,System.Double@)">
            <summary>
            获取某个散点样本的时间信息
            </summary>
            <param name="index">样本在数组中的序号</param>
            <param name="session">输出样本点所在session</param>
            <param name="offset">输出样本点在该session中的时间戳</param>
            <returns>是否成功获取时间信息</returns>
        </member>
        <member name="T:ASEva.Graph.SingleValueData">
            <summary>
            (api:app=2.0.0) 单值数据
            </summary>
        </member>
        <member name="M:ASEva.Graph.SingleValueData.CreateDefinition(System.String)">
            <summary>
            创建图表定义（不带数据验证）
            </summary>
            <param name="title">标题</param>
            <returns>图表定义对象</returns>
        </member>
        <member name="M:ASEva.Graph.SingleValueData.CreateDefinitionWithValidation(System.String,ASEva.GraphValidation)">
            <summary>
            创建带数据验证的图表定义
            </summary>
            <param name="title">标题</param>
            <param name="validation">数据验证方式，null表示不验证。支持ValueAbove, ValueBelow, ValueInRange</param>
            <returns>图表定义对象</returns>
        </member>
        <member name="M:ASEva.Graph.SingleValueData.SetValue(System.Double)">
            <summary>
            设置值
            </summary>
            <param name="val">设置值</param>
        </member>
        <member name="M:ASEva.Graph.SingleValueData.AddValue(System.Double)">
            <summary>
            添加值
            </summary>
            <param name="val">添加值</param>
        </member>
        <member name="M:ASEva.Graph.SingleValueData.GetValue">
            <summary>
            取得值
            </summary>
            <returns>取得值</returns>
        </member>
        <member name="T:ASEva.Graph.ValueAboveValidation">
            <summary>
            (api:app=2.0.0) 图表数据的阈值上方验证方式
            </summary>
        </member>
        <member name="T:ASEva.Graph.ValueBelowValidation">
            <summary>
            (api:app=2.0.0) 图表数据的阈值下方验证方式
            </summary>
        </member>
        <member name="T:ASEva.Graph.ValueInRangeValidation">
            <summary>
            (api:app=2.0.0) 图表数据的范围区间内验证方式
            </summary>
        </member>
        <member name="T:ASEva.MainWorkflow">
            <summary>
            (api:app=2.3.0) 主流程基类
            </summary>
        </member>
        <member name="M:ASEva.MainWorkflow.OnInit(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String@)">
            <summary>
            [可选实现][可含模态框] 初始化主流程
            </summary>
            <param name="appID">应用程序ID</param>
            <param name="parameters">初始化参数</param>
            <param name="uiCode">输出UI框架代号，若不使用UI则输出null</param>
            <returns>初始化是否成功</returns>
        </member>
        <member name="M:ASEva.MainWorkflow.OnRun(ASEva.MainWorkflowLoopCallback,System.String)">
            <summary>
            [必须实现][可含模态框] 运行主流程，需要在其中主循环中确保执行了 ASEva.CoreCallback.OnLoop
            </summary>
            <param name="callback">框架软件回调接口</param>
            <param name="startupProject">初始项目文件路径</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnAppBasicInfo(ASEva.AppBasicInfo)">
            <summary>
            [可选实现] 通知应用程序的基本信息
            </summary>
            <param name="info">应用程序的基本信息</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnLicenseRequest(ASEva.LicenseRequestReason,System.String,ASEva.MainWorkflowLicenseCallback)">
            <summary>
            [可选实现][可含模态框] 许可证验证失败后发起新的请求
            </summary>
            <param name="reason">验证失败原因</param>
            <param name="mac">机器码</param>
            <param name="callback">框架软件的回调接口</param>
            <returns>是否接受请求，如接受需稍后调用 ASEva.CoreCallback.OnRevalidateLicense </returns>
        </member>
        <member name="M:ASEva.MainWorkflow.OnCoreInitResult(ASEva.CoreInitResult,System.Boolean)">
            <summary>
            [可选实现][可含模态框] 通知框架软件的初始化结果
            </summary>
            <param name="result">框架软件的初始化结果</param>
            <param name="revisionUpdated">是否更新了发行号</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnError(System.String)">
            <summary>
            [可选实现][可含模态框] 输出错误消息
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnNotice(System.String)">
            <summary>
            [可选实现][可含模态框] 输出一般消息
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnConfirm(System.String)">
            <summary>
            [可选实现][可含模态框] 输出确认消息，并返回是否确认
            </summary>
            <param name="message">消息</param>
            <returns>是否确认</returns>
        </member>
        <member name="M:ASEva.MainWorkflow.OnLog(System.String,ASEva.LogLevel)">
            <summary>
            (api:app=2.3.3) [可选实现] 输出清单消息
            </summary>
            <param name="message"></param>
            <param name="level"></param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnDebugMessage(System.String)">
            <summary>
            [可选实现] 输出调试用消息
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnGetAppLanguage">
            <summary>
            [可选实现] 获取语言
            </summary>
            <returns>语言代号，null或"en"表示英文，"ch"表示中文</returns>
        </member>
        <member name="M:ASEva.MainWorkflow.OnCheckMultiInstance">
            <summary>
            [可选实现] 返回是否允许多个实例同时运行
            </summary>
            <returns>是否允许多个实例同时运行</returns>
        </member>
        <member name="M:ASEva.MainWorkflow.OnSelectBusProtocolFiles(ASEva.BusProtocolFileID[])">
            <summary>
            [可选实现][可含模态框] 选择总线协议文件
            </summary>
            <param name="selected">已选择的总线协议文件</param>
            <returns>新选择的总线协议文件</returns>
        </member>
        <member name="M:ASEva.MainWorkflow.OnSelectBusMessage(System.String)">
            <summary>
            [可选实现][可含模态框] 选择总线报文
            </summary>
            <param name="originMessageID">原报文ID</param>
            <returns>新报文ID</returns>
        </member>
        <member name="M:ASEva.MainWorkflow.OnSelectSignal(ASEva.SignalConfig,System.Boolean,System.Boolean,System.String)">
            <summary>
            [可选实现][可含模态框] 选择信号
            </summary>
            <param name="origin">原信号配置</param>
            <param name="withScale">是否需要配置scale</param>
            <param name="withSignBit">是否需要配置符号位信号</param>
            <param name="unit">单位</param>
            <returns>新信号配置</returns>
        </member>
        <member name="M:ASEva.MainWorkflow.OnSelectSignals(ASEva.SelectSignalHandler,System.Collections.Generic.List{System.String})">
            <summary>
            [可选实现][可含模态框] 一次性选择多个信号
            </summary>
            <param name="handler">新选择信号后的回调函数</param>
            <param name="existSignalIDList">已选择的信号ID列表</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnRunStandaloneTask(System.String,ASEva.MainWorkflowTaskCallback)">
            <summary>
            [可选实现][可含模态框] 显示正在进行的独立任务
            </summary>
            <param name="title">独立任务标题</param>
            <param name="callback">框架软件的回调接口</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnOpenDialog(System.Object,ASEva.DialogClassInfo,System.String)">
            <summary>
            [可选实现][可含模态框] 打开对话框
            </summary>
            <param name="dialog">对话框对象，继承ConfigPanel</param>
            <param name="info">对话框组件信息</param>
            <param name="config">对话框初始配置</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnAddWindow(System.Object,ASEva.WindowClassInfo,System.String,System.Boolean)">
            <summary>
            [可选实现] 添加窗口至工作空间
            </summary>
            <param name="window">窗口对象，继承WindowPanel</param>
            <param name="info">窗口组件信息</param>
            <param name="config">窗口初始配置</param>
            <param name="newWorkspaceIfNeeded">工作空间无足够空间时，是否在新工作空间添加（若不支持工作空间，则无视此选项）</param>
            <returns>是否成功添加，若成功添加，在释放窗口时需要调用 ASEva.Agency.UnregisterPanel </returns>
        </member>
        <member name="M:ASEva.MainWorkflow.OnSetCurrentDialogTitle(System.String,ASEva.Samples.CommonImage)">
            <summary>
            [可选实现] 设置当前对话框的标题和图标
            </summary>
            <param name="title">标题</param>
            <param name="icon">图标，分辨率为16x16</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnSetWindowTitle(System.Object,System.String,ASEva.Samples.CommonImage)">
            <summary>
            [可选实现] 设置窗口的标题和图标
            </summary>
            <param name="window">窗口对象，继承WindowPanel</param>
            <param name="title">标题</param>
            <param name="icon">图标，分辨率为16x16</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnResetData">
            <summary>
            [可选实现] 通知重置数据
            </summary>
        </member>
        <member name="M:ASEva.MainWorkflow.OnInputData(System.Object)">
            <summary>
            [可选实现] 输入新数据
            </summary>
            <param name="data">新数据</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnStartSession">
            <summary>
            [可选实现] 通知正在开始session
            </summary>
        </member>
        <member name="M:ASEva.MainWorkflow.OnStopSession">
            <summary>
            [可选实现] 通知正在结束session
            </summary>
        </member>
        <member name="M:ASEva.MainWorkflow.OnEditRecordedSession(System.DateTime)">
            <summary>
            [可选实现][可含模态框] 编辑新采集的session信息
            </summary>
            <param name="recordSessionID">新采集的session ID</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnEditOfflineMapPath(System.String)">
            <summary>
            [可选实现][可含模态框] 编辑离线地图文件路径
            </summary>
            <param name="originPath">原始路径，若未设置则为null</param>
            <returns>新路径，若未设置则为null</returns>
        </member>
        <member name="M:ASEva.MainWorkflow.OnEditDataEncryption(ASEva.MainWorkflowEncryptionCallback)">
            <summary>
            [可选实现][可含模态框] 编辑数据加密选项
            </summary>
            <param name="callback">框架软件的回调接口</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnInstallPlugin(ASEva.InstallPluginLibraryInfo[],ASEva.InstallPluginDriverInfo[],ASEva.MainWorkflowInstallCallback)">
            <summary>
            [可选实现][可含模态框] 安装插件
            </summary>
            <param name="libs">插件关联的库信息列表</param>
            <param name="drivers">插件关联的驱动和环境信息列表</param>
            <param name="callback">框架软件的回调接口</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnNewProject">
            <summary>
            [可选实现] 通知正在新建工程项目
            </summary>
        </member>
        <member name="M:ASEva.MainWorkflow.OnLoadProject(System.Xml.XmlDocument)">
            <summary>
            [可选实现] 通知新加载的工程项目
            </summary>
            <param name="xml">工程项目xml</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnSaveProject(System.Xml.XmlDocument)">
            <summary>
            [可选实现] 通知正在保存工程项目
            </summary>
            <param name="xml">工程项目xml</param>
        </member>
        <member name="M:ASEva.MainWorkflow.OnCheckReady">
            <summary>
            [可选实现] 返回主流程端是否允许进行保存工程项目和开始session等操作
            </summary>
            <returns>主流程端是否允许进行保存工程项目和开始session等操作</returns>
        </member>
        <member name="M:ASEva.MainWorkflow.OnExiting(System.Boolean)">
            <summary>
            [可选实现][可含模态框] 通知正在退出应用程序
            </summary>
            <param name="force">是否为强制结束</param>
            <returns>返回是否可退出，强制结束时将不起作用</returns>
        </member>
        <member name="M:ASEva.MainWorkflow.OnExit">
            <summary>
            [必须实现] 退出主流程
            </summary>
        </member>
        <member name="T:ASEva.AppBasicInfo">
            <summary>
            (api:app=2.3.0) 应用程序的基本信息
            </summary>
        </member>
        <member name="P:ASEva.AppBasicInfo.AppName">
            <summary>
            应用程序名称
            </summary>
        </member>
        <member name="P:ASEva.AppBasicInfo.AppIconPNG">
            <summary>
            应用程序的图标，为PNG文件二进制数据
            </summary>
        </member>
        <member name="P:ASEva.AppBasicInfo.AppVersion">
            <summary>
            应用程序版本
            </summary>
        </member>
        <member name="P:ASEva.AppBasicInfo.AppRevision">
            <summary>
            应用程序发行号，可为空（相同应用程序版本下的不同插件配置）
            </summary>
        </member>
        <member name="P:ASEva.AppBasicInfo.CoreVersion">
            <summary>
            框架软件的版本
            </summary>
        </member>
        <member name="T:ASEva.LicenseRequestReason">
            <summary>
            (api:app=2.3.0) 许可证请求原因
            </summary>
        </member>
        <member name="F:ASEva.LicenseRequestReason.InvalidLicense">
            <summary>
            未找到有效许可证
            </summary>
        </member>
        <member name="F:ASEva.LicenseRequestReason.WrongMAC">
            <summary>
            当前许可证机器码错误
            </summary>
        </member>
        <member name="F:ASEva.LicenseRequestReason.WrongVersion">
            <summary>
            当前许可证版本不支持
            </summary>
        </member>
        <member name="F:ASEva.LicenseRequestReason.Expired">
            <summary>
            当前许可证已过期
            </summary>
        </member>
        <member name="T:ASEva.CoreInitResult">
            <summary>
            (api:app=2.3.0) 框架软件的初始化结果
            </summary>
        </member>
        <member name="F:ASEva.CoreInitResult.OK">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:ASEva.CoreInitResult.LoadLibraryFailed">
            <summary>
            加载库失败
            </summary>
        </member>
        <member name="F:ASEva.CoreInitResult.InvalidComponent">
            <summary>
            含非法或失效组件
            </summary>
        </member>
        <member name="F:ASEva.CoreInitResult.LicenseFailed">
            <summary>
            许可证验证失败
            </summary>
        </member>
        <member name="F:ASEva.CoreInitResult.InstallComponentFailed">
            <summary>
            安装组件失败
            </summary>
        </member>
        <member name="T:ASEva.MainWorkflowLoopCallback">
            <summary>
            (api:app=2.3.0) 在主流程中使用的主循环回调接口
            </summary>
        </member>
        <member name="M:ASEva.MainWorkflowLoopCallback.OnLoop">
            <summary>
            执行框架软件的主循环函数
            </summary>
        </member>
        <member name="T:ASEva.MainWorkflowLicenseCallback">
            <summary>
            (api:app=2.3.0) 在主流程中使用的许可证验证回调接口
            </summary>
        </member>
        <member name="M:ASEva.MainWorkflowLicenseCallback.OnRevalidateLicense(System.String,System.String)">
            <summary>
            重新验证许可证
            </summary>
            <param name="license">许可证的Base64字符串，设为null表示放弃验证</param>
            <param name="pluginCode">插件码的Base64字符串</param>
        </member>
        <member name="T:ASEva.MainWorkflowTaskCallback">
            <summary>
            (api:app=2.3.0) 在主流程中使用的获取独立任务状态回调接口
            </summary>
        </member>
        <member name="M:ASEva.MainWorkflowTaskCallback.GetTaskState">
            <summary>
            获取独立任务状态
            </summary>
        </member>
        <member name="M:ASEva.MainWorkflowTaskCallback.GetTaskStateDescription">
            <summary>
            获取当前状态描述
            </summary>
        </member>
        <member name="M:ASEva.MainWorkflowTaskCallback.GetTaskProgress">
            <summary>
            获取任务进度，单位百分比
            </summary>
        </member>
        <member name="M:ASEva.MainWorkflowTaskCallback.CancelTask">
            <summary>
            取消任务
            </summary>
        </member>
        <member name="T:ASEva.MainWorkflowEncryptionCallback">
            <summary>
            (api:app=2.3.0) 在主流程中使用的配置数据加密选项的回调接口
            </summary>
        </member>
        <member name="M:ASEva.MainWorkflowEncryptionCallback.UnlockDataKey(System.String)">
            <summary>
            解锁
            </summary>
            <param name="key">旧密码，空表示使用默认密码</param>
            <returns>是否成功解锁</returns>
        </member>
        <member name="M:ASEva.MainWorkflowEncryptionCallback.UpdateDataKey(System.String)">
            <summary>
            更新密码
            </summary>
            <param name="key">新密码，空表示使用默认密码</param>
        </member>
        <member name="T:ASEva.MainWorkflowInstallCallback">
            <summary>
            (api:app=2.3.0) 在主流程中使用的安装插件的回调接口
            </summary>
        </member>
        <member name="M:ASEva.MainWorkflowInstallCallback.InstallLibrary(System.String)">
            <summary>
            安装库文件
            </summary>
            <param name="libraryID">插件关联的库ID</param>
        </member>
        <member name="M:ASEva.MainWorkflowInstallCallback.PrepareDriver(System.String)">
            <summary>
            准备驱动和环境等的文件，并返回安装文件的运行路径
            </summary>
            <param name="driverID">插件关联的驱动ID</param>
            <returns>安装文件的运行路径</returns>
        </member>
        <member name="T:ASEva.NativeClass">
            <summary>
            (api:app=2.0.0) C++组件定义的基类
            </summary>
        </member>
        <member name="M:ASEva.NativeClass.GetNativeName">
            <summary>
            [必须实现] 获取C++组件的名称时被调用
            </summary>
            <returns>C++组件名称表，键'en'表示英文，'ch'表示中文</returns>
        </member>
        <member name="M:ASEva.NativeClass.GetNativeClassID">
            <summary>
            [必须实现] 获取C++组件的类别ID时被调用
            </summary>
            <returns>C++组件类别ID</returns>
        </member>
        <member name="M:ASEva.NativeClass.GetNativePluginType">
            <summary>
            [必须实现] 获取C++模块的类型ID时被调用
            </summary>
            <returns>C++模块类型ID，需要与插件info.txt中的type字段一致</returns>
        </member>
        <member name="M:ASEva.NativeClass.CreateConfig">
            <summary>
            [可选实现] 创建配置对象时被调用。若不实现则仅包含一个默认的启用/禁用标志位
            </summary>
            <returns>配置对象</returns>
        </member>
        <member name="M:ASEva.NativeClass.ContainsDeviceConnection">
            <summary>
            [可选实现] 查询是否包含硬件设备连接功能时被调用
            </summary>
            <returns>是否包含硬件设备连接功能，默认为false</returns>
        </member>
        <member name="M:ASEva.NativeClass.GetFileIONames">
            <summary>
            (api:app=2.2.0) 获取文件读写相关名称的集合
            </summary>
            <returns>文件读写相关名称的集合，默认为null，即不提供文件读写功能</returns>
        </member>
        <member name="T:ASEva.Plugin">
            <summary>
            (api:app=2.0.0) 插件入口基类。在C\#类库项目中可实现一个继承Plugin的类作为dll入口，只要保证dll文件名、类所在命名空间、类名三者一致，即可被ASEva作为插件加载
            </summary>
        </member>
        <member name="M:ASEva.Plugin.GetVersion">
            <summary>
            [必须实现] 获取插件版本时被调用
            </summary>
            <returns>版本号</returns>
        </member>
        <member name="M:ASEva.Plugin.GetWindowClasses">
            <summary>
            [可选实现] 获取插件包含的所有窗口组件的定义对象时被调用
            </summary>
            <returns>窗口组件定义对象的列表</returns>
        </member>
        <member name="M:ASEva.Plugin.GetDialogClasses">
            <summary>
            [可选实现] 获取插件包含的所有对话框组件的定义对象时被调用
            </summary>
            <returns>对话框组件定义对象的列表</returns>
        </member>
        <member name="M:ASEva.Plugin.GetProcessorClasses">
            <summary>
            [可选实现] 获取插件包含的所有数据处理组件的定义对象时被调用
            </summary>
            <returns>数据处理组件定义对象的列表</returns>
        </member>
        <member name="M:ASEva.Plugin.GetNativeClasses">
            <summary>
            [可选实现] 获取插件包含的所有C++模块的定义对象时被调用
            </summary>
            <returns>C++模块定义对象的列表</returns>
        </member>
        <member name="M:ASEva.Plugin.GetTaskClasses">
            <summary>
            [可选实现] 获取插件包含的所有独立任务组件的定义对象时被调用
            </summary>
            <returns>独立任务组件定义对象的列表</returns>
        </member>
        <member name="M:ASEva.Plugin.GetMainWorkflow">
            <summary>
            (api:app=2.3.0) [可选实现] 获取插件包含的主流程时被调用
            </summary>
            <returns>主流程对象</returns>
        </member>
        <member name="M:ASEva.Plugin.GetGlobalPathKeys">
            <summary>
            [可选实现] 获取插件包需要使用的所有全局路径的键
            </summary>
            <returns>全局路径键的列表</returns>
        </member>
        <member name="M:ASEva.Plugin.OnApplicationStarted">
            <summary>
            [可选实现] 在插件成功加载后被调用（用于开启背景线程等）
            </summary>
        </member>
        <member name="M:ASEva.Plugin.OnApplicationPrepareStopping">
            <summary>
            [可选实现] 在应用程序准备关闭时被调用（用于发送停止线程指令等）
            </summary>
        </member>
        <member name="M:ASEva.Plugin.OnApplicationStopping">
            <summary>
            [可选实现] 在应用程序正在关闭时被调用（用于停止并确保线程已停止等）
            </summary>
        </member>
        <member name="M:ASEva.Plugin.OnProjectSwitched">
            <summary>
            [可选实现] 在项目切换后（包括新建项目）被调用
            </summary>
        </member>
        <member name="M:ASEva.Plugin.OnDataPathSwitched">
            <summary>
            (api:app=2.4.0) 在数据根目录切换后被调用
            </summary>
        </member>
        <member name="M:ASEva.Plugin.OnDataLayerSwitched">
            <summary>
            (api:app=2.4.0) 在数据层级切换后被调用
            </summary>
        </member>
        <member name="M:ASEva.Plugin.OnSessionStarting">
            <summary>
            [可选实现] 在Session开始前被调用
            </summary>
        </member>
        <member name="M:ASEva.Plugin.OnSessionStopped">
            <summary>
            [可选实现] 在Session采集或处理完毕后被调用
            </summary>
        </member>
        <member name="M:ASEva.Plugin.OnUIThreadLooping">
            <summary>
            [可选实现] 在UI线程循环时被调用（用于执行仅限UI线程的功能）
            </summary>
        </member>
        <member name="T:ASEva.ProcessorOutputSample">
            <summary>
            (api:app=2.0.0) 数据处理的输出样本
            </summary>
        </member>
        <member name="F:ASEva.ProcessorOutputSample.sample">
            <summary>
            输出样本，若timeRef为空则需要对Base, Offset, Timeline赋值
            </summary>
        </member>
        <member name="F:ASEva.ProcessorOutputSample.timeRef">
            <summary>
            时间戳参考样本，sample的时间戳将被赋值为与此样本一致
            </summary>
        </member>
        <member name="M:ASEva.ProcessorOutputSample.#ctor(ASEva.Sample)">
            <summary>
            仅基于输出样本构造
            </summary>
            <param name="sample">输出样本</param>
        </member>
        <member name="M:ASEva.ProcessorOutputSample.#ctor(ASEva.Sample,ASEva.Sample)">
            <summary>
            基于输出样本和时间戳参考样本构造
            </summary>
            <param name="sample">输出样本</param>
            <param name="timeRef">时间戳参考样本</param>
        </member>
        <member name="T:ASEva.Processor">
            <summary>
            (api:app=2.0.0) 数据处理对象。在每轮开始时创建，结束时销毁
            </summary>
        </member>
        <member name="M:ASEva.Processor.OnInit">
            <summary>
            [可选实现] 在Session开始时，Processor对象创建后被调用
            </summary>
        </member>
        <member name="M:ASEva.Processor.OnProcessSample(ASEva.Sample)">
            <summary>
            [必须实现] 在到来新数据样本时被调用，进行数据处理
            </summary>
            <param name="sample">新数据样本，包括通用样本 ASEva.GeneralSample , 手动触发器样本 ASEva.Samples.ManualTriggerSample , 音频帧样本 ASEva.Samples.AudioFrameSample , 点云帧样本 ASEva.Samples.PointCloudSample 等类型</param>
            <returns>返回的样本列表</returns>
        </member>
        <member name="M:ASEva.Processor.OnInputSignalsData(ASEva.Samples.SignalsData)">
            <summary>
            [可选实现] 在到来新信号数据时被调用，进行数据处理
            </summary>
            <param name="signals">新信号数据</param>
        </member>
        <member name="M:ASEva.Processor.OnInputBusDataPack(ASEva.Samples.BusDataPack)">
            <summary>
            [可选实现] 在到来新总线数据时被调用，进行数据处理
            </summary>
            <param name="busData">新总线数据（需要注意，报文长度超过64字节的数据将被截去多出部分）</param>
        </member>
        <member name="M:ASEva.Processor.OnInputEventData(ASEva.EventData)">
            <summary>
            [可选实现] 在到来新事件数据时被调用，进行数据处理
            </summary>
            <param name="eventData">新事件数据</param>
        </member>
        <member name="M:ASEva.Processor.OnRelease">
            <summary>
            [可选实现] 在Session结束时，Processor对象销毁前被调用
            </summary>
        </member>
        <member name="T:ASEva.ProcessorClass">
            <summary>
            (api:app=2.0.0) 数据处理组件定义的基类
            </summary>
        </member>
        <member name="M:ASEva.ProcessorClass.GetProcessorName">
            <summary>
            [必须实现] 获取数据处理组件的名称时被调用
            </summary>
            <returns>数据处理组件名称表，键'en'表示英文，'ch'表示中文</returns>
        </member>
        <member name="M:ASEva.ProcessorClass.GetProcessorClassID">
            <summary>
            [必须实现] 获取数据处理组件的类别ID时被调用
            </summary>
            <returns>数据处理组件类别ID</returns>
        </member>
        <member name="M:ASEva.ProcessorClass.CreateConfig">
            <summary>
            [可选实现] 创建配置对象时被调用。若不实现则仅包含一个默认的启用/禁用标志位
            </summary>
            <returns>配置对象</returns>
        </member>
        <member name="M:ASEva.ProcessorClass.CreateProcessor(ASEva.ModuleConfig)">
            <summary>
            [必须实现] 创建数据处理对象时被调用
            </summary>
            <param name="config">配置对象，定义数据处理行为</param>
            <returns>数据处理对象</returns>
        </member>
        <member name="M:ASEva.ProcessorClass.GetRawToSampleProtocols">
            <summary>
            [可选实现] 获取可直接作为样本输出的原始数据协议列表及对应的样本别名
            </summary>
            <returns>原始数据协议（键）列表及对应的样本别名（值）</returns>
        </member>
        <member name="T:ASEva.Sample">
            <summary>
            (api:app=2.0.0) 数据样本
            </summary>
        </member>
        <member name="P:ASEva.Sample.Base">
            <summary>
            所属session ID
            </summary>
        </member>
        <member name="P:ASEva.Sample.Offset">
            <summary>
            相对时间戳（session开始时间为0），单位秒
            </summary>
        </member>
        <member name="P:ASEva.Sample.Timeline">
            <summary>
            时间线，单位秒
            </summary>
        </member>
        <member name="P:ASEva.Sample.TimestampLocal">
            <summary>
            [依赖Agency] 绝对时间戳（本地时间），含年月日时分秒，毫秒
            </summary>
        </member>
        <member name="P:ASEva.Sample.TimestampUTC">
            <summary>
            [依赖Agency] 绝对时间戳（UTC时间），含年月日时分秒，毫秒
            </summary>
        </member>
        <member name="M:ASEva.Sample.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:ASEva.Sample.#ctor(System.DateTime,System.Double,System.Double)">
            <summary>
            带时间戳初始化的构造函数
            </summary>
            <param name="bas">所属session ID</param>
            <param name="offset">相对时间戳</param>
            <param name="timeline">时间线</param>
        </member>
        <member name="M:ASEva.Sample.CompareTo(ASEva.Sample)">
            <summary>
            时间线比较
            </summary>
            <param name="other">另一个数据样本</param>
            <returns>比较结果</returns>
        </member>
        <member name="T:ASEva.Sample.SearchResult">
            <summary>
            对样本缓存的搜索结果
            </summary>
        </member>
        <member name="M:ASEva.Sample.GetGeneralSampleProtocol">
            <summary>
            [支持通用样本转换时必须实现] 特化样本转为 ASEva.GeneralSample 的协议名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:ASEva.Sample.GetGeneralSampleProtocols">
            <summary>
            [支持通用样本转换时必须实现] 从 ASEva.GeneralSample 转为特化样本时支持的协议名称列表
            </summary>
            <returns>支持的协议名称列表</returns>
        </member>
        <member name="M:ASEva.Sample.FromGeneralSample(ASEva.GeneralSample)">
            <summary>
            [支持通用样本转换时必须实现] 从 ASEva.GeneralSample 转为特化样本，需实现时间戳拷贝(Base, Offset, Timeline)
            </summary>
            <param name="sample">通用样本</param>
            <returns>转换是否成功</returns>
        </member>
        <member name="M:ASEva.Sample.ToGeneralSample">
            <summary>
            [支持通用样本转换时可选实现] 特化样本转为 ASEva.GeneralSample ，需实现时间戳拷贝(Base, Offset, Timeline)
            </summary>
            <returns>通用样本</returns>
        </member>
        <member name="M:ASEva.Sample.ToGeneralSample(System.Int32)">
            <summary>
            [支持通用样本转换时可选实现] 特化样本转为 ASEva.GeneralSample ，需实现时间戳拷贝(Base, Offset, Timeline)以及通道赋值
            </summary>
            <returns>通用样本</returns>
        </member>
        <member name="M:ASEva.Sample.SupportInterpolation">
            <summary>
            [可选实现] 返回是否支持样本间插值
            </summary>
            <returns>是否支持样本间插值，默认为false</returns>
        </member>
        <member name="M:ASEva.Sample.Interpolate(ASEva.Sample.SearchResult)">
            <summary>
            [SupportInterpolation返回true时必须实现] 基于 ASEva.Sample.Search 返回的搜索结果进行样本插值，无需输出时间戳
            </summary>
            <param name="input">样本缓存的搜索结果</param>
            <returns>返回插值后的样本</returns>
        </member>
        <member name="M:ASEva.Sample.IsInRange(System.Collections.Generic.List{ASEva.Sample},System.Double)">
            <summary>
            判断目标时间线是否在样本缓存范围内
            </summary>
            <param name="samples">样本缓存</param>
            <param name="targetTimeline">目标时间线</param>
            <returns>是否在范围内</returns>
        </member>
        <member name="M:ASEva.Sample.IsOutRangeLower(System.Collections.Generic.List{ASEva.Sample},System.Double)">
            <summary>
            判断目标时间线是否在样本缓存范围外，且比所有样本都更早
            </summary>
            <param name="samples">样本缓存</param>
            <param name="targetTimeline">目标时间线</param>
            <returns>是否在范围外，且比所有样本都更早</returns>
        </member>
        <member name="M:ASEva.Sample.IsOutRangeUpper(System.Collections.Generic.List{ASEva.Sample},System.Double)">
            <summary>
            判断目标时间线是否在样本缓存范围外，且比所有样本都更晚
            </summary>
            <param name="samples">样本缓存</param>
            <param name="targetTimeline">目标时间线</param>
            <returns>是否在范围外，且比所有样本都更晚</returns>
        </member>
        <member name="M:ASEva.Sample.Search(System.Collections.Generic.List{ASEva.Sample},System.Double,System.Double)">
            <summary>
            按目标时间戳搜索缓存列表
            </summary>
            <param name="samples">样本缓存</param>
            <param name="targetTimeline">目标时间线</param>
            <param name="maxGap">最大时间间隔，若最近样本的时间间隔大于此值，则不考虑</param>
            <returns>返回搜索结果</returns>
        </member>
        <member name="M:ASEva.Sample.SearchAndInterpolate(System.Collections.Generic.List{ASEva.Sample},System.Double)">
            <summary>
            按目标时间戳搜索缓存列表，自动进行插值并返回插值后样本（需要样本支持插值，且目标时间在缓存范围内，默认最大时间间隔为10秒）
            </summary>
            <param name="samples">样本缓存</param>
            <param name="targetTimeline">目标时间线</param>
            <returns>插值后的样本</returns>
        </member>
        <member name="M:ASEva.Sample.SearchAndGetNearest(System.Collections.Generic.List{ASEva.Sample},System.Double,System.DateTime)">
            <summary>
            在样本缓存列表中搜索最近样本
            </summary>
            <param name="samples">样本缓存</param>
            <param name="targetTimeline">目标时间线</param>
            <param name="targetBase">目标的session ID</param>
            <returns>最近样本，若无则返回null</returns>
        </member>
        <member name="M:ASEva.Sample.ClipWithBufferBegin(System.Collections.Generic.List{ASEva.Sample},System.Double)">
            <summary>
            根据全局缓存范围，将样本缓存中较早样本移除
            </summary>
            <param name="samples">样本缓存</param>
            <param name="bufferBegin">全局缓存范围的下沿</param>
        </member>
        <member name="T:ASEva.GeneralSampleValueMode">
            <summary>
            (api:app=2.0.0) 通用样本中值的类型
            </summary>
        </member>
        <member name="F:ASEva.GeneralSampleValueMode.Invalid">
            <summary>
            无效，采集为"na"
            </summary>
        </member>
        <member name="F:ASEva.GeneralSampleValueMode.Number">
            <summary>
            数值
            </summary>
        </member>
        <member name="F:ASEva.GeneralSampleValueMode.Text">
            <summary>
            字符串
            </summary>
        </member>
        <member name="T:ASEva.GeneralSampleValue">
            <summary>
            (api:app=2.0.0) 通用样本值
            </summary>
        </member>
        <member name="T:ASEva.GeneralSample">
            <summary>
            (api:app=2.0.0) 通用样本
            </summary>
        </member>
        <member name="P:ASEva.GeneralSample.Protocol">
            <summary>
            样本协议
            </summary>
        </member>
        <member name="P:ASEva.GeneralSample.Channel">
            <summary>
            样本所属通道，null表示无通道信息（唯一通道样本）
            </summary>
        </member>
        <member name="P:ASEva.GeneralSample.Values">
            <summary>
            值列表
            </summary>
        </member>
        <member name="P:ASEva.GeneralSample.NumberOfSignificants">
            <summary>
            值列表中关键数值的个数
            </summary>
        </member>
        <member name="T:ASEva.Samples.AudioFrameSample">
            <summary>
            (api:app=2.0.0) 音频帧样本，44100Hz，16bit，单通道
            </summary>
        </member>
        <member name="P:ASEva.Samples.AudioFrameSample.Data">
            <summary>
            音频帧数据
            </summary>
        </member>
        <member name="T:ASEva.Samples.BusMessageSample">
            <summary>
            (api:app=2.0.0) 单个总线报文样本
            </summary>
        </member>
        <member name="P:ASEva.Samples.BusMessageSample.Channel">
            <summary>
            来源通道（1~16）
            </summary>
        </member>
        <member name="P:ASEva.Samples.BusMessageSample.Length">
            <summary>
            总线报文的实际长度
            </summary>
        </member>
        <member name="P:ASEva.Samples.BusMessageSample.ID">
            <summary>
            报文ID
            </summary>
        </member>
        <member name="P:ASEva.Samples.BusMessageSample.Data">
            <summary>
            报文数据，长度限定在64以下，可能小于报文的实际长度
            </summary>
        </member>
        <member name="T:ASEva.Samples.BusDataPack">
            <summary>
            (api:app=2.0.0) 总线报文样本集合
            </summary>
        </member>
        <member name="P:ASEva.Samples.BusDataPack.Samples">
            <summary>
            总线报文样本列表
            </summary>
        </member>
        <member name="T:ASEva.Samples.ManualTriggerSample">
            <summary>
            (api:app=2.0.0) 手动触发器样本
            </summary>
        </member>
        <member name="P:ASEva.Samples.ManualTriggerSample.States">
            <summary>
            手动触发器状态列表，长度16
            </summary>
        </member>
        <member name="M:ASEva.Samples.ManualTriggerSample.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:ASEva.Samples.PointCloudSample">
            <summary>
            (api:app=2.0.0) 点云样本
            </summary>
        </member>
        <member name="P:ASEva.Samples.PointCloudSample.Channel">
            <summary>
            样本通道（0~5）
            </summary>
        </member>
        <member name="P:ASEva.Samples.PointCloudSample.PointCount">
            <summary>
            点个数
            </summary>
        </member>
        <member name="P:ASEva.Samples.PointCloudSample.Points">
            <summary>
            点坐标列表，数组尺寸为Nx3，N为个数，3分别为x(前),y(左),z(上)轴坐标，单位为厘米
            </summary>
        </member>
        <member name="P:ASEva.Samples.PointCloudSample.Intensities">
            <summary>
            点强度列表，数组长度个数N，数值范围为0(最小)~10000(最大)
            </summary>
        </member>
        <member name="P:ASEva.Samples.PointCloudSample.Colors">
            <summary>
            点颜色列表，数组尺寸为Nx3，N为个数，3分别为R,G,B颜色值
            </summary>
        </member>
        <member name="P:ASEva.Samples.PointCloudSample.LaserIDs">
            <summary>
            数组长度N，值为激光线ID，如32线雷达从下往上ID分别为0~31
            </summary>
        </member>
        <member name="P:ASEva.Samples.PointCloudSample.TimeOffsets">
            <summary>
            数组长度N，值为相对于样本时间戳的时间偏置，单位为10微秒（若一帧数据时间跨度超过655ms则不应有此字段数据）
            </summary>
        </member>
        <member name="P:ASEva.Samples.PointCloudSample.YawAngles">
            <summary>
            数组长度N，值为横摆角，单位为0.01°，数值范围为-18000~+18000，0点为车辆坐标系x轴，逆时针为正
            </summary>
        </member>
        <member name="P:ASEva.Samples.PointCloudSample.MirrorIDs">
            <summary>
            数组长度N，值为镜面ID
            </summary>
        </member>
        <member name="P:ASEva.Samples.PointCloudSample.ByteValues">
            <summary>
            (api:app=2.0.9) byte字段数组的表，键为字段ID（具体请参考点云数据格式文档），值为长度为N的数组，存放该字段ID对应byte数值
            </summary>
        </member>
        <member name="P:ASEva.Samples.PointCloudSample.ShortValues">
            <summary>
            (api:app=2.0.9) short字段数组的表，键为字段ID（具体请参考点云数据格式文档），值为长度为N的数组，存放该字段ID对应short数值
            </summary>
        </member>
        <member name="P:ASEva.Samples.PointCloudSample.FloatValues">
            <summary>
            (api:app=2.0.9) float字段数组的表，键为字段ID（具体请参考点云数据格式文档），值为长度为N的数组，存放该字段ID对应float数值
            </summary>
        </member>
        <member name="T:ASEva.Samples.SignalSample">
            <summary>
            (api:app=2.0.0) 数据处理组件输出的信号样本
            </summary>
        </member>
        <member name="P:ASEva.Samples.SignalSample.Prefix">
            <summary>
            信号ID的前缀，输出时无需赋值（由系统赋值）
            </summary>
        </member>
        <member name="P:ASEva.Samples.SignalSample.Name">
            <summary>
            信号的名称，应为 ASEva.ProcessorClass.GetProcessorOutputSignalNames 返回列表中的名称
            </summary>
        </member>
        <member name="P:ASEva.Samples.SignalSample.Value">
            <summary>
            信号值
            </summary>
        </member>
        <member name="P:ASEva.Samples.SignalSample.SignalID">
            <summary>
            信号的全局唯一ID（仅get）
            </summary>
        </member>
        <member name="T:ASEva.Samples.SignalData">
            <summary>
            (api:app=2.0.0) 单个信号数据
            </summary>
        </member>
        <member name="P:ASEva.Samples.SignalData.Offset">
            <summary>
            相对时间戳，单位秒
            </summary>
        </member>
        <member name="P:ASEva.Samples.SignalData.Value">
            <summary>
            信号值
            </summary>
        </member>
        <member name="M:ASEva.Samples.SignalData.#ctor(System.Double,System.Double)">
            <summary>
            默认构造函数
            </summary>
            <param name="offset">相对时间戳</param>
            <param name="value">信号值</param>
        </member>
        <member name="T:ASEva.Samples.SignalsData">
            <summary>
            (api:app=2.0.0) 输入的信号数据列表（单个信号类别）
            </summary>
        </member>
        <member name="P:ASEva.Samples.SignalsData.Base">
            <summary>
            所属session ID
            </summary>
        </member>
        <member name="P:ASEva.Samples.SignalsData.SignalID">
            <summary>
            信号的全局唯一ID
            </summary>
        </member>
        <member name="P:ASEva.Samples.SignalsData.Signals">
            <summary>
            信号列表
            </summary>
        </member>
        <member name="T:ASEva.Samples.SpecialCameraType">
            <summary>
            (api:app=2.0.0) 特殊摄像头类型
            </summary>
        </member>
        <member name="F:ASEva.Samples.SpecialCameraType.Normal">
            <summary>
            无位置摄像头（标准模型），使用 DefaultCameraMeta
            </summary>
        </member>
        <member name="F:ASEva.Samples.SpecialCameraType.FrontCamera">
            <summary>
            前向摄像头（标准模型），使用 GenericCameraMeta
            </summary>
        </member>
        <member name="F:ASEva.Samples.SpecialCameraType.LeftLaneCamera">
            <summary>
            垂直面向左车道线摄像头（标准模型），使用 LaneLineCameraMeta
            </summary>
        </member>
        <member name="F:ASEva.Samples.SpecialCameraType.RightLaneCamera">
            <summary>
            垂直面向右车道线摄像头（标准模型），使用 LaneLineCameraMeta
            </summary>
        </member>
        <member name="F:ASEva.Samples.SpecialCameraType.LeftBlindSpotCamera">
            <summary>
            面向左盲区摄像头（标准模型），使用 BlindSpotCameraMeta
            </summary>
        </member>
        <member name="F:ASEva.Samples.SpecialCameraType.RightBlindSpotCamera">
            <summary>
            面向右盲区摄像头（标准模型），使用 BlindSpotCameraMeta
            </summary>
        </member>
        <member name="F:ASEva.Samples.SpecialCameraType.AnyCamera">
            <summary>
            任意位置摄像头
            </summary>
        </member>
        <member name="F:ASEva.Samples.SpecialCameraType.NormalFisheyeCamera">
            <summary>
            (api:app=2.1.2) 无位置摄像头（鱼眼模型），使用 FisheyeCameraMeta
            </summary>
        </member>
        <member name="F:ASEva.Samples.SpecialCameraType.FrontFisheyeCamera">
            <summary>
            (api:app=2.1.2) 前向摄像头（鱼眼模型），使用 FisheyeCameraMeta
            </summary>
        </member>
        <member name="F:ASEva.Samples.SpecialCameraType.AnyFisheyeCamera">
            <summary>
            (api:app=2.1.2) 任意位置摄像头（鱼眼模型），使用 FisheyeCameraMeta
            </summary>
        </member>
        <member name="T:ASEva.Samples.CommonCameraMeta">
            <summary>
            (api:app=2.0.0) 摄像头信息共通部分（标准模型）
            </summary>
        </member>
        <member name="P:ASEva.Samples.CommonCameraMeta.Inverted">
            <summary>
            是否作了翻转
            </summary>
        </member>
        <member name="P:ASEva.Samples.CommonCameraMeta.VFlipped">
            <summary>
            是否作了镜像
            </summary>
        </member>
        <member name="P:ASEva.Samples.CommonCameraMeta.Undistorted">
            <summary>
            是否作了消歪曲
            </summary>
        </member>
        <member name="P:ASEva.Samples.CommonCameraMeta.K3">
            <summary>
            (api:app=2.2.4) K3
            </summary>
        </member>
        <member name="P:ASEva.Samples.CommonCameraMeta.K4">
            <summary>
            (api:app=2.2.4) K4
            </summary>
        </member>
        <member name="P:ASEva.Samples.CommonCameraMeta.K5">
            <summary>
            (api:app=2.2.4) K5
            </summary>
        </member>
        <member name="P:ASEva.Samples.CommonCameraMeta.K6">
            <summary>
            (api:app=2.2.4) K6
            </summary>
        </member>
        <member name="T:ASEva.Samples.DefaultCameraMeta">
            <summary>
            (api:app=2.0.0) 默认摄像头关联信息（标准模型）
            </summary>
        </member>
        <member name="P:ASEva.Samples.DefaultCameraMeta.Common">
            <summary>
            共同部分
            </summary>
        </member>
        <member name="T:ASEva.Samples.GenericCameraMeta">
            <summary>
            (api:app=2.0.0) 泛用参数摄像头关联信息（标准模型）
            </summary>
        </member>
        <member name="P:ASEva.Samples.GenericCameraMeta.Common">
            <summary>
            共通部分
            </summary>
        </member>
        <member name="P:ASEva.Samples.GenericCameraMeta.PositionX">
            <summary>
            位置坐标X轴分量 [m]
            </summary>
        </member>
        <member name="P:ASEva.Samples.GenericCameraMeta.PositionY">
            <summary>
            位置坐标Y轴分量 [m]
            </summary>
        </member>
        <member name="P:ASEva.Samples.GenericCameraMeta.PositionZ">
            <summary>
            位置坐标Z轴分量 [m]
            </summary>
        </member>
        <member name="P:ASEva.Samples.GenericCameraMeta.YawRectified">
            <summary>
            是否作了横摆对正
            </summary>
        </member>
        <member name="P:ASEva.Samples.GenericCameraMeta.OriginYaw">
            <summary>
            原横摆角 [°]
            </summary>
        </member>
        <member name="P:ASEva.Samples.GenericCameraMeta.RectifiedYaw">
            <summary>
            对正后的横摆角 [°]
            </summary>
        </member>
        <member name="P:ASEva.Samples.GenericCameraMeta.PitchRectified">
            <summary>
            是否作了俯仰对正
            </summary>
        </member>
        <member name="P:ASEva.Samples.GenericCameraMeta.OriginPitch">
            <summary>
            原俯仰角 [°]
            </summary>
        </member>
        <member name="P:ASEva.Samples.GenericCameraMeta.RollRectified">
            <summary>
            是否作了横滚对正
            </summary>
        </member>
        <member name="P:ASEva.Samples.GenericCameraMeta.OriginRoll">
            <summary>
            原横滚角 [°]
            </summary>
        </member>
        <member name="P:ASEva.Samples.GenericCameraMeta.ShakeYaw">
            <summary>
            抖动偏置横摆角（仅部分摄像头有效）
            </summary>
        </member>
        <member name="P:ASEva.Samples.GenericCameraMeta.ShakePitch">
            <summary>
            抖动偏置俯仰角（仅部分摄像头有效）
            </summary>
        </member>
        <member name="T:ASEva.Samples.LaneLineCameraMeta">
            <summary>
            (api:app=2.0.0) 车道线摄像头关联信息（标准模型）
            </summary>
        </member>
        <member name="P:ASEva.Samples.LaneLineCameraMeta.IsRightSide">
            <summary>
            是否在右侧
            </summary>
        </member>
        <member name="P:ASEva.Samples.LaneLineCameraMeta.Common">
            <summary>
            共通部分
            </summary>
        </member>
        <member name="P:ASEva.Samples.LaneLineCameraMeta.MeterScale">
            <summary>
            单位点长度 [m]
            </summary>
        </member>
        <member name="T:ASEva.Samples.BlindSpotCameraMeta">
            <summary>
            (api:app=2.0.0) 盲区摄像头关联信息（标准模型）
            </summary>
        </member>
        <member name="P:ASEva.Samples.BlindSpotCameraMeta.IsRightSide">
            <summary>
            是否在右侧
            </summary>
        </member>
        <member name="P:ASEva.Samples.BlindSpotCameraMeta.Common">
            <summary>
            共通部分
            </summary>
        </member>
        <member name="T:ASEva.Samples.FisheyeCameraMeta">
            <summary>
            (api:app=2.1.2) 鱼眼摄像头关联信息（鱼眼模型）
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.Inverted">
            <summary>
            是否作了翻转
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.VFlipped">
            <summary>
            是否作了镜像
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.Undistorted">
            <summary>
            是否作了消歪曲
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.HasExtrinsicsInfo">
            <summary>
            是否含有外参信息
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.PositionX">
            <summary>
            位置坐标X轴分量 [m]
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.PositionY">
            <summary>
            位置坐标Y轴分量 [m]
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.PositionZ">
            <summary>
            位置坐标Z轴分量 [m]
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.YawRectified">
            <summary>
            是否作了横摆对正
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.OriginYaw">
            <summary>
            原横摆角 [°]
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.RectifiedYaw">
            <summary>
            对正后的横摆角 [°]
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.PitchRectified">
            <summary>
            是否作了俯仰对正
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.OriginPitch">
            <summary>
            原俯仰角 [°]
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.RollRectified">
            <summary>
            是否作了横滚对正
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.OriginRoll">
            <summary>
            原横滚角 [°]
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.ShakeYaw">
            <summary>
            抖动偏置横摆角（仅部分摄像头有效）
            </summary>
        </member>
        <member name="P:ASEva.Samples.FisheyeCameraMeta.ShakePitch">
            <summary>
            抖动偏置俯仰角（仅部分摄像头有效）
            </summary>
        </member>
        <member name="T:ASEva.Samples.CommonImage">
            <summary>
            (api:app=2.3.0) 通用图像数据
            </summary>
        </member>
        <member name="P:ASEva.Samples.CommonImage.Width">
            <summary>
            图像宽度
            </summary>
        </member>
        <member name="P:ASEva.Samples.CommonImage.Height">
            <summary>
            图像高度
            </summary>
        </member>
        <member name="P:ASEva.Samples.CommonImage.WithAlpha">
            <summary>
            是否含有Alpha通道
            </summary>
        </member>
        <member name="P:ASEva.Samples.CommonImage.RowBytes">
            <summary>
            每行数据字节数
            </summary>
        </member>
        <member name="P:ASEva.Samples.CommonImage.Data">
            <summary>
            图像数据，每个像素的存放顺序为BGR或BGRA
            </summary>
        </member>
        <member name="M:ASEva.Samples.CommonImage.Create(System.Int32,System.Int32,System.Boolean)">
            <summary>
            创建通用图像数据
            </summary>
            <param name="width">图像宽度</param>
            <param name="height">图像高度</param>
            <param name="withAlpha">是否带Alpha通道</param>
            <returns>通用图像数据</returns>
        </member>
        <member name="M:ASEva.Samples.CommonImage.LoadFile(System.String)">
            <summary>
            [依赖Agency] 从文件读取图像
            </summary>
            <param name="filePath">文件路径</param>
            <returns>通用图像数据</returns>
        </member>
        <member name="M:ASEva.Samples.CommonImage.LoadResource(System.String)">
            <summary>
            [依赖Agency] 从资源读取图像
            </summary>
            <param name="resourceName">资源名称</param>
            <returns>通用图像数据</returns>
        </member>
        <member name="M:ASEva.Samples.CommonImage.Save(System.String)">
            <summary>
            [依赖Agency] 保存至文件
            </summary>
            <param name="filePath">文件路径</param>
            <returns>是否成功保存</returns>
        </member>
        <member name="T:ASEva.Samples.VideoFrameSample">
            <summary>
            (api:app=2.0.0) 视频帧样本
            </summary>
        </member>
        <member name="P:ASEva.Samples.VideoFrameSample.CommonImage">
            <summary>
            (api:app=2.3.0) 通用图像数据
            </summary>
            <value></value>
        </member>
        <member name="P:ASEva.Samples.VideoFrameSample.Image">
            <summary>
            [依赖Agency] 获取视频帧的位图图像（平台特化对象）
            </summary>
        </member>
        <member name="P:ASEva.Samples.VideoFrameSample.ChannelIndex">
            <summary>
            视频帧所属通道（0~23）
            </summary>
        </member>
        <member name="P:ASEva.Samples.VideoFrameSample.SpecialCameraType">
            <summary>
            特殊摄像头类型
            </summary>
        </member>
        <member name="P:ASEva.Samples.VideoFrameSample.SpecialCameraInfo">
            <summary>
            特殊摄像头信息，可以为 ASEva.Samples.DefaultCameraMeta , ASEva.Samples.GenericCameraMeta , ASEva.Samples.LaneLineCameraMeta , ASEva.Samples.BlindSpotCameraMeta , ASEva.Samples.FisheyeCameraMeta
            </summary>
        </member>
        <member name="P:ASEva.Samples.VideoFrameSample.HorizontalFov">
            <summary>
            标准针孔模型下的横向视场角（未消歪曲时为空）
            </summary>
        </member>
        <member name="P:ASEva.Samples.VideoFrameSample.Scaled">
            <summary>
            是否对图像进行了放大，false表示按可贴合的最小尺寸缩放
            </summary>
        </member>
        <member name="P:ASEva.Samples.VideoFrameSample.RawResolution">
            <summary>
            原始图像的原分辨率
            </summary>
        </member>
        <member name="P:ASEva.Samples.VideoFrameSample.RawCenter">
            <summary>
            在原始图像坐标系下的实际截取框中心
            </summary>
        </member>
        <member name="P:ASEva.Samples.VideoFrameSample.RawScale">
            <summary>
            相对与原始图像大小的实际缩放比率
            </summary>
        </member>
        <member name="P:ASEva.Samples.VideoFrameSample.ActualResolution">
            <summary>
            实际图像的原分辨率
            </summary>
        </member>
        <member name="P:ASEva.Samples.VideoFrameSample.ActualCenter">
            <summary>
            在实际图像坐标系下的实际截取框中心
            </summary>
        </member>
        <member name="P:ASEva.Samples.VideoFrameSample.ActualScale">
            <summary>
            相对与实际图像大小的实际缩放比率
            </summary>
        </member>
        <member name="M:ASEva.Samples.VideoFrameSample.#ctor(System.Object,ASEva.IntSize,System.Int32,System.DateTime,System.Double,System.Double)">
            <summary>
            [依赖Agency] 默认构造函数
            </summary>
            <param name="image">图像</param>
            <param name="rawSize">图像的原始大小</param>
            <param name="channelIndex">通道</param>
            <param name="bas">Session ID</param>
            <param name="offset">相对时间戳</param>
            <param name="timeline">时间线</param>
        </member>
        <member name="M:ASEva.Samples.VideoFrameSample.#ctor(ASEva.Samples.CommonImage,ASEva.IntSize,System.Int32,System.DateTime,System.Double,System.Double)">
            <summary>
            (api:app=2.3.0) 默认构造函数
            </summary>
            <param name="image">图像</param>
            <param name="rawSize">图像的原始大小</param>
            <param name="channelIndex">通道</param>
            <param name="bas">Session ID</param>
            <param name="offset">相对时间戳</param>
            <param name="timeline">时间线</param>
        </member>
        <member name="T:ASEva.SceneData">
            <summary>
            (api:app=2.0.0) 场景片段描述
            </summary>
        </member>
        <member name="P:ASEva.SceneData.SceneID">
            <summary>
            场景ID
            </summary>
        </member>
        <member name="P:ASEva.SceneData.BeginBase">
            <summary>
            场景所属session ID
            </summary>
        </member>
        <member name="P:ASEva.SceneData.BeginOffset">
            <summary>
            场景开始时间（在该session中的相对时间）
            </summary>
        </member>
        <member name="P:ASEva.SceneData.TimeLength">
            <summary>
            场景时间长度
            </summary>
        </member>
        <member name="P:ASEva.SceneData.PropertyValues">
            <summary>
            场景属性列表
            </summary>
        </member>
        <member name="M:ASEva.SceneData.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:ASEva.SceneData.Clone(ASEva.SceneData)">
            <summary>
            从另一个对象复制
            </summary>
            <param name="data">复制来源</param>
        </member>
        <member name="T:ASEva.TaskState">
            <summary>
            (api:app=2.0.0) 独立任务状态
            </summary>
        </member>
        <member name="F:ASEva.TaskState.Unknown">
            任务还未开始
        </member>
        <member name="F:ASEva.TaskState.Finished">
            任务完成
        </member>
        <member name="F:ASEva.TaskState.Failed">
            任务失败或被中止
        </member>
        <member name="F:ASEva.TaskState.Progressing">
            任务进行中
        </member>
        <member name="T:ASEva.TaskResult">
            <summary>
            (api:app=2.0.0) 独立任务运行结果
            </summary>
        </member>
        <member name="F:ASEva.TaskResult.RunOK">
            运行成功
        </member>
        <member name="F:ASEva.TaskResult.RunFailed">
            运行失败
        </member>
        <member name="F:ASEva.TaskResult.TaskClassNotFound">
            无法找到任务类别
        </member>
        <member name="F:ASEva.TaskResult.TaskInitFailed">
            任务初始化失败
        </member>
        <member name="F:ASEva.TaskResult.NotIdle">
            非空闲状态无法运行
        </member>
        <member name="T:ASEva.Task">
            <summary>
            (api:app=2.0.0) 独立任务对象
            </summary>
        </member>
        <member name="M:ASEva.Task.RunTask(System.String,System.Boolean@)">
            <summary>
            [必须实现] 运行任务。本方法的调用线程与其他方法的不一致，需要注意线程安全
            </summary>
            <param name="config">配置的字符串描述</param>
            <param name="shouldEnd">是否应中断，若为true应无条件结束本方法</param>
        </member>
        <member name="M:ASEva.Task.GetState">
            <summary>
            [可选实现] 获取任务运行状态
            </summary>
            <returns>任务运行状态</returns>
        </member>
        <member name="M:ASEva.Task.GetDescription">
            <summary>
            [可选实现] 获取任务状态描述
            </summary>
            <returns>任务状态描述</returns>
        </member>
        <member name="M:ASEva.Task.GetProgress">
            <summary>
            [可选实现] 获取任务运行进度
            </summary>
            <returns>任务运行进度，单位%，范围0~100</returns>
        </member>
        <member name="M:ASEva.Task.GetReturnValue">
            <summary>
            [可选实现] 获取任务返回值信息
            </summary>
            <returns>任务返回值</returns>
        </member>
        <member name="T:ASEva.TaskClass">
            <summary>
            (api:app=2.0.0) 独立任务组件定义的基类
            </summary>
        </member>
        <member name="M:ASEva.TaskClass.GetTaskClassID">
            <summary>
            [必须实现] 获取独立任务组件的类别ID时被调用
            </summary>
            <returns>类别ID</returns>
        </member>
        <member name="M:ASEva.TaskClass.GetTaskTitle">
            <summary>
            [必须实现] 获取独立任务的标题时被调用
            </summary>
            <returns>独立任务的标题表，键'en'表示英文，'ch'表示中文</returns>
        </member>
        <member name="M:ASEva.TaskClass.IsNativeTask">
            <summary>
            [必须实现] 查询是否为C++端独立处理任务时被调用
            </summary>
            <returns>是否为C++端独立处理任务</returns>
        </member>
        <member name="M:ASEva.TaskClass.CreateTask">
            <summary>
            [非C++模式下必须实现] 创建独立任务对象
            </summary>
            <returns>独立任务对象</returns>
        </member>
        <member name="M:ASEva.TaskClass.GetNativePluginType">
            <summary>
            [C++模式下必须实现] 获取C++模块的类型ID时被调用
            </summary>
            <returns>类型ID，需要与插件info.txt中的type字段一致</returns>
        </member>
        <member name="M:ASEva.TaskClass.GetNativeTaskName">
            <summary>
            [C++模式下必须实现] 获取C++独立处理任务名称时被调用
            </summary>
            <returns>任务名称</returns>
        </member>
        <member name="T:ASEva.IntSize">
            <summary>
            (api:app=2.0.0) 尺寸大小（整型）
            </summary>
        </member>
        <member name="T:ASEva.FloatSize">
            <summary>
            (api:app=2.0.0) 尺寸大小（浮点型）
            </summary>
        </member>
        <member name="T:ASEva.IntPoint">
            <summary>
            (api:app=2.0.0) 点坐标（整型）
            </summary>
        </member>
        <member name="T:ASEva.FloatPoint">
            <summary>
            (api:app=2.0.0) 点坐标（浮点型）
            </summary>
        </member>
        <member name="T:ASEva.IntRect">
            <summary>
            (api:app=2.0.0) 矩形（整型）
            </summary>
        </member>
        <member name="T:ASEva.FloatRect">
            <summary>
            (api:app=2.0.0) 矩形（浮点型）
            </summary>
        </member>
        <member name="T:ASEva.ApplicationStatus">
            <summary>
            (api:app=2.0.0) ASEva当前的运行状态，调用 ASEva.Agency.GetAppStatus 获取
            </summary>
        </member>
        <member name="F:ASEva.ApplicationStatus.Idle">
            <summary>
            空闲
            </summary>
        </member>
        <member name="F:ASEva.ApplicationStatus.Running">
            <summary>
            运行session中
            </summary>
        </member>
        <member name="F:ASEva.ApplicationStatus.Starting">
            <summary>
            启动session中
            </summary>
        </member>
        <member name="F:ASEva.ApplicationStatus.Stopping">
            <summary>
            停止session中
            </summary>
        </member>
        <member name="F:ASEva.ApplicationStatus.Tasking">
            <summary>
            运行独立任务中
            </summary>
        </member>
        <member name="T:ASEva.ApplicationMode">
            <summary>
            (api:app=2.0.0) ASEva当前的运行模式，调用 ASEva.Agency.GetAppMode 获取
            </summary>
        </member>
        <member name="F:ASEva.ApplicationMode.Online">
            <summary>
            在线模式，采集数据与在线处理
            </summary>
        </member>
        <member name="F:ASEva.ApplicationMode.Offline">
            <summary>
            离线处理模式
            </summary>
        </member>
        <member name="F:ASEva.ApplicationMode.Replay">
            <summary>
            离线回放模式
            </summary>
        </member>
        <member name="T:ASEva.LogLevel">
            <summary>
            (api:app=2.0.0) 清单信息等级，为 ASEva.Agency.Log 函数的输入参数
            </summary>
        </member>
        <member name="F:ASEva.LogLevel.Info">
            <summary>
            信息，绿色显示
            </summary>
        </member>
        <member name="F:ASEva.LogLevel.Warning">
            <summary>
            警告，橙色显示
            </summary>
        </member>
        <member name="F:ASEva.LogLevel.Error">
            <summary>
            错误，红色显示
            </summary>
        </member>
        <member name="T:ASEva.BufferRange">
            <summary>
            (api:app=2.0.0) 当前缓存的数据在时间线上的范围，调用 ASEva.Agency.GetBufferRange 获取
            </summary>
        </member>
        <member name="F:ASEva.BufferRange.begin">
            <summary>
            缓存数据时间范围的下沿（最早），单位秒
            </summary>
        </member>
        <member name="F:ASEva.BufferRange.end">
            <summary>
            缓存数据时间范围的下沿（最迟），单位秒
            </summary>
        </member>
        <member name="T:ASEva.BusMessage">
            <summary>
            (api:app=2.0.0) 用于发送的总线报文数据，可调用 ASEva.Agency.SetBusMessage 进行报文发送
            </summary>
        </member>
        <member name="P:ASEva.BusMessage.Channel">
            <summary>
            总线设备通道序号（1~16），报文将在对应硬件上发送
            </summary>
        </member>
        <member name="P:ASEva.BusMessage.ID">
            <summary>
            报文ID
            </summary>
        </member>
        <member name="P:ASEva.BusMessage.Data">
            <summary>
            报文数据
            </summary>
        </member>
        <member name="P:ASEva.BusMessage.MillisecondInterval">
            <summary>
            报文发送周期，单位毫秒（至少为10），若设为null则只发送一次
            </summary>
        </member>
        <member name="T:ASEva.MessageConfig">
            <summary>
            (api:app=2.0.0) 报文配置，作为 ASEva.Agency.BindMessageSelector 参数传入
            </summary>
        </member>
        <member name="P:ASEva.MessageConfig.MessageID">
            <summary>
            报文的全局唯一ID，为xxx.yyy:zzz格式。其中xxx.yyy为协议文件名，如vehicle.dbc，zzz为报文ID
            </summary>
        </member>
        <member name="T:ASEva.SignalConfig">
            <summary>
            (api:app=2.0.0) 信号配置，作为 ASEva.Agency.BindSignalSelector 参数传入
            </summary>
        </member>
        <member name="P:ASEva.SignalConfig.SignalID">
            <summary>
            主信号的全局唯一ID，为xxx:yyy:zzz格式。其中xxx为协议文件名或信号分类，yyy为报文ID或信号子分类，zzz为信号名称
            </summary>
        </member>
        <member name="P:ASEva.SignalConfig.SignBitSignalID">
            <summary>
            符号位信号的全局唯一ID，格式与主信号一致，仅在主信号与符号位信号分别解析的情况使用
            </summary>
        </member>
        <member name="P:ASEva.SignalConfig.Scale">
            <summary>
            信号值的乘数，一般用于单位转换
            </summary>
        </member>
        <member name="T:ASEva.ValueConfig">
            <summary>
            (api:app=2.0.0) 信号值配置，作为 ASEva.Agency.BindValueInput 参数传入
            </summary>
        </member>
        <member name="P:ASEva.ValueConfig.Values">
            <summary>
            信号值列表
            </summary>
        </member>
        <member name="T:ASEva.WebPostContentType">
            <summary>
            (api:app=2.0.4) Web API POST的内容类型
            </summary>
        </member>
        <member name="F:ASEva.WebPostContentType.WWWFormUrlEncoded">
            <summary>
            默认类型，对应application/x-www-form-urlencoded
            </summary>
        </member>
        <member name="F:ASEva.WebPostContentType.OctetStream">
            <summary>
            对应application/octet-stream
            </summary>
        </member>
        <member name="T:ASEva.WebApiResult">
            <summary>
            (api:app=2.0.0) Web API调用的结果
            </summary>
        </member>
        <member name="F:ASEva.WebApiResult.Unknown">
            <summary>
            未知，在添加请求后的一段时间内为此状态
            </summary>
        </member>
        <member name="F:ASEva.WebApiResult.InternetNotConnected">
            <summary>
            互联网未连接导致失败
            </summary>
        </member>
        <member name="F:ASEva.WebApiResult.Timeout">
            <summary>
            超时，定义为超过3秒未收到回复，或超过5秒仍未实际发出请求
            </summary>
        </member>
        <member name="F:ASEva.WebApiResult.Responsed">
            <summary>
            已弃用，应使用 ASEva.WebApiResult.Responded
            </summary>
        </member>
        <member name="F:ASEva.WebApiResult.Responded">
            <summary>
            (api:app=2.3.0) 成功得到响应
            </summary>
        </member>
        <member name="T:ASEva.WebApiContext">
            <summary>
            (api:app=2.0.0) Web API调用的上下文，作为 ASEva.Agency.CallWebApi 参数传入
            </summary>
        </member>
        <member name="P:ASEva.WebApiContext.Result">
            <summary>
            调用结果
            </summary>
        </member>
        <member name="P:ASEva.WebApiContext.Response">
            <summary>
            响应的字符串
            </summary>
        </member>
        <member name="T:ASEva.GeneralDeviceStatus">
            <summary>
            (api:app=2.0.0) 设备状态，调用 ASEva.Agency.GetDeviceStatus 获取
            </summary>
        </member>
        <member name="F:ASEva.GeneralDeviceStatus.None">
            <summary>
            未启用连接
            </summary>
        </member>
        <member name="F:ASEva.GeneralDeviceStatus.OK">
            <summary>
            连接成功
            </summary>
        </member>
        <member name="F:ASEva.GeneralDeviceStatus.Error">
            <summary>
            未连接或连接状态不正常
            </summary>
        </member>
        <member name="F:ASEva.GeneralDeviceStatus.Warning">
            <summary>
            部分设备未连接或连接状态不正常
            </summary>
        </member>
        <member name="T:ASEva.BusSignalMultiplexType">
            <summary>
            (api:app=2.0.0) 总线信号的多路复用类型
            </summary>
        </member>
        <member name="F:ASEva.BusSignalMultiplexType.None">
            <summary>
            一般信号
            </summary>
        </member>
        <member name="F:ASEva.BusSignalMultiplexType.Multiplexor">
            <summary>
            多路复用通道值信号
            </summary>
        </member>
        <member name="F:ASEva.BusSignalMultiplexType.Multiplexed">
            <summary>
            多路复用信号
            </summary>
        </member>
        <member name="T:ASEva.BusSignalInfo">
            <summary>
            (api:app=2.0.0) 总线信号信息
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.SignalID">
            <summary>
            信号ID
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.SignalName">
            <summary>
            信号名称
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.StartBit">
            <summary>
            起始bit
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.BitLength">
            <summary>
            bit长度
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.BigEndian">
            <summary>
            是否大字序
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.Signed">
            <summary>
            是否有符号
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.Factor">
            <summary>
            乘数
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.Offset">
            <summary>
            加数
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.Minimum">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.Maximum">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.Unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.MultiplexType">
            <summary>
            信号的多路复用类型
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.MultiplexChannel">
            <summary>
            信号对应的多路复用通道，仅当多路复用类型为Multiplexed时有效
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.Enums">
            <summary>
            枚举值
            </summary>
        </member>
        <member name="P:ASEva.BusSignalInfo.OwnerMessage">
            <summary>
            所属报文
            </summary>
        </member>
        <member name="T:ASEva.BusMessageInfo">
            <summary>
            (api:app=2.0.0) 总线报文信息
            </summary>
        </member>
        <member name="P:ASEva.BusMessageInfo.MessageID">
            <summary>
            报文ID
            </summary>
        </member>
        <member name="P:ASEva.BusMessageInfo.MessageName">
            <summary>
            报文名称
            </summary>
        </member>
        <member name="P:ASEva.BusMessageInfo.LocalID">
            <summary>
            通道内ID
            </summary>
        </member>
        <member name="P:ASEva.BusMessageInfo.ByteLength">
            <summary>
            字节数
            </summary>
        </member>
        <member name="P:ASEva.BusMessageInfo.Signals">
            <summary>
            信号信息列表
            </summary>
        </member>
        <member name="P:ASEva.BusMessageInfo.OwnerFile">
            <summary>
            所属协议文件
            </summary>
        </member>
        <member name="T:ASEva.BusFileInfo">
            <summary>
            (api:app=2.0.0) 总线协议文件信息
            </summary>
        </member>
        <member name="P:ASEva.BusFileInfo.FileID">
            <summary>
            文件ID
            </summary>
        </member>
        <member name="P:ASEva.BusFileInfo.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:ASEva.BusFileInfo.Messages">
            <summary>
            报文信息列表
            </summary>
        </member>
        <member name="T:ASEva.SelectSignalHandler">
            <summary>
            (api:app=2.0.0) 用于 ASEva.Agency.SelectSignals 的回调接口
            </summary>
        </member>
        <member name="M:ASEva.SelectSignalHandler.SelectSignal(System.String)">
            <summary>
            添加选中信号时被调用
            </summary>
            <param name="signalID">选中信号的ID</param>
            <returns>返回是否仍可添加信号</returns>
        </member>
        <member name="T:ASEva.TimeWithSession">
            <summary>
            (api:app=2.0.0) 在session中的时间
            </summary>
        </member>
        <member name="P:ASEva.TimeWithSession.Time">
            <summary>
            秒
            </summary>
        </member>
        <member name="P:ASEva.TimeWithSession.Session">
            <summary>
            Session
            </summary>
        </member>
        <member name="T:ASEva.BusProtocolFileID">
            <summary>
            (api:app=2.0.0) 总线协议文件ID
            </summary>
        </member>
        <member name="T:ASEva.BusProtocolFileState">
            <summary>
            (api:app=2.0.0) 总线协议文件状态
            </summary>
        </member>
        <member name="T:ASEva.BusDeviceID">
            <summary>
            (api:app=2.0.0) 总线设备ID
            </summary>
        </member>
        <member name="T:ASEva.BusChannelType">
            <summary>
            (api:app=2.0.0) 总线设备通道类型
            </summary>
        </member>
        <member name="T:ASEva.BusDeviceInfo">
            <summary>
            (api:app=2.0.0) 总线设备信息
            </summary>
        </member>
        <member name="T:ASEva.VideoDeviceID">
            <summary>
            (api:app=2.0.0) 视频设备ID
            </summary>
        </member>
        <member name="T:ASEva.VideoInputCodec">
            <summary>
            (api:app=2.0.0) 视频编码格式
            </summary>
        </member>
        <member name="F:ASEva.VideoInputCodec.Invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="F:ASEva.VideoInputCodec.MJPEG">
            <summary>
            MJPEG：有损编码，帧间独立
            </summary>
        </member>
        <member name="F:ASEva.VideoInputCodec.H264">
            <summary>
            H.264：有损编码，帧间依赖
            </summary>
        </member>
        <member name="F:ASEva.VideoInputCodec.YUV411">
            <summary>
            YUV411：无损编码，帧间独立
            </summary>
        </member>
        <member name="F:ASEva.VideoInputCodec.YUV420">
            <summary>
            YUV420：无损编码，帧间独立
            </summary>
        </member>
        <member name="F:ASEva.VideoInputCodec.H265">
            <summary>
            H.265：有损编码，帧间依赖
            </summary>
        </member>
        <member name="T:ASEva.VideoInputMode">
            <summary>
            (api:app=2.0.0) 视频输入模式
            </summary>
        </member>
        <member name="T:ASEva.VideoDeviceInfo">
            <summary>
            (api:app=2.0.0) 视频设备信息
            </summary>
        </member>
        <member name="T:ASEva.VideoFrameGetScale">
            <summary>
            (api:app=2.0.0) 获取视频帧的缩放设置
            </summary>
        </member>
        <member name="P:ASEva.VideoFrameGetScale.Center">
            <summary>
            输出图像中心在原始图像坐标系下的像素坐标
            </summary>
        </member>
        <member name="P:ASEva.VideoFrameGetScale.Scale">
            <summary>
            相对于原始图像大小的缩放比率，0.1~4x
            </summary>
        </member>
        <member name="P:ASEva.VideoFrameGetScale.WithPreview">
            <summary>
            是否在图像上方绘制缩略图（若实际进行了放大）
            </summary>
        </member>
        <member name="T:ASEva.VideoFrameGetter">
            <summary>
            (api:app=2.0.0) 获取视频帧的接口
            </summary>
        </member>
        <member name="M:ASEva.VideoFrameGetter.GetVideoFrame(System.Int32,System.Double,System.Double,ASEva.IntSize,System.Boolean,ASEva.VideoFrameGetScale)">
            <summary>
            按指定参数获取时间轴上最近的视频帧
            </summary>
            <param name="channel">视频通道，0~23</param>
            <param name="timeline">获取视频帧的目标时间，单位秒</param>
            <param name="maxGap">容许的最大间隔，单位秒</param>
            <param name="targetSize">输出图像的尺寸</param>
            <param name="hires">是否优先输出高清图像，否则固定输出不大于VGA分辨率的图像</param>
            <param name="scale">缩放设置，若按整幅输出则设为null</param>
            <returns>图像帧</returns>
        </member>
        <member name="T:ASEva.FileIONames">
            <summary>
            (api:app=2.2.0) 文件读写相关名称的集合
            </summary>
        </member>
        <member name="P:ASEva.FileIONames.ReaderNames">
            <summary>
            文件读取器的名称列表
            </summary>
        </member>
        <member name="P:ASEva.FileIONames.WriterNames">
            <summary>
            文件写入器的名称列表
            </summary>
        </member>
        <member name="P:ASEva.FileIONames.PickerNames">
            <summary>
            文件数据截取器的名称列表
            </summary>
        </member>
        <member name="P:ASEva.FileIONames.ComboPickers">
            <summary>
            通过文件读取器和写入器组合的方式形成的数据截取器列表，键为读取器名称，值为写入器名称
            </summary>
        </member>
        <member name="T:ASEva.RecordDataType">
            <summary>
            (api:app=2.2.1) 文件写入需要的数据类型
            </summary>
        </member>
        <member name="F:ASEva.RecordDataType.Invalid">
            <summary>
            无效值
            </summary>
        </member>
        <member name="F:ASEva.RecordDataType.BusRawData">
            <summary>
            总线原始数据
            </summary>
        </member>
        <member name="F:ASEva.RecordDataType.BusMessages">
            <summary>
            总线协议报文数据
            </summary>
        </member>
        <member name="F:ASEva.RecordDataType.VideoRawData">
            <summary>
            视频原始数据
            </summary>
        </member>
        <member name="F:ASEva.RecordDataType.VideoProcData">
            <summary>
            用于数据处理的视频数据
            </summary>
        </member>
        <member name="F:ASEva.RecordDataType.Signals">
            <summary>
            信号数据
            </summary>
        </member>
        <member name="F:ASEva.RecordDataType.Samples">
            <summary>
            样本数据
            </summary>
        </member>
        <member name="F:ASEva.RecordDataType.Matrices">
            <summary>
            矩阵数据
            </summary>
        </member>
        <member name="T:ASEva.BusSignalValue">
            <summary>
            (api:app=2.2.3) 解析总线报文得到的信号值及相关信息
            </summary>
        </member>
        <member name="F:ASEva.BusSignalValue.signalName">
            <summary>
            信号名
            </summary>
        </member>
        <member name="F:ASEva.BusSignalValue.value">
            <summary>
            信号值
            </summary>
        </member>
        <member name="F:ASEva.BusSignalValue.unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="F:ASEva.BusSignalValue.enumValue">
            <summary>
            对应的枚举值（若存在枚举信息）
            </summary>
        </member>
        <member name="T:ASEva.SystemStatus">
            <summary>
            (api:app=2.3.0) 系统状态 
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.ActualReplaySpeed">
            <summary>
            实际回放速度（倍速）
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.TargetReplaySpeed">
            <summary>
            目标回放速度（倍速）
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.CurrentLoggerMessage">
            <summary>
            最新清单消息
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.DisplayLag">
            <summary>
            显示延迟，单位毫秒
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.ContinuousFileWriteQueue">
            <summary>
            连续数据或缓存数据写入队列长度，单位秒
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.EventFileWriteQueue">
            <summary>
            事件数据写入队列长度，单位秒
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.VideoProcessQueueCapacity">
            <summary>
            视频处理队列长度限制
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.VideoProcessQueue">
            <summary>
            视频处理队列长度
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.AudioVolume">
            <summary>
            音量（倍数）
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.CPUUsage">
            <summary>
            CPU使用率，单位百分比
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.CPUUsageRatio">
            <summary>
            CPU使用率的乘数
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.MemoryCapacity">
            <summary>
            内存总容量，单位字节
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.MemoryFree">
            <summary>
            内存可用容量，单位字节
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.MemoryWarningThreshold">
            <summary>
            内存可用容量的警告阈值，单位字节
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.MemoryErrorThreshold">
            <summary>
            内存可用容量的最小阈值，单位字节
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.StorageCapacity">
            <summary>
            当前数据目录所在磁盘的总容量，单位字节
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.StorageFree">
            <summary>
            当前数据目录所在磁盘可用容量，单位字节
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.StorageFreeHours">
            <summary>
            根据当前数据目录所在磁盘可用容量预估的时长，单位小时
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.StorageWarningThreshold">
            <summary>
            当前数据目录所在磁盘可用容量的警告阈值，单位字节
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.StorageErrorThreshold">
            <summary>
            当前数据目录所在磁盘可用容量的最小阈值，单位字节
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.WorkthreadHeartBeatTime">
            <summary>
            最近一次基础线程心跳时间，格式为yyyyMMddHHmmss.fff
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.WorkthreadCurrentLocation">
            <summary>
            基础线程当前运行位置
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.WorkthreadLoopTime">
            <summary>
            基础线程循环平均运行时间（最近），单位毫秒
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.ProcthreadHeartBeatTime">
            <summary>
            最近一次处理线程心跳时间，格式为yyyyMMddHHmmss.fff
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.ProcthreadCurrentLocation">
            <summary>
            处理线程当前运行位置
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.ProcthreadLoopTime">
            <summary>
            处理线程循环平均运行时间（最近），单位毫秒
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.MainthreadLoopTime">
            <summary>
            主线程循环平均运行时间（最近），单位毫秒
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.BusDataFlow">
            <summary>
            总线数据流量，单位字节
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.BusDeviceReadTime">
            <summary>
            总线设备接收一帧数据的最大耗时，单位微秒
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.VideoDataFlow">
            <summary>
            视频数据流量，单位像素数
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.VideoDeviceReadTime">
            <summary>
            视频设备接收一帧数据的最大耗时，单位微秒
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.StartSessionTime">
            <summary>
            开始session耗时，单位毫秒
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.StopSessionTime">
            <summary>
            结束session耗时，单位毫秒
            </summary>
        </member>
        <member name="F:ASEva.SystemStatus.ReplayNeck">
            <summary>
            回放速度瓶颈
            </summary>
        </member>
        <member name="T:ASEva.WindowClassInfo">
            <summary>
            (api:app=2.3.0) 窗口组件信息
            </summary>
        </member>
        <member name="P:ASEva.WindowClassInfo.OwnerPluginID">
            <summary>
            所属插件ID
            </summary>
        </member>
        <member name="P:ASEva.WindowClassInfo.ID">
            <summary>
            组件ID
            </summary>
        </member>
        <member name="P:ASEva.WindowClassInfo.TransformID">
            <summary>
            分化ID
            </summary>
        </member>
        <member name="P:ASEva.WindowClassInfo.Title">
            <summary>
            窗口标题
            </summary>
        </member>
        <member name="P:ASEva.WindowClassInfo.Icon">
            <summary>
            窗口图标，分辨率为16x16
            </summary>
        </member>
        <member name="P:ASEva.WindowClassInfo.MultipleSupported">
            <summary>
            是否支持同时打开多个窗口
            </summary>
        </member>
        <member name="P:ASEva.WindowClassInfo.TransformClasses">
            <summary>
            分化的窗口组件信息
            </summary>
        </member>
        <member name="T:ASEva.DialogClassInfo">
            <summary>
            (api:app=2.3.0) 对话框组件信息
            </summary>
        </member>
        <member name="P:ASEva.DialogClassInfo.OwnerPluginID">
            <summary>
            所属插件ID
            </summary>
        </member>
        <member name="P:ASEva.DialogClassInfo.ID">
            <summary>
            组件ID
            </summary>
        </member>
        <member name="P:ASEva.DialogClassInfo.TransformID">
            <summary>
            分化ID
            </summary>
        </member>
        <member name="P:ASEva.DialogClassInfo.Title">
            <summary>
            对话框标题
            </summary>
        </member>
        <member name="P:ASEva.DialogClassInfo.Icon">
            <summary>
            对话框图标，分辨率为16x16
            </summary>
        </member>
        <member name="P:ASEva.DialogClassInfo.TransformClasses">
            <summary>
            分化的对话框组件信息
            </summary>
        </member>
        <member name="T:ASEva.ProcessorClassInfo">
            <summary>
            (api:app=2.3.0) 数据处理组件信息
            </summary>
        </member>
        <member name="P:ASEva.ProcessorClassInfo.OwnerPluginID">
            <summary>
            所属插件ID
            </summary>
        </member>
        <member name="P:ASEva.ProcessorClassInfo.ID">
            <summary>
            组件ID
            </summary>
        </member>
        <member name="P:ASEva.ProcessorClassInfo.Title">
            <summary>
            数据处理组件名称
            </summary>
        </member>
        <member name="T:ASEva.NativeLibraryType">
            <summary>
            (api:app=2.3.0) C++库类别
            </summary>
        </member>
        <member name="F:ASEva.NativeLibraryType.Native">
            <summary>
            一般原生库
            </summary>
        </member>
        <member name="F:ASEva.NativeLibraryType.Bus">
            <summary>
            总线设备库
            </summary>
        </member>
        <member name="F:ASEva.NativeLibraryType.Video">
            <summary>
            视频设备库
            </summary>
        </member>
        <member name="F:ASEva.NativeLibraryType.Processor">
            <summary>
            数据处理库
            </summary>
        </member>
        <member name="F:ASEva.NativeLibraryType.Device">
            <summary>
            一般设备库
            </summary>
        </member>
        <member name="F:ASEva.NativeLibraryType.FileIO">
            <summary>
            文件读写库
            </summary>
        </member>
        <member name="T:ASEva.NativeClassInfo">
            <summary>
            (api:app=2.3.0) C++组件信息
            </summary>
        </member>
        <member name="P:ASEva.NativeClassInfo.OwnerPluginID">
            <summary>
            所属插件ID
            </summary>
        </member>
        <member name="P:ASEva.NativeClassInfo.ID">
            <summary>
            组件ID
            </summary>
        </member>
        <member name="P:ASEva.NativeClassInfo.Title">
            <summary>
            C++组件名称
            </summary>
        </member>
        <member name="P:ASEva.NativeClassInfo.NativeType">
            <summary>
            对应的类型ID
            </summary>
        </member>
        <member name="P:ASEva.NativeClassInfo.LibraryVersions">
            <summary>
            绑定的各C++库版本
            </summary>
        </member>
        <member name="T:ASEva.TaskClassInfo">
            <summary>
            (api:app=2.3.0) 独立任务组件信息
            </summary>
        </member>
        <member name="P:ASEva.TaskClassInfo.OwnerPluginID">
            <summary>
            所属插件ID
            </summary>
        </member>
        <member name="P:ASEva.TaskClassInfo.ID">
            <summary>
            组件ID
            </summary>
        </member>
        <member name="P:ASEva.TaskClassInfo.Title">
            <summary>
            独立任务组件名称
            </summary>
        </member>
        <member name="T:ASEva.SessionFilterFlags">
            <summary>
            (api:app=2.3.0) Session筛选标志位
            </summary>
        </member>
        <member name="P:ASEva.SessionFilterFlags.SearchTrue">
            <summary>
            符合搜索条件
            </summary>
        </member>
        <member name="P:ASEva.SessionFilterFlags.CheckTrue">
            <summary>
            已选中
            </summary>
        </member>
        <member name="T:ASEva.DeviceStatusDetail">
            <summary>
            (api:app=2.3.0) 详细的设备状态信息
            </summary>
        </member>
        <member name="P:ASEva.DeviceStatusDetail.Status">
            <summary>
            设备状态
            </summary>
        </member>
        <member name="P:ASEva.DeviceStatusDetail.Description">
            <summary>
            状态详细描述
            </summary>
        </member>
        <member name="T:ASEva.CreatePanelResult">
            <summary>
            (api:app=2.3.0) 创建窗口对象或对话框对象的结果
            </summary>
        </member>
        <member name="F:ASEva.CreatePanelResult.OK">
            <summary>
            创建成功
            </summary>
        </member>
        <member name="F:ASEva.CreatePanelResult.InvalidCaller">
            <summary>
            无效的调用者
            </summary>
        </member>
        <member name="F:ASEva.CreatePanelResult.ClassNotFound">
            <summary>
            未找到类型
            </summary>
        </member>
        <member name="F:ASEva.CreatePanelResult.CreateFailed">
            <summary>
            创建失败
            </summary>
        </member>
        <member name="F:ASEva.CreatePanelResult.SystemBusy">
            <summary>
            系统繁忙
            </summary>
        </member>
        <member name="F:ASEva.CreatePanelResult.AlreadyExist">
            <summary>
            窗口已存在（不支持多窗口）
            </summary>
        </member>
        <member name="T:ASEva.SignalTreeNodeType">
            <summary>
            (api:app=2.3.0) 信号树节点类别
            </summary>
        </member>
        <member name="F:ASEva.SignalTreeNodeType.Category">
            <summary>
            I级：信号大类
            </summary>
        </member>
        <member name="F:ASEva.SignalTreeNodeType.BusProtocol">
            <summary>
            I级：总线协议
            </summary>
        </member>
        <member name="F:ASEva.SignalTreeNodeType.Type">
            <summary>
            II级：信号小类
            </summary>
        </member>
        <member name="F:ASEva.SignalTreeNodeType.BusMessage">
            <summary>
            II级：总线报文
            </summary>
        </member>
        <member name="F:ASEva.SignalTreeNodeType.GeneralSignal">
            <summary>
            III级：一般信号
            </summary>
        </member>
        <member name="F:ASEva.SignalTreeNodeType.SystemSignal">
            <summary>
            III级：系统信号
            </summary>
        </member>
        <member name="F:ASEva.SignalTreeNodeType.NormalBusSignal">
            <summary>
            III级：一般总线信号
            </summary>
        </member>
        <member name="F:ASEva.SignalTreeNodeType.MultiplexedBusSignal">
            <summary>
            III级：复用的总线信号
            </summary>
        </member>
        <member name="T:ASEva.SignalTreeNode">
            <summary>
            (api:app=2.3.0) 信号树节点
            </summary>
        </member>
        <member name="P:ASEva.SignalTreeNode.Type">
            <summary>
            节点类别
            </summary>
        </member>
        <member name="P:ASEva.SignalTreeNode.ID">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="P:ASEva.SignalTreeNode.Name">
            <summary>
            节点名称
            </summary>
        </member>
        <member name="P:ASEva.SignalTreeNode.Children">
            <summary>
            子节点
            </summary>
        </member>
        <member name="T:ASEva.PluginPackStatus">
            <summary>
            (api:app=2.3.4) 插件包状态
            </summary>
        </member>
        <member name="F:ASEva.PluginPackStatus.Disabled">
            <summary>
            已禁用
            </summary>
        </member>
        <member name="F:ASEva.PluginPackStatus.Enabled">
            <summary>
            已启用
            </summary>
        </member>
        <member name="F:ASEva.PluginPackStatus.ToBeEnabled">
            <summary>
            应用程序重启后启用
            </summary>
        </member>
        <member name="T:ASEva.PluginPackInfo">
            <summary>
            (api:app=2.3.0) 插件包信息
            </summary>
        </member>
        <member name="P:ASEva.PluginPackInfo.ID">
            <summary>
            插件包ID
            </summary>
        </member>
        <member name="P:ASEva.PluginPackInfo.Name">
            <summary>
            插件包名称
            </summary>
        </member>
        <member name="P:ASEva.PluginPackInfo.Version">
            <summary>
            插件包版本
            </summary>
        </member>
        <member name="P:ASEva.PluginPackInfo.Brief">
            <summary>
            插件包简介
            </summary>
        </member>
        <member name="P:ASEva.PluginPackInfo.Status">
            <summary>
            (api:app=2.3.4) 插件包状态
            </summary>
        </member>
        <member name="P:ASEva.PluginPackInfo.AppLayerDetails">
            <summary>
            应用层详情
            </summary>
        </member>
        <member name="P:ASEva.PluginPackInfo.NativeLayerDetails">
            <summary>
            原生层详情
            </summary>
        </member>
        <member name="T:ASEva.InstallPluginLibraryStatus">
            <summary>
            (api:app=2.3.0) 插件关联的库是否可安装的状态
            </summary>
        </member>
        <member name="F:ASEva.InstallPluginLibraryStatus.OK">
            <summary>
            可安装
            </summary>
        </member>
        <member name="F:ASEva.InstallPluginLibraryStatus.PlatformUnsupported">
            <summary>
            平台不支持（UI）
            </summary>
        </member>
        <member name="F:ASEva.InstallPluginLibraryStatus.TooNew">
            <summary>
            插件太新
            </summary>
        </member>
        <member name="F:ASEva.InstallPluginLibraryStatus.TooOld">
            <summary>
            插件太旧
            </summary>
        </member>
        <member name="T:ASEva.InstallPluginLibraryInfo">
            <summary>
            (api:app=2.3.0) 插件关联库的信息
            </summary>
        </member>
        <member name="P:ASEva.InstallPluginLibraryInfo.LibraryID">
            <summary>
            库ID
            </summary>
        </member>
        <member name="P:ASEva.InstallPluginLibraryInfo.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:ASEva.InstallPluginLibraryInfo.Status">
            <summary>
            是否可安装的状态
            </summary>
        </member>
        <member name="P:ASEva.InstallPluginLibraryInfo.Version">
            <summary>
            插件版本
            </summary>
        </member>
        <member name="P:ASEva.InstallPluginLibraryInfo.InstalledVersion">
            <summary>
            已安装插件的版本，若未安装则为null
            </summary>
        </member>
        <member name="T:ASEva.InstallPluginDriverInfo">
            <summary>
            (api:app=2.3.0) 插件关联驱动和环境的信息
            </summary>
        </member>
        <member name="P:ASEva.InstallPluginDriverInfo.DriverID">
            <summary>
            驱动ID
            </summary>
        </member>
        <member name="P:ASEva.InstallPluginDriverInfo.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:ASEva.InstallPluginDriverInfo.Attached">
            <summary>
            是否随付在安装包中
            </summary>
        </member>
        <member name="T:ASEva.LogMessage">
            <summary>
            (api:app=2.3.0) 清单信息
            </summary>
        </member>
        <member name="P:ASEva.LogMessage.Type">
            <summary>
            清单信息级别
            </summary>
        </member>
        <member name="P:ASEva.LogMessage.Text">
            <summary>
            清单信息文本
            </summary>
        </member>
        <member name="P:ASEva.LogMessage.Time">
            <summary>
            清单信息时间
            </summary>
        </member>
        <member name="P:ASEva.LogMessage.RepeatedCount">
            <summary>
            清单信息重复次数
            </summary>
        </member>
        <member name="T:ASEva.Utility.AttributeParser">
            <summary>
            (api:app=2.0.0) XML属性解析
            </summary>
        </member>
        <member name="T:ASEva.Utility.AttributeWriter">
            <summary>
            (api:app=2.0.0) XML属性输出
            </summary>
        </member>
        <member name="M:ASEva.Utility.AttributeWriter.#ctor(System.Xml.XmlElement)">
            <summary>
            基于XML元素节点创建
            </summary>
            <param name="element">XML元素节点</param>
        </member>
        <member name="T:ASEva.Utility.ContentToString">
            <summary>
            (api:app=2.0.0) 递归的将对象信息转化为字符串
            </summary>
        </member>
        <member name="T:ASEva.Utility.MapCoordination">
            <summary>
            (api:app=2.0.0) 地图坐标系转换
            </summary>
        </member>
        <member name="M:ASEva.Utility.MapCoordination.wgs2bd(ASEva.Utility.LocPoint)">
            <summary>
            WGS坐标转百度坐标
            </summary>
            <param name="src">WGS坐标系坐标</param>
            <returns>百度坐标系坐标</returns>
        </member>
        <member name="M:ASEva.Utility.MapCoordination.gcj2bd(ASEva.Utility.LocPoint)">
            <summary>
            GCJ坐标转百度坐标
            </summary>
            <param name="src">GCJ坐标系坐标</param>
            <returns>百度坐标系坐标</returns>
        </member>
        <member name="M:ASEva.Utility.MapCoordination.wgs2gcj(ASEva.Utility.LocPoint)">
            <summary>
            WGS坐标转GCJ坐标
            </summary>
            <param name="src">WGS坐标系坐标</param>
            <returns>GCJ坐标系坐标</returns>
        </member>
        <member name="T:ASEva.Utility.DrawBeat">
            <summary>
            (api:app=2.2.2) 绘图时间记录与反馈
            </summary>
        </member>
        <member name="M:ASEva.Utility.DrawBeat.CallerBegin(System.Int32)">
            <summary>
            在调用绘图前调用
            </summary>
            <param name="id">绘图对象ID</param>
            <returns>是否可调用绘图</returns>
        </member>
        <member name="M:ASEva.Utility.DrawBeat.CallerBegin(System.Object)">
            <summary>
            在调用绘图前调用
            </summary>
            <param name="target">绘图对象</param>
            <returns>是否可调用绘图</returns>
        </member>
        <member name="M:ASEva.Utility.DrawBeat.CallerEnd(System.Int32)">
            <summary>
            在调用绘图后调用
            </summary>
            <param name="id">绘图对象ID</param>
        </member>
        <member name="M:ASEva.Utility.DrawBeat.CallerEnd(System.Object)">
            <summary>
            在调用绘图后调用
            </summary>
            <param name="target">绘图对象</param>
        </member>
        <member name="M:ASEva.Utility.DrawBeat.CallbackBegin(System.Int32,System.String)">
            <summary>
            在绘图回调函数开始时调用
            </summary>
            <param name="id">绘图对象ID</param>
            <param name="category">类别，设为空表示不归类</param>
        </member>
        <member name="M:ASEva.Utility.DrawBeat.CallbackBegin(System.Object,System.String)">
            <summary>
            在绘图回调函数开始时调用
            </summary>
            <param name="target">绘图对象</param>
            <param name="category">类别，设为空表示不归类</param>
        </member>
        <member name="M:ASEva.Utility.DrawBeat.CallbackEnd(System.Int32)">
            <summary>
            在绘图毁掉函数结束前调用
            </summary>
            <param name="id">绘图对象ID</param>
        </member>
        <member name="M:ASEva.Utility.DrawBeat.CallbackEnd(System.Object)">
            <summary>
            在绘图毁掉函数结束前调用
            </summary>
            <param name="target">绘图对象</param>
        </member>
        <member name="M:ASEva.Utility.DrawBeat.DownSize">
            <summary>
            缩减上下文规模
            </summary>
        </member>
        <member name="M:ASEva.Utility.DrawBeat.GetRecentCallbackAverageTime">
            <summary>
            获取最近3秒回调函数运行平均时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:ASEva.Utility.DrawBeat.PopOutCallerCallbackTime">
            <summary>
            获取在caller外的回调函数运行时间，并清空缓存
            </summary>
        </member>
        <member name="M:ASEva.Utility.DrawBeat.SetDrawIntervals(System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            设置各绘图对象的绘制时间间隔
            </summary>
        </member>
        <member name="T:ASEva.Utility.GenerationProcessStatus">
            <summary>
            (api:app=2.0.0) Generation的状态信息
            </summary>
        </member>
        <member name="F:ASEva.Utility.GenerationProcessStatus.Unknown">
            <summary>
            未知（在较老版本中输出的Generation不包括状态信息）
            </summary>
        </member>
        <member name="F:ASEva.Utility.GenerationProcessStatus.Finished">
            <summary>
            处理完毕
            </summary>
        </member>
        <member name="F:ASEva.Utility.GenerationProcessStatus.NotFinished">
            <summary>
            未处理完毕（在处理过程中手动停止或卡死自动跳过导致）
            </summary>
        </member>
        <member name="T:ASEva.Utility.GenerationInfo">
            <summary>
            (api:app=2.0.0) 读写Generation的信息文件(info.xml)
            </summary>
        </member>
        <member name="P:ASEva.Utility.GenerationInfo.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:ASEva.Utility.GenerationInfo.GenerationID">
            <summary>
            Generation ID
            </summary>
        </member>
        <member name="P:ASEva.Utility.GenerationInfo.ProcessStatus">
            <summary>
            状态信息
            </summary>
        </member>
        <member name="P:ASEva.Utility.GenerationInfo.SampleAlias">
            <summary>
            样本别名表
            </summary>
        </member>
        <member name="P:ASEva.Utility.GenerationInfo.Versions">
            <summary>
            创建Generation的软件版本信息（用于回溯）
            </summary>
        </member>
        <member name="P:ASEva.Utility.GenerationInfo.UpdateLogs">
            <summary>
            Generation更新记录
            </summary>
        </member>
        <member name="M:ASEva.Utility.GenerationInfo.Create(System.String,System.String,ASEva.Utility.GenerationProcessStatus,System.Collections.Generic.Dictionary{System.String,System.Version})">
            <summary>
            创建信息文件对象（仅创建对象，不写入文件）
            </summary>
            <param name="filePath">文件路径</param>
            <param name="generationID">Generation ID</param>
            <param name="status">状态信息</param>
            <param name="versions">生成Generation的软件版本信息</param>
            <returns>返回创建的对象</returns>
        </member>
        <member name="M:ASEva.Utility.GenerationInfo.Create(System.String,System.String,ASEva.Utility.GenerationProcessStatus,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Version},System.Collections.Generic.Dictionary{System.DateTime,System.String})">
            <summary>
            创建信息文件对象（仅创建对象，不写入文件）
            </summary>
            <param name="filePath">文件路径</param>
            <param name="generationID">Generation ID</param>
            <param name="status">状态信息</param>
            <param name="sampleAlias">样本别名表</param>
            <param name="versions">生成Generation的软件版本信息</param>
            <param name="updateLogs">Generation更新记录</param>
            <returns>返回创建的对象</returns>
        </member>
        <member name="M:ASEva.Utility.GenerationInfo.Load(System.String)">
            <summary>
            从已有信息文件中读取
            </summary>
            <param name="filePath">文件路径</param>
            <returns>返回创建的对象</returns>
        </member>
        <member name="M:ASEva.Utility.GenerationInfo.Save">
            <summary>
            保存信息文件
            </summary>
        </member>
        <member name="T:ASEva.Utility.MD5Calculator">
            <summary>
            (api:app=2.0.0) MD5计算
            </summary>
        </member>
        <member name="M:ASEva.Utility.MD5Calculator.Calculate(System.String)">
            <summary>
            计算文件MD5
            </summary>
            <param name="fileName">文件路径</param>
            <returns>MD5字符串</returns>
        </member>
        <member name="M:ASEva.Utility.MD5Calculator.Calculate(System.Byte[])">
            <summary>
            计算二进制数据块MD5
            </summary>
            <param name="data">二进制数据块</param>
            <returns>MD5字符串</returns>
        </member>
        <member name="T:ASEva.Utility.MissFalseResult">
            <summary>
            (api:app=2.0.0) 漏检/误检结果
            </summary>
        </member>
        <member name="T:ASEva.Utility.MissFalseStat">
            <summary>
            (api:app=2.0.0) 漏检/误检分析与统计
            </summary>
        </member>
        <member name="T:ASEva.Utility.LocPoint">
            <summary>
            (api:app=2.0.0) 经纬度坐标
            </summary>
        </member>
        <member name="P:ASEva.Utility.LocPoint.Lng">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:ASEva.Utility.LocPoint.Lat">
            <summary>
            纬度
            </summary>
        </member>
        <member name="T:ASEva.Utility.OrthoParameters">
            <summary>
            (api:app=2.0.0) 正交坐标系参数
            </summary>
        </member>
        <member name="P:ASEva.Utility.OrthoParameters.OrthoCenterLng">
            <summary>
            原点经度
            </summary>
        </member>
        <member name="P:ASEva.Utility.OrthoParameters.OrthoCenterLat">
            <summary>
            原点纬度
            </summary>
        </member>
        <member name="P:ASEva.Utility.OrthoParameters.OrthoRadius">
            <summary>
            球半径
            </summary>
        </member>
        <member name="M:ASEva.Utility.OrthoParameters.#ctor">
            <summary>
            构造函数，默认原点为(0, 0)，默认球半径为地球半径
            </summary>
        </member>
        <member name="T:ASEva.Utility.OrthoTransform">
            <summary>
            (api:app=2.0.0) 正交坐标系变换
            </summary>
        </member>
        <member name="M:ASEva.Utility.OrthoTransform.#ctor(ASEva.Utility.OrthoParameters)">
            <summary>
            构造函数
            </summary>
            <param name="param">正交坐标系参数</param>
        </member>
        <member name="M:ASEva.Utility.OrthoTransform.GlobalToOrtho(ASEva.Utility.LocPoint)">
            <summary>
            全球坐标系转正交坐标系
            </summary>
            <param name="src">经纬度坐标</param>
            <returns>正交坐标系坐标</returns>
        </member>
        <member name="M:ASEva.Utility.OrthoTransform.OrthoToGlobal(ASEva.FloatPoint)">
            <summary>
            正交坐标系转全球坐标系
            </summary>
            <param name="src">正交坐标系坐标</param>
            <returns>经纬度坐标</returns>
        </member>
        <member name="T:ASEva.Utility.RegexUtil">
            <summary>
            (api:app=2.0.0) 正则表达式工具
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsChineseCh(System.String)">
            <summary>
            是否为中文字符串
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsPhone(System.String)">
            <summary>
            是否为电话号码
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsMobilePhone(System.String)">
            <summary>
            是否为手机号码
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsNumber(System.String)">
            <summary>
            是否为数值字符串
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsNotNagtive(System.String)">
            <summary>
            已弃用，应使用 ASEva.Utility.RegexUtil.IsNotNegative
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsNotNegative(System.String)">
            <summary>
            (api:app=2.3.0) 是否为非负数值字符串
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsUint(System.String)">
            <summary>
            是否为无符号整型
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsEnglishCh(System.String)">
            <summary>
            是否为英文字符串
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsEmail(System.String)">
            <summary>
            是否为邮件字符串
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsNumAndEnCh(System.String)">
            <summary>
            是否为英文数字结合字符串
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsURL(System.String)">
            <summary>
            是否为URL
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsNoHeadURL(System.String)">
            <summary>
            是否为无协议头URL
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsIPv4(System.String)">
            <summary>
            是否为IPv4
            </summary>
        </member>
        <member name="M:ASEva.Utility.RegexUtil.IsIPv6(System.String)">
            <summary>
            是否为IPv6
            </summary>
        </member>
        <member name="T:ASEva.Utility.ResourceLoader">
            <summary>
            (api:app=2.0.0) 资源读取器
            </summary>
        </member>
        <member name="M:ASEva.Utility.ResourceLoader.Load(System.String)">
            <summary>
            按指定名称读取资源
            </summary>
            <param name="name">资源名称</param>
            <returns>资源数据，若找不到资源则返回null</returns>
        </member>
        <member name="M:ASEva.Utility.ResourceLoader.LoadText(System.String)">
            <summary>
            (api:app=2.0.8) 按指定名称读取资源（UTF-8文本），并转为文本
            </summary>
            <param name="name">资源名称</param>
            <returns>文本数据，若找不到资源则返回null</returns>
        </member>
        <member name="T:ASEva.Utility.SampleCsvLoader">
            <summary>
            (api:app=2.0.0) 读取样本csv文件
            </summary>
        </member>
        <member name="M:ASEva.Utility.SampleCsvLoader.CreateLoader(System.String)">
            <summary>
            根据指定路径创建样本csv读取器
            </summary>
            <param name="file">文件路径</param>
            <returns>csv读取器，若文件不存在或创建失败则返回空</returns>
        </member>
        <member name="M:ASEva.Utility.SampleCsvLoader.GetSampleTitle">
            <summary>
            获取样本标题 
            </summary>
            <returns>样本标题，null表示无标题</returns>
        </member>
        <member name="M:ASEva.Utility.SampleCsvLoader.ReadNext">
            <summary>
            读取下一个样本
            </summary>
            <returns>样本对象</returns>
        </member>
        <member name="M:ASEva.Utility.SampleCsvLoader.Close">
            <summary>
            关闭样本csv读取器
            </summary>
        </member>
        <member name="M:ASEva.Utility.SampleCsvLoader.Load(System.String)">
            <summary>
            从csv读取样本，输出GeneralSample数组（仅适合较小文件的情况）
            </summary>
            <param name="file">文件路径</param>
            <returns>返回的样本数组，若文件不存在或协议不正确或异常则返回null</returns>
        </member>
        <member name="T:ASEva.Utility.SampleCsvWriter">
            <summary>
            (api:app=2.0.0) 写入样本csv文件
            </summary>
        </member>
        <member name="M:ASEva.Utility.SampleCsvWriter.CreateWriter(System.String,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            根据指定路径创建样本csv写入器
            </summary>
            <param name="file">文件路径，文件名必须与样本协议ID一致，后缀为csv</param>
            <param name="overwrite">若文件已存在是否覆盖</param>
            <param name="titles"></param>
            <returns>csv写入器，若文件创建失败则返回空</returns>
        </member>
        <member name="M:ASEva.Utility.SampleCsvWriter.Write(ASEva.GeneralSample)">
            <summary>
            写入一个通用样本
            </summary>
            <param name="sample">通用样本</param>
            <returns>若该通用样本协议或session不一致则返回false</returns>
        </member>
        <member name="M:ASEva.Utility.SampleCsvWriter.Close">
            <summary>
            关闭样本csv写入器
            </summary>
        </member>
        <member name="P:ASEva.Utility.SampleCsvWriter.StartTimeUTC">
            <summary>
            设置Session开始时的UTC时间，默认为空
            </summary>
        </member>
        <member name="P:ASEva.Utility.SampleCsvWriter.StartTimeLocal">
            <summary>
            设置Session开始时的本地时间，默认为空
            </summary>
        </member>
        <member name="P:ASEva.Utility.SampleCsvWriter.TimeRatioToUTC">
            <summary>
            设置相对时间转为UTC时间的时间比例，默认为1
            </summary>
        </member>
        <member name="P:ASEva.Utility.SampleCsvWriter.TimeRatioToLocal">
            <summary>
            设置相对时间转为本地时间的时间比例，默认为1
            </summary>
        </member>
        <member name="T:ASEva.Utility.SampleParser">
            <summary>
            (api:app=2.0.0) 样本解析，自动将 ASEva.GeneralSample 转化为特化样本
            </summary>
        </member>
        <member name="M:ASEva.Utility.SampleParser.Register(System.Type)">
            <summary>
            注册需要解析的 ASEva.GeneralSample 协议
            </summary>
            <param name="type">协议ID（不包括通道信息，如'@1'）</param>
        </member>
        <member name="M:ASEva.Utility.SampleParser.Parse(ASEva.GeneralSample)">
            <summary>
            解析样本
            </summary>
            <param name="input">待解析的 ASEva.GeneralSample 样本</param>
            <returns>若解析成功，则返回对应样本，若失败则返回空</returns>
        </member>
        <member name="T:ASEva.Utility.SampleSync">
            <summary>
            (api:app=2.0.0) 样本同步
            </summary>
        </member>
        <member name="M:ASEva.Utility.SampleSync.Sync(System.Double,System.DateTime,System.Collections.Generic.List{System.Collections.Generic.List{ASEva.Sample}},System.Collections.Generic.List{ASEva.Sample}@)">
            <summary>
            样本同步函数，根据目标时间点搜索样本缓存，输出插值或最近样本
            </summary>
            <param name="timeline">希望同步的时间线</param>
            <param name="Base">时间线所在session</param>
            <param name="sampleLists">输入的样本缓存，可以是多个缓存</param>
            <param name="outputs">各个缓存按指定时间点输出插值或最近样本</param>
            <returns>需要保留返回false，否则返回true</returns>
        </member>
        <member name="T:ASEva.Utility.SceneCsv">
            <summary>
            (api:app=2.0.0) 场景csv文件读写
            </summary>
        </member>
        <member name="T:ASEva.Utility.Serializer">
            <summary>
            (api:app=2.0.0) XML/Json的对象读写与文件读写
            </summary>
        </member>
        <member name="M:ASEva.Utility.Serializer.ObjectToXml(System.Object)">
            <summary>
            对象转XML字符串
            </summary>
        </member>
        <member name="M:ASEva.Utility.Serializer.XmlToObject(System.String,System.Type)">
            <summary>
            XML字符串转对象
            </summary>
        </member>
        <member name="M:ASEva.Utility.Serializer.ObjectToXmlFile(System.Object,System.String)">
            <summary>
            对象写入XML文件
            </summary>
        </member>
        <member name="M:ASEva.Utility.Serializer.XmlFileToObject(System.String,System.Type)">
            <summary>
            从XML文件读取对象
            </summary>
        </member>
        <member name="M:ASEva.Utility.Serializer.ObjectToJson(System.Object)">
            <summary>
            对象转JSON字符串
            </summary>
        </member>
        <member name="M:ASEva.Utility.Serializer.JsonToObject(System.String,System.Type)">
            <summary>
            JSON字符串转对象
            </summary>
        </member>
        <member name="M:ASEva.Utility.Serializer.ObjectToJsonFile(System.Object,System.String)">
            <summary>
            对象写入JSON文件
            </summary>
        </member>
        <member name="M:ASEva.Utility.Serializer.JsonFileToObject(System.String,System.Type)">
            <summary>
            从JSON文件读取对象
            </summary>
        </member>
        <member name="T:ASEva.Utility.SessionMeta">
            <summary>
            (api:app=2.0.0) Session的meta信息
            </summary>
        </member>
        <member name="P:ASEva.Utility.SessionMeta.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:ASEva.Utility.SessionMeta.ID">
            <summary>
            Session ID （开始采集时ECU时间）
            </summary>
        </member>
        <member name="P:ASEva.Utility.SessionMeta.GUID">
            <summary>
            Session GUID
            </summary>
        </member>
        <member name="P:ASEva.Utility.SessionMeta.Length">
            <summary>
            Session长度，单位秒
            </summary>
        </member>
        <member name="P:ASEva.Utility.SessionMeta.StartTimeLocal">
            <summary>
            Session开始时的本地时间
            </summary>
        </member>
        <member name="P:ASEva.Utility.SessionMeta.TimeRatioToLocal">
            <summary>
            相对时间(时间偏置)转换为本地时间的时间比例
            </summary>
        </member>
        <member name="P:ASEva.Utility.SessionMeta.StartTimeUTC">
            <summary>
            Session开始时的UTC时间
            </summary>
        </member>
        <member name="P:ASEva.Utility.SessionMeta.TimeRatioToUTC">
            <summary>
            相对时间(时间偏置)转换为UTC时间的时间比例
            </summary>
        </member>
        <member name="P:ASEva.Utility.SessionMeta.Comment">
            <summary>
            Session的注释说明
            </summary>
        </member>
        <member name="P:ASEva.Utility.SessionMeta.Pick">
            <summary>
            Session的截取ID，origin表示原始数据
            </summary>
        </member>
        <member name="P:ASEva.Utility.SessionMeta.PickProperties">
            <summary>
            Session的截取属性列表
            </summary>
        </member>
        <member name="P:ASEva.Utility.SessionMeta.Properties">
            <summary>
            Session的属性
            </summary>
        </member>
        <member name="P:ASEva.Utility.SessionMeta.Versions">
            <summary>
            采集Session的软件版本信息（用于回溯）
            </summary>
        </member>
        <member name="M:ASEva.Utility.SessionMeta.Create(System.String,System.DateTime,System.String,System.Nullable{System.Double},System.Nullable{System.DateTime},System.Double,System.Nullable{System.DateTime},System.Double,System.String,System.Collections.Generic.Dictionary{System.String,System.Version},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            创建meta文件对象（仅创建对象，不写入文件）
            </summary>
            <param name="filePath">文件路径</param>
            <param name="id">Session ID</param>
            <param name="guid">Session GUID</param>
            <param name="length">Session长度</param>
            <param name="startTimeUTC">Session开始时的UTC时间</param>
            <param name="timeRatioToUTC">相对时间(时间偏置)转换为UTC时间的时间比例</param>
            <param name="startTimeLocal">Session开始时的本地时间</param>
            <param name="timeRatioToLocal">相对时间(时间偏置)转换为本地时间的时间比例</param>
            <param name="comment">Session的注释说明</param>
            <param name="versions">采集Session的软件版本信息</param>
            <param name="props">Session的属性</param>
            <param name="pick">Session的截取ID，origin表示原始数据</param>
            <param name="pickProps">Session的截取属性列表</param>
            <returns>返回创建的对象</returns>
        </member>
        <member name="M:ASEva.Utility.SessionMeta.Load(System.String)">
            <summary>
            从已有meta文件中读取
            </summary>
            <param name="filePath">文件路径</param>
            <returns>返回创建的对象</returns>
        </member>
        <member name="M:ASEva.Utility.SessionMeta.Save">
            <summary>
            保存meta文件
            </summary>
        </member>
        <member name="T:ASEva.Utility.StringParsing">
            <summary>
            (api:app=2.0.0) 字符串与数据相互转换
            </summary>
        </member>
        <member name="T:ASEva.Utility.TextResource">
            <summary>
            (api:app=2.1.0) 多语言文本资源
            </summary>
        </member>
        <member name="M:ASEva.Utility.TextResource.Load(System.String,System.String)">
            <summary>
            加载多语言文本资源
            </summary>
            <param name="xmlFileName">资源文件名</param>
            <param name="languageCode">语言代号，en表示英文，ch表示中文，null则通过 ASEva.Agency.GetAppLanguage 获取</param>
            <returns>多语言文本资源对象</returns>
        </member>
        <member name="P:ASEva.Utility.TextResource.Item(System.String)">
            <summary>
            获取指定ID对应的文本
            </summary>
            <value>指定ID对应的文本</value>
        </member>
        <member name="M:ASEva.Utility.TextResource.Format(System.String,System.Object[])">
            <summary>
            以指定ID对应的文本作为格式描述，输出文本
            </summary>
            <param name="id">指定ID</param>
            <param name="args">格式描述中的参数值</param>
            <returns>输出文本</returns>
        </member>
        <member name="T:ASEva.Utility.TimeoutWebClient">
            <summary>
            (api:app=2.0.0) 带Timeout属性的WebClient
            </summary>
        </member>
        <member name="P:ASEva.Utility.TimeoutWebClient.Timeout">
            <summary>
            超时，单位毫秒
            </summary>
        </member>
        <member name="M:ASEva.Utility.TimeoutWebClient.#ctor">
            <summary>
            构造函数，默认超时5秒
            </summary>
        </member>
        <member name="T:ASEva.Utility.TriggerFilter">
            <summary>
            (api:app=2.0.0) 二值化信号滤波并提取上升沿
            </summary>
        </member>
        <member name="T:ASEva.Utility.Xml">
            <summary>
            (api:app=2.0.0) XML相关功能类
            </summary>
        </member>
        <member name="M:ASEva.Utility.Xml.Create(System.String)">
            <summary>
            创建一个包含根节点的空XML文档
            </summary>
            <param name="rootTag">根节点的标签名</param>
            <returns>新创建的XML文档</returns>
        </member>
        <member name="T:ASEva.WindowClass">
            <summary>
            (api:app=2.0.0) 窗口组件定义的基类
            </summary>
        </member>
        <member name="M:ASEva.WindowClass.GetWindowName">
            <summary>
            [必须实现] 获取窗口组件的名称时被调用
            </summary>
            <returns>窗口组件名称表，键'en'表示英文，'ch'表示中文</returns>
        </member>
        <member name="M:ASEva.WindowClass.GetWindowClassID">
            <summary>
            [必须实现] 获取窗口组件的类别ID时被调用
            </summary>
            <returns>窗口类别ID</returns>
        </member>
        <member name="M:ASEva.WindowClass.GetWindowImage">
            <summary>
            [可选实现] 获取窗口组件的图标图像时被调用
            </summary>
            <returns>图标图像（大小一般为16x16）</returns>
        </member>
        <member name="M:ASEva.WindowClass.GetRelatedModules">
            <summary>
            [可选实现]  获取窗口组件相关的组件ID
            </summary>
            <returns>组件ID列表</returns>
        </member>
        <member name="M:ASEva.WindowClass.CreateWindow">
            <summary>
            [必须实现] 创建窗口控件时被调用
            </summary>
            <returns>窗口控件，该控件将填满显示窗口</returns>
        </member>
        <member name="M:ASEva.WindowClass.IsMultipleWindowSupported">
            <summary>
            [可选实现] 查询是否支持显示多个窗口时被调用
            </summary>
            <returns>是否支持显示多个窗口，默认为false</returns>
        </member>
        <member name="M:ASEva.WindowClass.GetRawToSampleProtocols">
            <summary>
            [可选实现] 获取可直接作为样本输出的原始数据协议列表及对应的样本别名
            </summary>
            <returns>原始数据协议（键）列表及对应的样本别名（值）</returns>
        </member>
        <member name="M:ASEva.WindowClass.Transform(System.String)">
            <summary>
            [可选实现] 根据窗口配置返回分化的窗口组件定义
            </summary>
            <param name="config">窗口配置</param>
            <returns>分化的窗口组件定义</returns>
        </member>
        <member name="M:ASEva.WindowClass.GetTransformID">
            <summary>
            [分化的窗口组件必须实现] 获取分化标识ID时被调用
            </summary>
            <returns>分化标识ID</returns>
        </member>
    </members>
</doc>
