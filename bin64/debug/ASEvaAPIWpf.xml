<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASEvaAPIWpf</name>
    </assembly>
    <members>
        <member name="T:ASEva.UIWpf.APIInfo">
            <summary>
            version=2.1.0
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.APIInfo.GetAPIVersion">
            \~English
            <summary>
            (api:wpf=2.0.0) Get API version
            </summary>
            <returns>The API version</returns>
            \~Chinese
            <summary>
            (api:wpf=2.0.0) 获取API版本
            </summary>
            <returns>API版本</returns>
        </member>
        <member name="T:ASEva.UIWpf.AppDialogWpf">
            <summary>
            AppDialogWpf
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.AppDialogWpf.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ASEva.UIWpf.ConfigPanel">
            \~English
            <summary>
            (api:wpf=2.0.0) UI panel for configuration
            </summary>
            \~Chinese
            <summary>
            (api:wpf=2.0.0) 配置界面控件，用于实现可视化配置
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.ConfigPanel.OnInitSize(System.String)">
            \~English
            <summary>
            [Optional] Called while initializing panel's size
            </summary>
            <param name="config">Configuration string</param>
            \~Chinese
            <summary>
            [可选实现] 在初始化控件尺寸时被调用
            </summary>
            <param name="config">配置字符串</param>
        </member>
        <member name="M:ASEva.UIWpf.ConfigPanel.OnInit(System.String)">
            \~English
            <summary>
            [Optional] Called while initializing the panel
            </summary>
            <param name="config">Configuration string</param>
            \~Chinese
            <summary>
            [可选实现] 在配置界面控件初始化时被调用
            </summary>
            <param name="config">配置字符串</param>
        </member>
        <member name="M:ASEva.UIWpf.ConfigPanel.OnRelease">
            \~English
            <summary>
            [Optional] Called before destroying the panel
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在配置界面控件销毁前被调用
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.ConfigPanel.OnUpdateUI">
            \~English
            <summary>
            [Optional] Called while updating the panel's UI
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在需要更新界面时被调用
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.ConfigPanel.OnHandleModal">
            \~English
            <summary>
            [Optional] Called in the main loop, for running modal dialog
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在主循环中被调用，可进行模态对话
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.ConfigPanel.OnHandleAsync">
            \~English
            <summary>
            (api:wpf=2.0.6) [Optional] Called in the main loop, for asynchronous calls
            </summary>
            \~Chinese
            <summary>
            (api:wpf=2.0.6) [可选实现] 在主循环中被调用，可进行异步调用
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.ConfigPanel.Close">
            \~English
            <summary>
            Close the container holding the panel
            </summary>
            \~Chinese
            <summary>
            关闭配置界面
            </summary>
        </member>
        <member name="E:ASEva.UIWpf.ConfigPanel.CloseRequested">
            \~English
            <summary>
            Implement closing the panel container in this event
            </summary>
            \~Chinese
            <summary>
            在此事件中实现配置界面的关闭
            </summary>
        </member>
        <member name="T:ASEva.UIWpf.CrossConverter">
            \~English
            <summary>
            (api:wpf=2.1.0) Panel conversion tool
            </summary>
            \~Chinese
            <summary>
            (api:wpf=2.1.0) 面板转换工具
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.CrossConverter.ConvertWindowPanel(System.Object)">
            \~English
            <summary>
            Convert any window panel to WPF window panel
            </summary>
            <param name="anyWindowPanel">Any window panel</param>
            <returns>WPF window panel, null if conversion failed</returns>
            \~Chinese
            <summary>
            将任意窗口面板转化为WPF窗口面板
            </summary>
            <param name="anyWindowPanel">任意窗口面板</param>
            <returns>WPF窗口面板，若转化失败则返回null</returns>
        </member>
        <member name="M:ASEva.UIWpf.CrossConverter.ConvertConfigPanel(System.Object)">
            \~English
            <summary>
            Convert any config panel to WPF config panel
            </summary>
            <param name="anyConfigPanel">Any config panel</param>
            <returns>WPF config panel, null if conversion failed</returns>
            \~Chinese
            <summary>
            将任意配置面板转化为WPF配置面板
            </summary>
            <param name="anyConfigPanel">任意配置面板</param>
            <returns>WPF配置面板，若转化失败则返回null</returns>
        </member>
        <member name="T:ASEva.UIWpf.ConfigPanelEto">
            <summary>
            ConfigPanelEto.xaml 的交互逻辑
            </summary>
            <summary>
            ConfigPanelEto
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.ConfigPanelEto.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ASEva.UIWpf.WindowPanelEto">
            <summary>
            WindowPanelEto.xaml 的交互逻辑
            </summary>
            <summary>
            WindowPanelEto
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.WindowPanelEto.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ASEva.UIWpf.OpenGLBlitControlWpf">
            <summary>
            OpenGLBlitControlWpf
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.OpenGLBlitControlWpf.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ASEva.UIWpf.OpenGLControlWpf">
            <summary>
            OpenGLControlWpf
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.OpenGLControlWpf.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ASEva.UIWpf.TextDraw">
            <summary>
            TextDraw
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.TextDraw.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ASEva.UIWpf.ButtonHandler`3">
            <copyright>(c) 2014 by Vivek Jhaveri</copyright>
            <copyright>(c) 2012-2019 by Curtis Wensley</copyright>
            <license type="BSD-3">See LICENSE for full terms</license>
        </member>
        <member name="P:ASEva.UIWpf.ButtonHandler`3.ImageLabelSpacing">
            <summary>
            Gets or sets the spacing between the image and the label when both are present
            </summary>
        </member>
        <member name="T:ASEva.UIWpf.Handler.PeekablePasswordBox">
            <summary>
            PeekablePasswordBox
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.Handler.PeekablePasswordBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:ASEva.UIWpf.WebView2Handler.CoreWebView2Environment">
            <summary>
            The default environment to use if none is specified with <see cref="P:ASEva.UIWpf.WebView2Handler.Environment"/>.
            </summary>
        </member>
        <member name="F:ASEva.UIWpf.WebView2Handler.GetCoreWebView2Environment">
            <summary>
            Specifies a function to call when we need the default environment, if not already specified
            </summary>
        </member>
        <member name="P:ASEva.UIWpf.WebView2Handler.Environment">
            <summary>
            Gets or sets the environment to use, defaulting to <see cref="F:ASEva.UIWpf.WebView2Handler.CoreWebView2Environment"/>.
            This can only be set once during construction or with a style for this handler.
            </summary>
            <value>Environment to use to initialize WebView2</value>
        </member>
        <member name="M:ASEva.UIWpf.WebView2Handler.OnInitializeWebView2Async">
            <summary>
            Override to use your own WebView2 initialization, if necessary
            </summary>
            <returns>Task</returns>
        </member>
        <member name="T:ASEva.UIWpf.ImageConverter">
            \~English
            <summary>
            (api:wpf=2.0.0) Conversion of image object
            </summary>
            \~Chinese
            <summary>
            (api:wpf=2.0.0) 图像对象转换
            </summary>
        </member>
        <member name="T:ASEva.UIWpf.WindowPanel">
            \~English
            <summary>
            (api:wpf=2.0.0) UI panel for child window
            </summary>
            \~Chinese
            <summary>
            (api:wpf=2.0.0) 窗口控件，用于实现窗口组件的实际功能
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.WindowPanel.OnInitSize(System.String)">
            \~English
            <summary>
            [Optional] Called while initializing panel's size
            </summary>
            <param name="config">Configuration string</param>
            \~Chinese
            <summary>
            [可选实现] 在初始化控件尺寸时被调用
            </summary>
            <param name="config">配置字符串</param>
        </member>
        <member name="M:ASEva.UIWpf.WindowPanel.OnInit(System.String)">
            \~English
            <summary>
            [Optional] Called while initializing the panel
            </summary>
            <param name="config">Configuration string</param>
            \~Chinese
            <summary>
            [可选实现] 在配置界面控件初始化时被调用
            </summary>
            <param name="config">配置字符串</param>
        </member>
        <member name="M:ASEva.UIWpf.WindowPanel.OnGetConfig">
            \~English
            <summary>
            [Optional] Called while getting the configuration string
            </summary>
            <returns>Configuration string</returns>
            \~Chinese
            <summary>
            [可选实现] 获取配置字符串时被调用
            </summary>
            <returns>配置字符串</returns>
        </member>
        <member name="M:ASEva.UIWpf.WindowPanel.OnInputData(System.Object)">
            \~English
            <summary>
            [Optional] Called while new data arrived. If there's a sample buffer, use ASEva.Sample.ClipWithBufferBegin to remove data outside the buffer range after adding new sample. In addition, since ASEva.WindowPanel.OnUpdateUI won't be called while the child window is hidden, you can use ASEva.Samples.ManualTriggerSample to perform background processing (ManualTriggerSample's frequency is 50Hz)
            </summary>
            <param name="data">New data, can be ASEva.GeneralSample , ASEva.Samples.ManualTriggerSample , ASEva.Samples.AudioFrameSample , ASEva.Samples.PointCloudSample , ASEva.Samples.BusDataPack , ASEva.Samples.SignalsData , ASEva.EventData , ASEva.SceneData , etc.</param>
            \~Chinese
            <summary>
            [可选实现] 在获得新数据时被调用。如果存在样本缓存，则需要在添加至缓存后使用 ASEva.Sample.ClipWithBufferBegin 将缓存范围外数据移除。另外，由于窗口隐藏时将不会调用 ASEva.WindowPanel.OnUpdateUI ，所以可以在此函数中的data为 ASEva.Samples.ManualTriggerSample 时进行后台处理（ManualTriggerSample频率为50Hz）
            </summary>
            <param name="data">新数据，包括通用样本 ASEva.GeneralSample , 手动触发器样本 ASEva.Samples.ManualTriggerSample , 音频帧样本 ASEva.Samples.AudioFrameSample , 点云帧样本 ASEva.Samples.PointCloudSample , 总线数据 ASEva.Samples.BusDataPack , 信号数据 ASEva.Samples.SignalsData , 事件数据 ASEva.EventData , 场景片段描述 ASEva.SceneData 等类型</param>
        </member>
        <member name="M:ASEva.UIWpf.WindowPanel.OnResetData">
            \~English
            <summary>
            [Optional] Called while needed to reset data buffer
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在需要重置数据缓存时被调用
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.WindowPanel.OnStartSession">
            \~English
            <summary>
            [Optional] Called while starting a session
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在每轮开始时被调用
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.WindowPanel.OnStopSession">
            \~English
            <summary>
            [Optional] Called while stopping a session
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在每轮结束时被调用
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.WindowPanel.OnUpdateUI">
            \~English
            <summary>
            [Optional] Called while updating the panel's UI. All UI related updating should be put here. Note that this function won't be called when the child window is hidden
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在需要更新界面时被调用。所有与界面相关的更新应全部放在此函数内实现。需要注意，窗口隐藏时将不会调用此函数
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.WindowPanel.OnHandleModal">
            \~English
            <summary>
            [Optional] Called in the main loop, for running modal dialog
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在主循环中被调用，可进行模态对话
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.WindowPanel.OnHandleAsync">
            \~English
            <summary>
            (api:wpf=2.0.6) [Optional] Called in the main loop, for asynchronous calls
            </summary>
            \~Chinese
            <summary>
            (api:wpf=2.0.6) [可选实现] 在主循环中被调用，可进行异步调用
            </summary>
        </member>
        <member name="M:ASEva.UIWpf.WindowPanel.OnRelease">
            \~English
            <summary>
            [Optional] Called before destroying the panel
            </summary>
            \~Chinese
            <summary>
            [可选实现] 在窗口控件销毁前被调用
            </summary>
        </member>
        <member name="T:ASEva.UIWpf.XamlLoader">
            \~English
            <summary>
            (api:wpf=2.0.0) Load xaml dynamically
            </summary>
            \~Chinese
            <summary>
            (api:wpf=2.0.0) 动态加载xaml
            </summary>
        </member>
        <member name="T:ASEva.UIEto.CommonImageWpfExtensions">
            \~English
            <summary>
            (api:wpf=2.0.4) Extensions for common image object
            </summary>
            \~Chinese
            <summary>
            (api:wpf=2.0.4) 方便使用通用图像数据的扩展
            </summary>
        </member>
        <member name="M:ASEva.UIEto.CommonImageWpfExtensions.ToBitmapSource(ASEva.Samples.CommonImage)">
            \~English
            <summary>
            Convert to BitmapSource object
            </summary>
            <param name="image">Common image object</param>
            <returns>BitmapSource object</returns>
            \~Chinese
            <summary>
            转为BitmapSource对象
            </summary>
            <param name="image">通用图像数据</param>
            <returns>BitmapSource对象</returns>
        </member>
        <member name="M:ASEva.UIEto.CommonImageWpfExtensions.ToCommonImage(System.Windows.Media.Imaging.BitmapSource)">
            \~English
            <summary>
            Convert to common image object
            </summary>
            <param name="bitmap">BitmapSource object</param>
            <returns>Common image object</returns>
            \~Chinese
            <summary>
            转为通用图像数据
            </summary>
            <param name="bitmap">BitmapSource对象</param>
            <returns>通用图像数据</returns>
        </member>
    </members>
</doc>
