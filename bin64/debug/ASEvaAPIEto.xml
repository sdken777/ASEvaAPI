<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASEvaAPIEto</name>
    </assembly>
    <members>
        <member name="T:ASEva.UIEto.APIInfo">
            <summary>
            version=2.4.1
            </summary>
        </member>
        <member name="M:ASEva.UIEto.APIInfo.GetAPIVersion">
            <summary>
            (api:eto=2.0.0) 获取API版本
            </summary>
            <returns>API版本</returns>
        </member>
        <member name="T:ASEva.UIEto.App">
            <summary>
            (api:eto=2.0.0) Eto应用程序
            </summary>
        </member>
        <member name="M:ASEva.UIEto.App.Init">
            <summary>
            应用程序初始化
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:ASEva.UIEto.App.Init(System.String)">
            <summary>
            (api:eto=2.0.7) 以指定UI框架初始化应用程序
            </summary>
            <param name="uiCode">UI框架代号</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:ASEva.UIEto.App.Run(Eto.Forms.Form)">
            <summary>
            运行应用程序
            </summary>
            <param name="window">主窗口</param>
        </member>
        <member name="M:ASEva.UIEto.App.GetRunningOS">
            <summary>
            (api:eto=2.0.7) 返回当前运行的OS代号，与 ASEva.APIInfo.GetRunningOS 结果一致
            </summary>
            <returns>OS代号，若无法识别返回null</returns>
        </member>
        <member name="M:ASEva.UIEto.App.GetRunningUI">
            <summary>
            (api:eto=2.0.7) 返回当前运行的UI框架代号
            </summary>
            <returns>UI框架代号，若未运行 ASEva.UIEto.App.Init 或初始化失败则返回null</returns>
        </member>
        <member name="M:ASEva.UIEto.App.GetUIBackend">
            <summary>
            (api:eto=2.4.0) 返回当前运行UI的后端代号
            </summary>
            <returns>UI的后端代号，若未运行 ASEva.UIEto.App.Init 、或初始化失败、或当前运行UI无后端则返回null</returns>
        </member>
        <member name="M:ASEva.UIEto.App.GetWebViewBackend">
            <summary>
            (api:eto=2.3.4) 返回当前WebView使用的后台框架代号
            </summary>
            <returns>当前WebView使用的后台框架代号，若未运行 ASEva.UIEto.App.Init 或初始化失败则返回null</returns>
        </member>
        <member name="P:ASEva.UIEto.App.Instance">
            <summary>
            应用程序对象
            </summary>
        </member>
        <member name="M:ASEva.UIEto.App.DefaultFont(System.Single)">
            <summary>
            (api:eto=2.0.6) 获取默认字体
            </summary>
            <param name="sizeRatio">相对字体默认大小的比例，默认为1</param>
            <returns>默认字体</returns>
        </member>
        <member name="P:ASEva.UIEto.App.WorkPath">
            <summary>
            (api:eto=2.1.0) 获取应用程序的工作路径
            </summary>
            <value>工作路径</value>
        </member>
        <member name="T:ASEva.UIEto.ButtonPanel">
            <summary>
            (api:eto=2.3.3) 按钮面板
            </summary>
        </member>
        <member name="M:ASEva.UIEto.ButtonPanel.#ctor(System.String,System.Int32)">
            <summary>
            初始化文字按钮面板
            </summary>
            <param name="text">文字</param>
            <param name="logicalPadding">按钮边框与文字的间距</param>
        </member>
        <member name="M:ASEva.UIEto.ButtonPanel.#ctor(Eto.Drawing.Bitmap,System.Int32)">
            <summary>
            初始化图像按钮面板
            </summary>
            <param name="image">图像</param>
            <param name="logicalPadding">按钮边框与文字的间距</param>
        </member>
        <member name="E:ASEva.UIEto.ButtonPanel.Click">
            <summary>
            点击按钮事件
            </summary>
        </member>
        <member name="P:ASEva.UIEto.ButtonPanel.DefaultBackgroundColor">
            <summary>
            默认状态下的背景颜色（默认为Colors.Transparent）
            </summary>
        </member>
        <member name="P:ASEva.UIEto.ButtonPanel.MouseInsideColor">
            <summary>
            鼠标在按钮范围内的背景颜色（默认为Colors.LightSteelBlue）
            </summary>
        </member>
        <member name="P:ASEva.UIEto.ButtonPanel.MouseDownColor">
            <summary>
            鼠标按下后的背景颜色（默认为Colors.SteelBlue）
            </summary>
        </member>
        <member name="P:ASEva.UIEto.ButtonPanel.TextColor">
            <summary>
            文字颜色（默认为Colors.Black）
            </summary>
        </member>
        <member name="T:ASEva.UIEto.ConfigPanel">
            <summary>
            (api:eto=2.0.0) 配置界面控件，用于实现可视化配置
            </summary>
        </member>
        <member name="M:ASEva.UIEto.ConfigPanel.OnInitSize(System.String)">
            <summary>
            (api:eto=2.2.1) [可选实现] 在初始化控件尺寸时被调用
            </summary>
            <param name="config">配置字符串</param>
        </member>
        <member name="M:ASEva.UIEto.ConfigPanel.OnGetSize">
            <summary>
            [必须实现] 获取尺寸时被调用
            </summary>
            <returns>默认DPI下的尺寸，将被调整为至少200x50</returns>
        </member>
        <member name="M:ASEva.UIEto.ConfigPanel.OnInit(System.String)">
            <summary>
            [可选实现] 在配置界面控件初始化时被调用
            </summary>
            <param name="config">配置字符串</param>
        </member>
        <member name="M:ASEva.UIEto.ConfigPanel.OnRelease">
            <summary>
            [可选实现] 在配置界面控件销毁前被调用
            </summary>
        </member>
        <member name="M:ASEva.UIEto.ConfigPanel.OnUpdateUI">
            <summary>
            [可选实现] 在需要更新界面时被调用
            </summary>
        </member>
        <member name="T:ASEva.UIEto.ContextMenuExtensions">
            <summary>
            (api:eto=2.0.3) 方便操作右键菜单的扩展
            </summary>
        </member>
        <member name="M:ASEva.UIEto.ContextMenuExtensions.SetContextMenuAsNew(Eto.Forms.Panel)">
            <summary>
            (api:eto=2.0.8) 设置面板右键菜单
            </summary>
            <param name="panel">面板</param>
            <returns>右键菜单对象，若已存在则返回null</returns>
        </member>
        <member name="M:ASEva.UIEto.ContextMenuExtensions.AddSeparator(Eto.Forms.ContextMenu)">
            <summary>
            添加分割线
            </summary>
            <param name="menu">右键菜单</param>
        </member>
        <member name="M:ASEva.UIEto.ContextMenuExtensions.AddButtonItem(Eto.Forms.ContextMenu,System.String,Eto.Drawing.Image)">
            <summary>
            (api:eto=2.0.4) 添加按键项
            </summary>
            <param name="menu">右键菜单</param>
            <param name="text">菜单项文字</param>
            <param name="image">菜单项文字前的图标，默认为null</param>
            <returns></returns>
        </member>
        <member name="M:ASEva.UIEto.ContextMenuExtensions.AddCheckItem(Eto.Forms.ContextMenu,System.String)">
            <summary>
            添加多选项
            </summary>
            <param name="menu">右键菜单</param>
            <param name="text">菜单项文字</param>
            <returns>多选项对象</returns>
        </member>
        <member name="M:ASEva.UIEto.ContextMenuExtensions.AddRadioItems(Eto.Forms.ContextMenu,System.String[])">
            <summary>
            添加一组单选项
            </summary>
            <param name="menu">右键菜单</param>
            <param name="texts">各菜单项文字</param>
            <returns>一组单选项对象</returns>
        </member>
        <member name="T:ASEva.UIEto.GraphicsExtensions">
            <summary>
            (api:eto=2.0.4) 方便操作图形对象的扩展
            </summary>
        </member>
        <member name="M:ASEva.UIEto.GraphicsExtensions.SetScaleForLogical(Eto.Drawing.Graphics)">
            <summary>
            设置绘图尺度，令所有相关绘制函数的输入尺寸都为logical尺寸
            </summary>
            <param name="g">图形对象</param>
        </member>
        <member name="M:ASEva.UIEto.GraphicsExtensions.ScaledFont(Eto.Drawing.Graphics,Eto.Drawing.Font)">
            <summary>
            调用SetScaleForLogical后，绘制文字需要使用此函数返回的字体
            </summary>
            <param name="g">图形对象</param>
            <param name="f">原字体</param>
            <returns>可用于绘制的字体</returns>
        </member>
        <member name="M:ASEva.UIEto.GraphicsExtensions.ScaledDefaultFont(Eto.Drawing.Graphics,System.Single)">
            <summary>
            (api:eto=2.0.6) 调用SetScaleForLogical后，以默认字体绘制需要使用此函数返回的字体
            </summary>
            <param name="g">图形对象</param>
            <param name="sizeRatio">相对字体默认大小的比例，默认为1</param>
            <returns>可用于绘制的默认字体</returns>
        </member>
        <member name="T:ASEva.UIEto.SetClientSizeExtensions">
            <summary>
            (api:eto=2.3.2) 方便设置窗口或对话框的用户区域
            </summary>
        </member>
        <member name="M:ASEva.UIEto.SetClientSizeExtensions.SetClientSize(Eto.Forms.Window,System.Int32,System.Int32)">
            <summary>
            设置窗口或对话框的用户区域尺寸
            </summary>
            <param name="window">窗口或对话框对象</param>
            <param name="logicalWidth">宽度</param>
            <param name="logicalHeight">高度</param>
        </member>
        <member name="M:ASEva.UIEto.SetClientSizeExtensions.SetMinimumClientSize(Eto.Forms.Window,System.Int32,System.Int32)">
            <summary>
            设置窗口或对话框的用户区域的最小尺寸
            </summary>
            <param name="window">窗口或对话框对象</param>
            <param name="logicalWidth">最小宽度</param>
            <param name="logicalHeight">最小高度</param>
        </member>
        <member name="T:ASEva.UIEto.SetContentExtensions">
            <summary>
            (api:eto=2.0.0) 方便设置面板Content的扩展 
            </summary>
        </member>
        <member name="M:ASEva.UIEto.SetContentExtensions.SetContentAsRowLayout(Eto.Forms.Panel,System.Int32,System.Int32,Eto.Forms.VerticalAlignment)">
            <summary>
            设置横向堆叠布局至面板Content
            </summary>
            <param name="panel">面板</param>
            <param name="logicalPadding">横向堆叠布局的边缘空隙</param>
            <param name="logicalSpacing">横向堆叠布局中各控件的间隙</param>
            <param name="alignment">横向堆叠布局中各控件的纵向对齐方式</param>
            <returns>创建的横向堆叠布局</returns>
        </member>
        <member name="M:ASEva.UIEto.SetContentExtensions.SetContentAsColumnLayout(Eto.Forms.Panel,System.Int32,System.Int32,Eto.Forms.HorizontalAlignment)">
            <summary>
            设置纵向堆叠布局至面板Content
            </summary>
            <param name="panel">面板</param>
            <param name="logicalPadding">纵向堆叠布局的边缘空隙</param>
            <param name="logicalSpacing">纵向堆叠布局中各控件的间隙</param>
            <param name="alignment">纵向堆叠布局中各控件的横向对齐方式</param>
            <returns>创建的纵向堆叠布局</returns>
        </member>
        <member name="M:ASEva.UIEto.SetContentExtensions.SetContentAsTableLayout(Eto.Forms.Panel,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置表布局至面板Content
            </summary>
            <param name="panel">面板</param>
            <param name="logicalPadding">表布局的边缘空隙</param>
            <param name="logicalSpacingX">表布局中各控件的横向间隙</param>
            <param name="logicalSpacingY">表布局中各控件的纵向间隙</param>
            <returns>创建的表布局</returns>
        </member>
        <member name="M:ASEva.UIEto.SetContentExtensions.SetContentAsPixelLayout(Eto.Forms.Panel)">
            <summary>
            设置像素布局至面板Content
            </summary>
            <param name="panel">面板</param>
            <returns>创建的像素布局</returns>
        </member>
        <member name="T:ASEva.UIEto.SizerExtensions">
            <summary>
            (api:eto=2.0.0) 提供非默认DPI尺寸转换的扩展
            </summary>
        </member>
        <member name="M:ASEva.UIEto.SizerExtensions.Sizer(Eto.Forms.Control,System.Int32)">
            <summary>
            转换像素值（单值）
            </summary>
            <param name="control">控件</param>
            <param name="size">默认DPI下的像素值</param>
            <returns>任意DPI下的像素值</returns>
        </member>
        <member name="M:ASEva.UIEto.SizerExtensions.Sizer(Eto.Forms.Control,System.Int32,System.Int32)">
            <summary>
            转换像素值（二维）
            </summary>
            <param name="control">控件</param>
            <param name="width">默认DPI下的宽度像素值</param>
            <param name="height">默认DPI下的高度像素值</param>
            <returns>任意DPI下的像素尺寸</returns>
        </member>
        <member name="M:ASEva.UIEto.SizerExtensions.GetLogicalWidth(Eto.Forms.Control)">
            <summary>
            (api:eto=2.3.5) 获取控件宽度
            </summary>
            <param name="control">控件</param>
            <returns>控件宽度</returns>
        </member>
        <member name="M:ASEva.UIEto.SizerExtensions.GetLogicalHeight(Eto.Forms.Control)">
            <summary>
            (api:eto=2.3.5) 获取控件高度
            </summary>
            <param name="control">控件</param>
            <returns>控件高度</returns>
        </member>
        <member name="M:ASEva.UIEto.SizerExtensions.SetLogicalWidth(Eto.Forms.Control,System.Int32)">
            <summary>
            设置控件宽度
            </summary>
            <param name="control">控件</param>
            <param name="width">设置宽度</param>
        </member>
        <member name="M:ASEva.UIEto.SizerExtensions.SetLogicalHeight(Eto.Forms.Control,System.Int32)">
            <summary>
            设置控件高度
            </summary>
            <param name="control">控件</param>
            <param name="height">设置高度</param>
        </member>
        <member name="M:ASEva.UIEto.SizerExtensions.SetLogicalSize(Eto.Forms.Control,System.Int32,System.Int32)">
            <summary>
            设置控件尺寸
            </summary>
            <param name="control">控件</param>
            <param name="width">设置宽度</param>
            <param name="height">设置高度</param>
        </member>
        <member name="P:ASEva.UIEto.SizerExtensions.PixelScale">
            <summary>
            像素单位比例，用于优化在非默认DPI下的显示
            </summary>
        </member>
        <member name="T:ASEva.UIEto.SplitterExtensions">
            <summary>
            (api:eto=2.0.2) 方便操作分屏控件的扩展
            </summary>
        </member>
        <member name="M:ASEva.UIEto.SplitterExtensions.SetPanel1(Eto.Forms.Splitter)">
            <summary>
            设置面板1
            </summary>
            <param name="splitter">分屏控件</param>
            <returns>面板1对象</returns>
        </member>
        <member name="M:ASEva.UIEto.SplitterExtensions.SetPanel2(Eto.Forms.Splitter)">
            <summary>
            设置面板2
            </summary>
            <param name="splitter">分屏控件</param>
            <returns>面板2对象</returns>
        </member>
        <member name="T:ASEva.UIEto.StackLayoutExtensions">
            <summary>
            (api:eto=2.0.2) 方便操作堆叠布局的扩展
            </summary>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddSpace(Eto.Forms.StackLayout)">
            <summary>
            添加空间延布局方向撑满
            </summary>
            <param name="stackLayout">堆叠布局</param>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddSeparator(Eto.Forms.StackLayout)">
            <summary>
            (api:eto=2.3.3) 添加分割线
            </summary>
            <param name="stackLayout">堆叠布局</param>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddLabel(Eto.Forms.StackLayout,System.String,System.Boolean)">
            <summary>
            添加文字标签至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="text">文字</param>
            <param name="expand">是否延布局方向撑满</param>
            <returns>创建的文字标签对象</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddLabel(Eto.Forms.StackLayout,System.String,Eto.Forms.TextAlignment,System.Boolean,System.Int32,System.Int32)">
            <summary>
            添加文字标签至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="text">文字</param>
            <param name="alignment">文字对齐</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
            <returns>创建的文字标签对象</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddButton(Eto.Forms.StackLayout,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            添加文字按键至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="text">文字</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
            <returns>创建的按键对象</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddButton(Eto.Forms.StackLayout,Eto.Drawing.Image,System.Boolean,System.Int32,System.Int32)">
            <summary>
            (api:eto=2.0.4) 添加图像按键至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="image">图像</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
            <returns>创建的按键对象</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddButtonPanel(Eto.Forms.StackLayout,System.String,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            (api:eto=2.3.3) 添加文字按键面板至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="text">文字</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
            <param name="logicalPadding">按钮边框与文字的间距</param>
            <returns>创建的按键面板对象</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddButtonPanel(Eto.Forms.StackLayout,Eto.Drawing.Bitmap,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            (api:eto=2.3.3) 添加图像按键面板至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="image">图像</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
            <param name="logicalPadding">按钮边框与文字的间距</param>
            <returns>创建的按键面板对象</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddLinkButton(Eto.Forms.StackLayout,System.String,System.Boolean)">
            <summary>
            添加链接式按键至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="text">文字</param>
            <param name="expand">是否延布局方向撑满</param>
            <returns>创建的链接式按键对象</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddCheckBox(Eto.Forms.StackLayout,System.String,System.Boolean,System.Boolean)">
            <summary>
            添加多选框至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="text">文字</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="isChecked">初始状态是否勾选</param>
            <returns>创建的多选框对象</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddRadioButtonList(Eto.Forms.StackLayout,System.String[],System.Boolean,System.Int32,System.Int32)">
            <summary>
            添加单选框组至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="texts">各单选框的文字</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="selectedIndex">初始的选中单选框序号</param>
            <param name="logicalSpacing">单选框间的间隙</param>
            <returns>创建的单选框组对象</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddComboBox(Eto.Forms.StackLayout,System.String[],System.Boolean,System.Int32)">
            <summary>
            添加组合框至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="texts">组合框各选项的文字，可为空</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="selectedIndex">初始的选项序号</param>
            <returns>创建的组合框对象</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddGroupBox(Eto.Forms.StackLayout,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            添加分组框至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="title">标题</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
            <returns>创建的分组框对象</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddControl(Eto.Forms.StackLayout,Eto.Forms.Control,System.Boolean,System.Int32,System.Int32)">
            <summary>
            添加控件至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="control">控件</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddRowLayout(Eto.Forms.StackLayout,System.Boolean,System.Int32,Eto.Forms.VerticalAlignment)">
            <summary>
            添加横向堆叠布局至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="logicalSpacing">横向堆叠布局中各控件的间隙</param>
            <param name="alignment">横向堆叠布局中各控件的纵向对齐方式</param>
            <returns>创建的横向堆叠布局</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddRowLayout(Eto.Forms.StackLayout,System.Boolean,System.Int32,System.Int32,System.Int32,Eto.Forms.VerticalAlignment)">
            <summary>
            (api:eto=2.4.0) 添加横向堆叠布局至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
            <param name="logicalSpacing">横向堆叠布局中各控件的间隙</param>
            <param name="alignment">横向堆叠布局中各控件的纵向对齐方式</param>
            <returns>创建的横向堆叠布局</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddColumnLayout(Eto.Forms.StackLayout,System.Boolean,System.Int32,Eto.Forms.HorizontalAlignment)">
            <summary>
            添加纵向堆叠布局至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="logicalSpacing">纵向堆叠布局中各控件的间隙</param>
            <param name="alignment">纵向堆叠布局中各控件的横向对齐方式</param>
            <returns>创建的纵向堆叠布局</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddColumnLayout(Eto.Forms.StackLayout,System.Boolean,System.Int32,System.Int32,System.Int32,Eto.Forms.HorizontalAlignment)">
            <summary>
            (api:eto=2.4.0) 添加纵向堆叠布局至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
            <param name="logicalSpacing">纵向堆叠布局中各控件的间隙</param>
            <param name="alignment">纵向堆叠布局中各控件的横向对齐方式</param>
            <returns>创建的纵向堆叠布局</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddTableLayout(Eto.Forms.StackLayout,System.Boolean,System.Int32,System.Int32)">
            <summary>
            添加表布局至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="logicalSpacingX">表布局中各控件的横向间隙</param>
            <param name="logicalSpacingY">表布局中各控件的纵向间隙</param>
            <returns>创建的表布局</returns>
        </member>
        <member name="M:ASEva.UIEto.StackLayoutExtensions.AddTableLayout(Eto.Forms.StackLayout,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            (api:eto=2.4.0) 添加表布局至堆叠布局
            </summary>
            <param name="stackLayout">堆叠布局</param>
            <param name="expand">是否延布局方向撑满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
            <param name="logicalSpacingX">表布局中各控件的横向间隙</param>
            <param name="logicalSpacingY">表布局中各控件的纵向间隙</param>
            <returns>创建的表布局</returns>
        </member>
        <member name="T:ASEva.UIEto.TabControlExtensions">
            <summary>
            (api:eto=2.0.2) 方便操作选项卡控件的扩展
            </summary>
        </member>
        <member name="M:ASEva.UIEto.TabControlExtensions.AddPage(Eto.Forms.TabControl,System.String)">
            <summary>
            添加页至选项卡控件
            </summary>
            <param name="tabControl">选项卡控件</param>
            <param name="title">页标题</param>
            <returns>页对象</returns>
        </member>
        <member name="T:ASEva.UIEto.TableLayoutExtensions">
            <summary>
            (api:eto=2.0.2) 方便操作表布局的扩展
            </summary>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddRow(Eto.Forms.TableLayout,System.Boolean)">
            <summary>
            表布局添加一行
            </summary>
            <param name="tableLayout">表布局</param>
            <param name="expandHeight">是否纵向撑满</param>
            <returns>表布局的行</returns>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddSpace(Eto.Forms.TableRow)">
            <summary>
            添加空间延横向撑满
            </summary>
            <param name="tableRow">表布局的行</param>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddLabel(Eto.Forms.TableRow,System.String,System.Boolean)">
            <summary>
            添加文字标签至表布局的行
            </summary>
            <param name="tableRow">表布局的行</param>
            <param name="text">文字</param>
            <param name="expandWidth">是否横向撑满</param>
            <returns>创建的文字标签对象</returns>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddLabel(Eto.Forms.TableRow,System.String,Eto.Forms.TextAlignment,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            添加文字标签至表布局的行
            </summary>
            <param name="tableRow">表布局的行</param>
            <param name="text">文字</param>
            <param name="alignment">文字对齐</param>
            <param name="expandWidth">是否横向撑满</param>
            <param name="fillHeight">是否纵向填满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
            <returns>创建的文字标签对象</returns>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddButton(Eto.Forms.TableRow,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            添加文字按键至表布局的行
            </summary>
            <param name="tableRow">表布局的行</param>
            <param name="text">文字</param>
            <param name="expandWidth">是否横向撑满</param>
            <param name="fillHeight">是否纵向填满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
            <returns>创建的按键对象</returns>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddButton(Eto.Forms.TableRow,Eto.Drawing.Image,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            (api:eto=2.0.4) 添加图像按键至表布局的行
            </summary>
            <param name="tableRow">表布局的行</param>
            <param name="image">图像</param>
            <param name="expandWidth">是否横向撑满</param>
            <param name="fillHeight">是否纵向填满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
            <returns>创建的按键对象</returns>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddLinkButton(Eto.Forms.TableRow,System.String,System.Boolean,System.Boolean)">
            <summary>
            添加链接式按键至表布局的行
            </summary>
            <param name="tableRow">表布局的行</param>
            <param name="text">文字</param>
            <param name="expandWidth">是否横向撑满</param>
            <param name="fillHeight">是否纵向填满</param>
            <returns>创建的链接式按键对象</returns>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddCheckBox(Eto.Forms.TableRow,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            添加多选框至表布局的行
            </summary>
            <param name="tableRow">表布局的行</param>
            <param name="text">文字</param>
            <param name="expandWidth">是否横向撑满</param>
            <param name="fillHeight">是否纵向填满</param>
            <param name="isChecked">初始状态是否勾选</param>
            <returns>创建的多选框对象</returns>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddRadioButtonList(Eto.Forms.TableRow,System.String[],System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            添加单选框组至表布局的行
            </summary>
            <param name="tableRow">表布局的行</param>
            <param name="texts">各单选框的文字</param>
            <param name="expandWidth">是否横向撑满</param>
            <param name="fillHeight">是否纵向填满</param>
            <param name="selectedIndex">初始的选中单选框序号</param>
            <param name="logicalSpacing">单选框间的间隙</param>
            <returns>创建的单选框组对象</returns>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddComboBox(Eto.Forms.TableRow,System.String[],System.Boolean,System.Boolean,System.Int32)">
            <summary>
            添加组合框至表布局的行
            </summary>
            <param name="tableRow">表布局的行</param>
            <param name="texts">组合框各选项的文字，可为空</param>
            <param name="expandWidth">是否横向撑满</param>
            <param name="fillHeight">是否纵向填满</param>
            <param name="selectedIndex">初始的选项序号</param>
            <returns>创建的组合框对象</returns>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddGroupBox(Eto.Forms.TableRow,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            添加分组框至表布局的行
            </summary>
            <param name="tableRow">表布局的行</param>
            <param name="title">标题</param>
            <param name="expandWidth">是否横向撑满</param>
            <param name="fillHeight">是否纵向填满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
            <returns>创建的分组框对象</returns>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddControl(Eto.Forms.TableRow,Eto.Forms.Control,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            添加控件至表布局的行
            </summary>
            <param name="tableRow">表布局的行</param>
            <param name="control">控件</param>
            <param name="expandWidth">是否横向撑满</param>
            <param name="fillHeight">是否纵向填满</param>
            <param name="logicalWidth">初始宽度，0表示不设置</param>
            <param name="logicalHeight">初始高度，0表示不设置</param>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddRowLayout(Eto.Forms.TableRow,System.Boolean,System.Boolean,System.Int32,Eto.Forms.VerticalAlignment)">
            <summary>
            添加横向堆叠布局至表布局的行
            </summary>
            <param name="tableRow">表布局的行</param>
            <param name="expandWidth">是否横向撑满</param>
            <param name="fillHeight">是否纵向填满</param>
            <param name="logicalSpacing">横向堆叠布局中各控件的间隙</param>
            <param name="alignment">横向堆叠布局中各控件的纵向对齐方式</param>
            <returns>创建的横向堆叠布局</returns>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddColumnLayout(Eto.Forms.TableRow,System.Boolean,System.Boolean,System.Int32,Eto.Forms.HorizontalAlignment)">
            <summary>
            添加纵向堆叠布局至表布局的行
            </summary>
            <param name="tableRow">表布局的行</param>
            <param name="expandWidth">是否横向撑满</param>
            <param name="fillHeight">是否纵向填满</param>
            <param name="logicalSpacing">纵向堆叠布局中各控件的间隙</param>
            <param name="alignment">纵向堆叠布局中各控件的横向对齐方式</param>
            <returns>创建的纵向堆叠布局</returns>
        </member>
        <member name="M:ASEva.UIEto.TableLayoutExtensions.AddTableLayout(Eto.Forms.TableRow,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            添加表布局至表布局的行
            </summary>
            <param name="tableRow">表布局的行</param>
            <param name="expandWidth">是否横向撑满</param>
            <param name="fillHeight">是否纵向填满</param>
            <param name="logicalSpacingX">表布局中各控件的横向间隙</param>
            <param name="logicalSpacingY">表布局中各控件的纵向间隙</param>
            <returns>创建的表布局</returns>
        </member>
        <member name="T:ASEva.UIEto.WindowExtensions">
            <summary>
            (api:eto=2.0.9) 方便操作窗口的扩展
            </summary>
        </member>
        <member name="M:ASEva.UIEto.WindowExtensions.MoveToCenter(Eto.Forms.Window,Eto.Forms.Screen)">
            <summary>
            将窗口移动至屏幕中央
            </summary>
            <param name="window">窗口</param>
            <param name="screen">目标屏幕，空表示主屏幕</param>
        </member>
        <member name="T:ASEva.UIEto.ImageConverter">
            <summary>
            (api:eto=2.2.0) 图像对象转换
            </summary>
        </member>
        <member name="T:ASEva.UIEto.OverlayLayout">
            <summary>
            (api:eto=2.0.4) 可覆盖的布局
            </summary>
        </member>
        <member name="M:ASEva.UIEto.OverlayLayout.AddControl(Eto.Forms.Control,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            添加控件
            </summary>
            <param name="control">控件</param>
            <param name="topLogicalPadding">控件与顶部间隔，null表示不关联</param>
            <param name="bottomLogicalPadding">控件与底部间隔，null表示不关联</param>
            <param name="leftLogicalPadding">控件与左侧间隔，null表示不关联</param>
            <param name="rightLogicalPadding">控件与右侧间隔，null表示不关联</param>
            <returns>新添加的控件</returns>
        </member>
        <member name="M:ASEva.UIEto.OverlayLayout.RemoveControl(Eto.Forms.Control)">
            <summary>
            移除控件
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:ASEva.UIEto.OverlayLayout.UpdatePosition(Eto.Forms.Control)">
            <summary>
            更新控件位置（一般在手动修改控件大小后调用）
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="T:ASEva.UIEto.Pixel">
            <summary>
            (api:eto=2.4.0) 像素单位转换
            </summary>
        </member>
        <member name="M:ASEva.UIEto.Pixel.FromLogicalValue(System.Int32)">
            <summary>
            逻辑像素值转原始像素值
            </summary>
        </member>
        <member name="M:ASEva.UIEto.Pixel.ToLogicalValue(System.Int32)">
            <summary>
            原始像素值转逻辑像素值
            </summary>
        </member>
        <member name="M:ASEva.UIEto.Pixel.FromLogicalPoint(Eto.Drawing.Point)">
            <summary>
            逻辑点坐标转原始点坐标
            </summary>
        </member>
        <member name="M:ASEva.UIEto.Pixel.ToLogicalPoint(Eto.Drawing.Point)">
            <summary>
            原始点坐标转逻辑点坐标
            </summary>
        </member>
        <member name="M:ASEva.UIEto.Pixel.FromLogicalSize(Eto.Drawing.Size)">
            <summary>
            逻辑尺寸转原始尺寸
            </summary>
        </member>
        <member name="M:ASEva.UIEto.Pixel.ToLogicalSize(Eto.Drawing.Size)">
            <summary>
            原始尺寸转逻辑尺寸
            </summary>
        </member>
        <member name="P:ASEva.UIEto.Pixel.Scale">
            <summary>
            像素单位比例，用于优化在非默认DPI下的显示
            </summary>
        </member>
        <member name="T:ASEva.UIEto.TextTableView">
            <summary>
            (api:eto=2.0.3) 纯文字的表格控件
            </summary>
        </member>
        <member name="M:ASEva.UIEto.TextTableView.AddColumn(System.String,System.Int32,System.Boolean)">
            <summary>
            添加一列（需要在添加行之前进行）
            </summary>
            <param name="title">列标题</param>
            <param name="logicalWidth">列宽度</param>
            <param name="editable">是否可编辑该列文字</param>
        </member>
        <member name="M:ASEva.UIEto.TextTableView.GetRowCount">
            <summary>
            (api:eto=2.0.10) 获取行数
            </summary>
            <returns>行数</returns>
        </member>
        <member name="M:ASEva.UIEto.TextTableView.AddRow(System.String[])">
            <summary>
            添加一行
            </summary>
            <param name="values">该行的初始文字，设为null则默认为空</param>
        </member>
        <member name="M:ASEva.UIEto.TextTableView.RemoveRow(System.Int32)">
            <summary>
            移除一行
            </summary>
            <param name="rowIndex">行序号</param>
        </member>
        <member name="M:ASEva.UIEto.TextTableView.RemoveAllRows">
            <summary>
            (api:eto=2.0.10) 移除所有行
            </summary>
        </member>
        <member name="M:ASEva.UIEto.TextTableView.GetValue(System.Int32,System.Int32)">
            <summary>
            获取某格文字
            </summary>
            <param name="rowIndex">行序号</param>
            <param name="columnIndex">列序号</param>
            <returns>该格文字</returns>
        </member>
        <member name="M:ASEva.UIEto.TextTableView.SetValue(System.Int32,System.Int32,System.String)">
            <summary>
            设置某格文字
            </summary>
            <param name="rowIndex">行序号</param>
            <param name="columnIndex">列序号</param>
            <param name="val">该格文字</param>
        </member>
        <member name="T:ASEva.UIEto.WindowPanel">
            <summary>
            (api:eto=2.0.0) 窗口控件，用于实现窗口组件的实际功能
            </summary>
        </member>
        <member name="M:ASEva.UIEto.WindowPanel.OnInitSize(System.String)">
            <summary>
            (api:eto=2.2.1) [可选实现] 在初始化控件尺寸时被调用
            </summary>
            <param name="config">配置字符串</param>
        </member>
        <member name="M:ASEva.UIEto.WindowPanel.OnGetMinimumSize">
            <summary>
            [必须实现] 获取最小尺寸时被调用
            </summary>
            <returns>默认DPI下的最小尺寸，将被调整为至少100x50</returns>
        </member>
        <member name="M:ASEva.UIEto.WindowPanel.OnGetDefaultSize">
            <summary>
            [可选实现] 获取默认尺寸时被调用（若不实现默认尺寸即为最小尺寸）
            </summary>
            <returns>默认DPI下的默认尺寸，将被调整为至少100x50</returns>
        </member>
        <member name="M:ASEva.UIEto.WindowPanel.OnInit(System.String)">
            <summary>
            [可选实现] 在配置界面控件初始化时被调用
            </summary>
            <param name="config">配置字符串</param>
        </member>
        <member name="M:ASEva.UIEto.WindowPanel.OnGetConfig">
            <summary>
            [可选实现] 获取配置字符串时被调用
            </summary>
            <returns>配置字符串</returns>
        </member>
        <member name="M:ASEva.UIEto.WindowPanel.OnInputData(System.Object)">
            <summary>
            [可选实现] 在获得新数据时被调用。如果存在样本缓存，则需要在添加至缓存后使用 ASEva.Sample.ClipWithBufferBegin 将缓存范围外数据移除。另外，由于窗口隐藏时将不会调用 ASEva.WindowPanel.OnUpdateUI ，所以可以在此函数中的data为 ASEva.Samples.ManualTriggerSample 时进行后台处理（ManualTriggerSample频率为50Hz）
            </summary>
            <param name="data">新数据，包括通用样本 ASEva.GeneralSample , 手动触发器样本 ASEva.Samples.ManualTriggerSample , 音频帧样本 ASEva.Samples.AudioFrameSample , 点云帧样本 ASEva.Samples.PointCloudSample , 总线数据 ASEva.Samples.BusDataPack , 信号数据 ASEva.Samples.SignalsData , 事件数据 ASEva.EventData , 场景片段描述 ASEva.SceneData 等类型</param>
        </member>
        <member name="M:ASEva.UIEto.WindowPanel.OnResetData">
            <summary>
            [可选实现] 在需要重置数据缓存时被调用
            </summary>
        </member>
        <member name="M:ASEva.UIEto.WindowPanel.OnStartSession">
            <summary>
            [可选实现] 在每轮开始时被调用
            </summary>
        </member>
        <member name="M:ASEva.UIEto.WindowPanel.OnStopSession">
            <summary>
            [可选实现] 在每轮结束时被调用
            </summary>
        </member>
        <member name="M:ASEva.UIEto.WindowPanel.OnUpdateUI">
            <summary>
            [可选实现] 在需要更新界面时被调用。所有与界面相关的更新应全部放在此函数内实现。需要注意，窗口隐藏时将不会调用此函数
            </summary>
        </member>
        <member name="M:ASEva.UIEto.WindowPanel.OnRelease">
            <summary>
            [可选实现] 在窗口控件销毁前被调用
            </summary>
        </member>
    </members>
</doc>
